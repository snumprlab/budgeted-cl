[2025-02-17 11:19:39,857] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2025-02-17 11:19:41,583] [WARNING] [runner.py:202:fetch_hostfile] Unable to find hostfile, will proceed with training with local resources only.
Detected CUDA_VISIBLE_DEVICES=0 but ignoring it because one or several of --include/--exclude/--num_gpus/--num_nodes cl args were used. If you want to use CUDA_VISIBLE_DEVICES don't pass any of these arguments to deepspeed.
[2025-02-17 11:19:41,591] [INFO] [runner.py:568:main] cmd = /home/mila/s/sparsha.mishra/scratch/budgeted_CL_llava/bin/python -u -m deepspeed.launcher.launch --world_info=eyJsb2NhbGhvc3QiOiBbMF19 --master_addr=127.0.0.1 --master_port=26004 --enable_each_rank_log=None main_new_llava_trainer.py --deepspeed ./deepspeed_script/zero2.json --model_name_or_path ./llava-v1.5-7b --model_name_for_dataarg ./llava-v1.5-7b --model_type llama --version v1 --model_max_length 10000 --vision_tower ./clip-vit-large-patch14-336 --gradient_checkpointing True --num_train_epochs 1 --gradient_accumulation_steps 1 --bits 16 --bf16 True --tf32 True --dataset Bongard-OpenWorld --num_set 9 --data_type ma_ver3_more --mode VLM --dataloader_num_workers 2 --seed 2 --optim adamw_torch --lr_scheduler_type constant --weight_decay 0. --warmup_ratio 0.03 --learning_rate 5e-5 --per_gpu_train_batch_size 2 --mm_projector_lr 0 --evaluation_strategy no --save_strategy no --logging_steps 2 --num_iter 0.5 --note Bongard-OpenWorld_ma_ver3_more_num9_iter0.5_infinite_ours --ours --output_dir ./results/test/
[2025-02-17 11:19:46,561] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2025-02-17 11:19:47,876] [INFO] [launch.py:145:main] WORLD INFO DICT: {'localhost': [0]}
[2025-02-17 11:19:47,876] [INFO] [launch.py:151:main] nnodes=1, num_local_procs=1, node_rank=0
[2025-02-17 11:19:47,876] [INFO] [launch.py:162:main] global_rank_mapping=defaultdict(<class 'list'>, {'localhost': [0]})
[2025-02-17 11:19:47,877] [INFO] [launch.py:163:main] dist_world_size=1
[2025-02-17 11:19:47,877] [INFO] [launch.py:165:main] Setting CUDA_VISIBLE_DEVICES=0
[2025-02-17 11:19:47,880] [INFO] [launch.py:253:main] process 2651010 spawned with command: ['/home/mila/s/sparsha.mishra/scratch/budgeted_CL_llava/bin/python', '-u', 'main_new_llava_trainer.py', '--local_rank=0', '--deepspeed', './deepspeed_script/zero2.json', '--model_name_or_path', './llava-v1.5-7b', '--model_name_for_dataarg', './llava-v1.5-7b', '--model_type', 'llama', '--version', 'v1', '--model_max_length', '10000', '--vision_tower', './clip-vit-large-patch14-336', '--gradient_checkpointing', 'True', '--num_train_epochs', '1', '--gradient_accumulation_steps', '1', '--bits', '16', '--bf16', 'True', '--tf32', 'True', '--dataset', 'Bongard-OpenWorld', '--num_set', '9', '--data_type', 'ma_ver3_more', '--mode', 'VLM', '--dataloader_num_workers', '2', '--seed', '2', '--optim', 'adamw_torch', '--lr_scheduler_type', 'constant', '--weight_decay', '0.', '--warmup_ratio', '0.03', '--learning_rate', '5e-5', '--per_gpu_train_batch_size', '2', '--mm_projector_lr', '0', '--evaluation_strategy', 'no', '--save_strategy', 'no', '--logging_steps', '2', '--num_iter', '0.5', '--note', 'Bongard-OpenWorld_ma_ver3_more_num9_iter0.5_infinite_ours', '--ours', '--output_dir', './results/test/']
[2025-02-17 11:20:00,491] [INFO] [real_accelerator.py:191:get_accelerator] Setting ds_accelerator to cuda (auto detect)
[2025-02-17 11:20:01,490] [INFO] [comm.py:637:init_distributed] cdb=None
[2025-02-17 11:20:01,490] [INFO] [comm.py:668:init_distributed] Initializing TorchBackend in DeepSpeed with backend nccl
[INFO] TrainingArguments(
_n_gpu=1,
accelerator_config={'split_batches': False, 'dispatch_batches': None, 'even_batches': True, 'use_seedable_sampler': True, 'gradient_accumulation_kwargs': None},
adafactor=False,
adam_beta1=0.9,
adam_beta2=0.999,
adam_epsilon=1e-08,
auto_find_batch_size=False,
bf16=True,
bf16_full_eval=False,
bits=16,
cache_dir=None,
data_seed=None,
dataloader_drop_last=False,
dataloader_num_workers=2,
dataloader_persistent_workers=False,
dataloader_pin_memory=True,
dataloader_prefetch_factor=None,
ddp_backend=None,
ddp_broadcast_buffers=None,
ddp_bucket_cap_mb=None,
ddp_find_unused_parameters=None,
ddp_timeout=1800,
debug=[],
decay_ratio=1.0,
deepspeed=./deepspeed_script/zero2.json,
disable_tqdm=False,
dispatch_batches=None,
do_eval=False,
do_predict=False,
do_train=False,
double_quant=True,
eval_accumulation_steps=None,
eval_delay=0,
eval_do_concat_batches=True,
eval_period=100,
eval_point=100_200_300,
eval_server=True,
eval_steps=None,
eval_temp=0.2,
evaluation_strategy=no,
f_period=None,
final_lr=1e-06,
fp16=False,
fp16_backend=auto,
fp16_full_eval=False,
fp16_opt_level=O1,
freeze_mm_mlp_adapter=False,
fsdp=[],
fsdp_config={'min_num_params': 0, 'xla': False, 'xla_fsdp_v2': False, 'xla_fsdp_grad_ckpt': False},
fsdp_min_num_params=0,
fsdp_transformer_layer_cls_to_wrap=None,
full_determinism=False,
future_steps=4,
gradient_accumulation_steps=1,
gradient_checkpointing=True,
gradient_checkpointing_kwargs=None,
greater_is_better=None,
group_by_length=False,
group_by_modality_length=True,
half_precision_backend=auto,
hub_always_push=False,
hub_model_id=None,
hub_private_repo=False,
hub_strategy=every_save,
hub_token=<HUB_TOKEN>,
ignore_data_skip=False,
include_inputs_for_metrics=False,
include_num_input_tokens_seen=False,
include_tokens_per_second=False,
is_eval=False,
is_wsd=None,
iter_per_round=1,
jit_mode_eval=False,
label_names=None,
label_smoothing_factor=0.0,
learning_rate=5e-05,
length_column_name=length,
load_best_model_at_end=False,
local_rank=0,
log_level=passive,
log_level_replica=warning,
log_on_each_node=True,
logging_dir=./results/test/runs/Feb17_11-20-01_cn-g004.server.mila.quebec,
logging_first_step=False,
logging_nan_inf_filter=True,
logging_steps=2,
logging_strategy=steps,
lora_alpha=256,
lora_bias=none,
lora_dropout=0.05,
lora_enable=True,
lora_r=128,
lora_weight_path=,
lr_scheduler_kwargs={},
lr_scheduler_type=constant,
max_grad_norm=1.0,
max_steps=-1,
memory_size=500,
metric_for_best_model=None,
mm_final_lr=1e-06,
mm_projector_lr=0.0,
mode=VLM,
model_max_length=10000,
mp_parameters=,
mpt_attn_impl=triton,
neftune_noise_alpha=None,
no_cuda=False,
note=Bongard-OpenWorld_ma_ver3_more_num9_iter0.5_infinite_ours,
num_clients=5,
num_iter=0.5,
num_rounds=20,
num_train_epochs=1.0,
online_iter=1.0,
optim=adamw_torch,
optim_args=None,
optim_target_modules=None,
output_dir=./results/test/,
overwrite_output_dir=False,
past_index=-1,
per_device_eval_batch_size=8,
per_device_train_batch_size=8,
prediction_loss_only=False,
prompt_num=100,
push_to_hub=False,
push_to_hub_model_id=None,
push_to_hub_organization=None,
push_to_hub_token=<PUSH_TO_HUB_TOKEN>,
quant_type=nf4,
ray_scope=last,
remove_unused_columns=False,
report_to=['tensorboard'],
resume_from_checkpoint=None,
round_to_eval=None,
run_name=./results/test/,
save_on_each_node=False,
save_only_model=False,
save_safetensors=True,
save_steps=500,
save_strategy=no,
save_total_limit=None,
scenario=1,
seed=2,
skip_memory_metrics=True,
split_batches=None,
state_dir=./checkpoints,
temp_batchsize=2,
tf32=True,
topk=1,
torch_compile=False,
torch_compile_backend=None,
torch_compile_mode=None,
torchdynamo=None,
tpu_metrics_debug=False,
tpu_num_cores=None,
transform_on_gpu=True,
transform_on_worker=False,
transforms=randaug,
use_cpu=False,
use_ipex=False,
use_kornia=True,
use_legacy_prediction_loop=False,
use_mps_device=False,
warmup_ratio=0.03,
warmup_steps=0,
weight_decay=0.0,
)
!! collections/Bongard-OpenWorld/ma_ver3_more/9_set/Bongard-OpenWorld_train_seed2.json
num_train_samples 8106 num_test_samples 276
eval_point
[1176 3108 5544 6636 8106]
model loading done
len(train_datalists) 8106 len(datalists) 8106
seen_commonsenses
['1', '8']
load skip
@@ours@@
self.num_blocks 31
Warning: module Embedding is treated as a zero-op.
Warning: module Dropout is treated as a zero-op.
Warning: module ModuleDict is treated as a zero-op.
Warning: module ParameterDict is treated as a zero-op.
Warning: module Linear is treated as a zero-op.
Warning: module LlamaRotaryEmbedding is treated as a zero-op.
Warning: module LlamaFlashAttention2 is treated as a zero-op.
Warning: module SiLU is treated as a zero-op.
Warning: module LlamaMLP is treated as a zero-op.
Warning: module LlamaRMSNorm is treated as a zero-op.
Warning: module LlamaDecoderLayer is treated as a zero-op.
Warning: module CLIPVisionEmbeddings is treated as a zero-op.
Warning: module LayerNorm is treated as a zero-op.
Warning: module CLIPAttention is treated as a zero-op.
Warning: module QuickGELUActivation is treated as a zero-op.
Warning: module CLIPMLP is treated as a zero-op.
Warning: module CLIPEncoderLayer is treated as a zero-op.
Warning: module CLIPEncoder is treated as a zero-op.
Warning: module CLIPVisionTransformer is treated as a zero-op.
Warning: module CLIPVisionModel is treated as a zero-op.
Warning: module CLIPVisionTower is treated as a zero-op.
Warning: module LlavaLlamaModel is treated as a zero-op.
Warning: module LlavaLlamaForCausalLM is treated as a zero-op.
Warning: module LoraModel is treated as a zero-op.
Warning: module PeftModelForCausalLM is treated as a zero-op.
Check! input_ids torch.Size([2, 157])
Check! labels torch.Size([2, 157])
Check! attention_mask torch.Size([2, 157])
Check! images torch.Size([2, 5, 3, 336, 336])
conv input shape torch.Size([10, 3, 336, 336]) output shape torch.Size([10, 1024, 24, 24])
in_channels 3 out_channels 1024 filters_per_channel 1024 kernel_dim [14, 14] output_dims [24, 24]

matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 577, 1024]) output shape torch.Size([10, 577, 4096])
matrix input shape torch.Size([10, 577, 4096]) output shape torch.Size([10, 577, 1024])
matrix input shape torch.Size([10, 576, 1024]) output shape torch.Size([10, 576, 4096])
matrix input shape torch.Size([10, 576, 4096]) output shape torch.Size([10, 576, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 11008])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 11008]) output shape torch.Size([2, 157, 128])
matrix input shape torch.Size([2, 157, 128]) output shape torch.Size([2, 157, 4096])
matrix input shape torch.Size([2, 157, 4096]) output shape torch.Size([2, 157, 32000])
!!!!!!!!!!!
forward_flops_count 7547090944.0 backward_flops_count 15070588928.0
!!!!!!!!!!!
blockwise_backward_flops 32
[0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999, 0.004567295999999999]
cumulative_backward_flops
[0.004567295999999999, 0.009134591999999999, 0.013701887999999999, 0.018269183999999997, 0.022836479999999996, 0.027403775999999994, 0.031971071999999996, 0.036538367999999995, 0.04110566399999999, 0.04567295999999999, 0.05024025599999999, 0.05480755199999999, 0.05937484799999999, 0.06394214399999999, 0.06850943999999999, 0.07307673599999999, 0.07764403199999999, 0.08221132799999999, 0.08677862399999998, 0.09134591999999998, 0.09591321599999998, 0.10048051199999998, 0.10504780799999998, 0.10961510399999998, 0.11418239999999998, 0.11874969599999997, 0.12331699199999997, 0.12788428799999998, 0.13245158399999998, 0.13701887999999998, 0.14158617599999998]

whole 0.14615347199999998
self.total_flops 0.43846041599999996
{'loss': 5.7628, 'grad_norm': 90.55661010742188, 'learning_rate': 5e-05, 'epoch': 0.0}

whole 0.14615347199999998
self.total_flops 0.8769208319999999

whole 0.14615347199999998
self.total_flops 1.315381248
I/C: [1, 0.9760060085733802, 0.9490131571889596, 0.9115290075973054, 0.8086607011740338, 0.7330754665266555, 0.686460545914927, 0.6115347435278389, 0.5723034722518867, 0.5067179596186545, 0.43824007305909835, 0.37125130046434157, 0.3115252411457857, 0.2696057174487228, 0.24512041833663928, 0.2200161327642309, 0.19556942707760078, 0.17704206749757875, 0.16327424563129395, 0.14812118689982423, 0.1338765153641002, 0.1186666038009976, 0.10843456939602619, 0.09692902475355636, 0.08555090319796864, 0.06943467086750396, 0.0550872862771961, 0.042939704684079975, 0.0336288784200005, 0.02258245251139693, 0.011973787978835106, 0.0] 
 BI/C: [1.7029236090994688e+26, 1.627437348067911e+26, 1.5487595394429754e+26, 1.4552477507029317e+26, 1.2623301164651768e+26, 1.1183328192831981e+26, 1.0228661365596092e+26, 8.895265636263324e+25, 8.12157578722784e+25, 7.01107855978821e+25, 5.908124154354366e+25, 4.873305492786561e+25, 3.978777659831728e+25, 3.3477349893139743e+25, 2.95673454449276e+25, 2.5758608347104326e+25, 2.2202652972566886e+25, 1.9471172110224305e+25, 1.7377722977714766e+25, 1.5239443581680882e+25, 1.3298919591853822e+25, 1.13670090688709e+25, 1.000218853113067e+25, 8.59701690936552e+24, 7.284332641780202e+24, 5.665759639869673e+24, 4.299599349955177e+24, 3.1991328632497e+24, 2.386142125373104e+24, 1.5222242481822565e+24, 7.646417339816143e+23, 0.6458333333333333] 
 Grad_Magnitude: 1.7029236090994688e+26
Iter: 3 Freeze: 0
freeze!!
{'loss': 1.6909, 'grad_norm': 8.208797454833984, 'learning_rate': 5e-05, 'epoch': 0.01}

whole 0.14615347199999998
self.total_flops 1.7538416639999999

whole 0.14615347199999998
self.total_flops 2.1923020799999997
I/C: [1, 0.9761750772280501, 0.9493050193604563, 0.9121097064720403, 0.8098820165627064, 0.7347892004082294, 0.6885083707994624, 0.6140212313041408, 0.5750484076087422, 0.5098093483358993, 0.44167354148138266, 0.37492142087838554, 0.31539379725631017, 0.27358776397790036, 0.24909669846361143, 0.22395772386742627, 0.19936668034835778, 0.18076664103916484, 0.16687662560584102, 0.15157673506974786, 0.1371459587732365, 0.12166702847324633, 0.11128812088446799, 0.09950972341925224, 0.08793366615978868, 0.07152714419995339, 0.05658458485190962, 0.044079488542730305, 0.034576092452933145, 0.023230176514430732, 0.012313404710736834, 0.0] 
 BI/C: [100.0, 95.60464297857992, 91.01673102204371, 85.57278498175378, 74.32251818491476, 65.92903253657056, 60.36948244495296, 52.59348017389536, 48.087367300728516, 41.609509552291826, 35.174155367276136, 29.12935952604222, 23.904534794223267, 20.21994112338857, 17.936016141172477, 15.70959351588556, 13.624445356557187, 12.028678900446065, 10.804789100365065, 9.553594410463935, 8.416847595105462, 7.281270351620106, 6.486439881242016, 5.661964761419388, 4.896683307989434, 3.9481756595811, 3.1351268057125243, 2.490977623744451, 2.0240038522055475, 1.52369448702955, 1.0867526766526314, 0.6458333333333333] 
 Grad_Magnitude: 100.0
Iter: 5 Freeze: 0
freeze!!
{'loss': 0.7489, 'grad_norm': 6.119085311889648, 'learning_rate': 5e-05, 'epoch': 0.01}

whole 0.14615347199999998
self.total_flops 2.6307624959999996
I/C: [1, 0.9762183194605709, 0.9493698114985234, 0.9122332985848339, 0.8101387389740612, 0.735151010036257, 0.6889361292779632, 0.6145380322030395, 0.575618970760649, 0.510445522592876, 0.44236976427707986, 0.37565750020515615, 0.31615161498112426, 0.27435425141608755, 0.24984854216198374, 0.22468162334473182, 0.20005089874694154, 0.18142717421150173, 0.16749956333835941, 0.15216433612962618, 0.13769608176200376, 0.12216805926677636, 0.11175788015680775, 0.09992918665830414, 0.08831974029634178, 0.07186620142764104, 0.056827552333841264, 0.044264061307136816, 0.034726376432014004, 0.023319244432990865, 0.012359650131470128, 0.0] 
 BI/C: [44.64471115910129, 42.69583938177921, 40.65999347512526, 38.24349261721948, 33.23770916693756, 29.505958199162116, 27.037685186348444, 23.580641472989054, 21.581952239423625, 18.703312996375065, 15.84333069507205, 13.156905455877949, 10.83587314998677, 9.202006684187376, 8.19271133216055, 7.208706746676186, 6.28747639445055, 5.585264113783705, 5.048731015322905, 4.500138587947569, 4.002651048836048, 3.5054637168436744, 3.1609240679834922, 2.8027654555853685, 2.471504647588509, 2.058213614818605, 1.7044810940855672, 1.4270683514063203, 1.229312102253953, 1.0162612023130793, 0.8319223788051371, 0.6458333333333333] 
 Grad_Magnitude: 44.64471115910129
Iter: 6 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 3.0692229119999994
I/C: [1, 0.9770823499748292, 0.9506826177439276, 0.9147361859270526, 0.8152752146396166, 0.7422735171760904, 0.6974147444805969, 0.6248033969150236, 0.5869847711725817, 0.5233433147654717, 0.45668956747120065, 0.39105503310867656, 0.3323029112813018, 0.29096105479704487, 0.26645873801299197, 0.24090568416937655, 0.21541384682946418, 0.19656995070023942, 0.182078726049211, 0.16618069896538504, 0.15095409063680776, 0.13453548721693778, 0.12362634856431351, 0.11087632840252389, 0.09850962883375787, 0.080991934839969, 0.06162483605201099, 0.04789350943064785, 0.03763676852096506, 0.02536593056103135, 0.013494404907650828, 0.0] 
 BI/C: [34.98301878009877, 33.49001331972931, 31.913675042513894, 30.062718597926878, 26.227389132629533, 23.3662425172431, 21.472963965722194, 18.815788910292888, 17.278749394635337, 15.06285481971471, 12.856300608120156, 10.774386791455004, 8.968719239526457, 7.692799198926728, 6.894417817187857, 6.106480550551767, 5.357217766085643, 4.795310803863261, 4.356039683022505, 3.908157768147586, 3.4971507094801035, 3.084882330193678, 2.8009457231677253, 2.4993691035280685, 2.223082097755955, 1.878476555906103, 1.5297521152586704, 1.2955135486875213, 1.1319365749963128, 0.9554199933048662, 0.8020281326164772, 0.6458333333333333] 
 Grad_Magnitude: 34.98301878009877
Iter: 7 Freeze: 0
freeze!!
{'loss': 0.8171, 'grad_norm': 4.495595455169678, 'learning_rate': 5e-05, 'epoch': 0.01}

whole 0.14615347199999998
self.total_flops 3.5076833279999993
I/C: [1, 0.9771083936791066, 0.9507238303066711, 0.9148092444326403, 0.8154165590865806, 0.7424668823049619, 0.6976409419544286, 0.6250740250999735, 0.5872809970540895, 0.5236710849238345, 0.4570471310094039, 0.3914298673906254, 0.33268876856737145, 0.29134795309266537, 0.2668391798951708, 0.24126876792848306, 0.21574517260668544, 0.19689316707653082, 0.18238664602848795, 0.16646957958761244, 0.15122411317432222, 0.13478513392523533, 0.1238669561720232, 0.11109509239068838, 0.09870773495104924, 0.08116910362545912, 0.06175820427797756, 0.04799457940823086, 0.037718919293849934, 0.0254200328554821, 0.013528884235207433, 0.0] 
 BI/C: [26.1100392412527, 25.00166478312889, 23.830793328697037, 22.455348690997162, 19.599678492741383, 17.470647824780492, 16.063503324392798, 14.086437505957736, 12.944941565603575, 11.296871468707439, 9.655702166224689, 8.10727542327917, 6.76488760181358, 5.817681814245522, 5.226753532868008, 4.643431686332201, 4.0887432819142635, 3.6743237058288556, 3.3513265530526795, 3.021860216869055, 2.7199393920363626, 2.4170753889580348, 2.2101760051041133, 1.9899464697038898, 1.7886314164935333, 1.5363448970682299, 1.28073335453501, 1.1107489038758929, 0.9936843595416938, 0.8668883969175175, 0.7574648868518616, 0.6458333333333333] 
 Grad_Magnitude: 26.1100392412527
Iter: 8 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 3.946143743999999
{'loss': 0.3526, 'grad_norm': 4.115485191345215, 'learning_rate': 5e-05, 'epoch': 0.02}

whole 0.14615347199999998
self.total_flops 4.384604159999999
I/C: [1, 0.9771468534827101, 0.9507850480352918, 0.9149270521686019, 0.8156554408650639, 0.7427988242224343, 0.6980313498439428, 0.625540802539576, 0.5877930675922455, 0.5242375509191746, 0.45766630861604396, 0.3920781418983381, 0.333357551376236, 0.2920251221775666, 0.26751129482115915, 0.2419222409731452, 0.21636072202401863, 0.19749405704630205, 0.18296471819322913, 0.16702416286190688, 0.15176019955689696, 0.13528960962774547, 0.1243548566249813, 0.11153318312967274, 0.0991088626878569, 0.08152281207744796, 0.0620557002118715, 0.04823308766430197, 0.037926917046950656, 0.02556199616201435, 0.01360118163883349, 0.0] 
 BI/C: [18.541226451709026, 17.760886481018748, 16.93585751241633, 15.966127807236857, 13.946314549343734, 12.441942748807676, 11.449562661867585, 10.05270918044736, 9.248670310810445, 8.085005806191429, 6.926174944999525, 5.832824078770595, 4.885643387090514, 4.21890910824748, 3.804991142765547, 3.3963053493417537, 3.007728761535066, 2.719067563988105, 2.495243920433617, 2.266836499361721, 2.0580617986989043, 1.8484948498776304, 1.7072495934040262, 1.556230211087081, 1.4187999332334449, 1.2451095240267898, 1.069019862196852, 0.9537565128714183, 0.8763381489927897, 0.7917721755948932, 0.7195684707911645, 0.6458333333333333] 
 Grad_Magnitude: 18.541226451709026
Iter: 10 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 4.823064575999999
I/C: [1, 0.9771678026246493, 0.9508229386084276, 0.9149998692258106, 0.8158021800694996, 0.7430028460623127, 0.6982739136474095, 0.6258352925073795, 0.588119902517289, 0.5246065422471944, 0.458076097249721, 0.3925196035198654, 0.33382460949089066, 0.29250732296953086, 0.26800096916665234, 0.24240805497187956, 0.21683353864786103, 0.19796399916147686, 0.18342922175375226, 0.16748429233138665, 0.15220582928049278, 0.13571469203160558, 0.1247710443702091, 0.11192206126438202, 0.09947574752846196, 0.08185501282226501, 0.062330674516420936, 0.04846182640640993, 0.03812914311463418, 0.025714774786434618, 0.0136858995477359, 0.0] 
 BI/C: [17.755182731199056, 17.0091722093398, 16.22028356084128, 15.293115509807036, 13.360990381340812, 11.922135541050105, 10.97323331658436, 9.637179564628736, 8.868480280874534, 7.7555190784099155, 6.647136309075117, 5.601302491347949, 4.695337706261448, 4.057775706954704, 3.662204377282086, 3.2714995266839346, 2.8999460672968578, 2.624197840804994, 2.41051209404969, 2.1924523381985543, 1.9930913484501551, 1.7929220254353786, 1.6583052083592875, 1.514164921563312, 1.3831050373452325, 1.2172305486010628, 1.0489007364073921, 0.938946255208387, 0.8654124597434876, 0.7848924995681408, 0.716123367741582, 0.6458333333333333] 
 Grad_Magnitude: 17.755182731199056
Iter: 11 Freeze: 0
freeze!!
{'loss': 0.2459, 'grad_norm': 3.8414533138275146, 'learning_rate': 5e-05, 'epoch': 0.02}

whole 0.14615347199999998
self.total_flops 5.261524991999999
I/C: [1, 0.9771796127740456, 0.9508429343269621, 0.9150410027472051, 0.8158891499101142, 0.743124784633781, 0.6984195951190437, 0.6260084988314911, 0.5883117460433289, 0.5248213570055146, 0.4583124996598887, 0.39277551650900966, 0.33409214639116647, 0.29278348866303694, 0.26827990318885325, 0.24268402079287826, 0.2171014850887879, 0.19823085825708314, 0.1836969876926108, 0.16774788887070824, 0.15246724705935466, 0.13596547032014902, 0.12501834250615634, 0.11215436124591173, 0.09969996624240035, 0.08205659018918385, 0.06250757380930028, 0.04861531807742673, 0.03826666964560196, 0.02580520607280545, 0.013733931533332664, 0.0] 
 BI/C: [15.20719022133358, 14.571402996616836, 13.898830649049392, 13.108002427278036, 11.456766377021486, 10.22783579580997, 9.418374682621819, 8.277355066624596, 7.622140526271498, 6.672109794163541, 5.72596924582139, 4.833363411914524, 4.06045211621807, 3.5173853583699235, 3.1815133269173104, 2.8497476716643195, 2.5343357207194757, 2.301053446809667, 2.1209468968296914, 1.9370468250674087, 1.7691824166568906, 1.60055468351402, 1.4881379293087664, 1.367475367509762, 1.2580781758543593, 1.1187615426287807, 0.9773420923797024, 0.8859447954824036, 0.8258035518490002, 0.7595014348239049, 0.7033204409928105, 0.6458333333333333] 
 Grad_Magnitude: 15.20719022133358
Iter: 12 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 5.699985407999999
I/C: [1, 0.9771821399308798, 0.9508539549937002, 0.915081318453013, 0.8159915040644716, 0.7432759194152897, 0.6986021130972416, 0.6262270299041137, 0.5885528198752046, 0.5250916937437872, 0.45860898025582963, 0.3930886339324277, 0.3344169458827253, 0.2931173986225915, 0.26861975329787263, 0.24301757823479356, 0.21742258503799108, 0.19854940352513312, 0.18401407589279892, 0.16806026657534964, 0.1527704763389577, 0.13626184428543953, 0.1253146569819678, 0.11243317752009363, 0.09996793017286608, 0.08229870413895878, 0.06273051742534885, 0.04881626694464738, 0.03846082996269136, 0.025889642255862322, 0.013776465692252549, 0.0] 
 BI/C: [11.829833315904418, 11.339903879772322, 10.821425303871289, 10.211180751059869, 8.931956523587106, 7.9810770849909325, 7.356303233069104, 6.473637846851288, 5.968734797274323, 5.234544610200882, 4.50333700326933, 3.8136750345520007, 3.2170725458548515, 2.799240601445561, 2.5425565590351833, 2.288964492304754, 2.048048626741659, 1.87110410018566, 1.735534903494998, 1.596992151620263, 1.4708954078973608, 1.3442246341831408, 1.2613278980738927, 1.1719092443959371, 1.0913019754404887, 0.9873403937044324, 0.8817919672743941, 0.8151511317136945, 0.7729105031874921, 0.7253986020293686, 0.6861149848081087, 0.6458333333333333] 
 Grad_Magnitude: 11.829833315904418
Iter: 13 Freeze: 0
freeze!!
{'loss': 0.205, 'grad_norm': 4.893896102905273, 'learning_rate': 5e-05, 'epoch': 0.02}

whole 0.14615347199999998
self.total_flops 6.138445823999999
I/C: [1, 0.977172255891628, 0.9508612933182234, 0.9151246247353321, 0.8161122229172781, 0.743456103961049, 0.6988221964548768, 0.6264983437858285, 0.5888572136379455, 0.5254407293027059, 0.4590016273388484, 0.3935138024510378, 0.3348658862709705, 0.29358310191414794, 0.269094227219118, 0.24348963663478934, 0.21788496135859153, 0.19901354208042432, 0.18447167681346185, 0.16851200107057587, 0.15321358047279834, 0.13669250444799325, 0.12574108256203165, 0.11283841811355928, 0.10035636963639838, 0.08265310356028022, 0.0630434332328374, 0.049095581677352784, 0.038720023811775334, 0.026042002390645552, 0.013861457533841869, 0.0] 
 BI/C: [12.014310490304643, 11.516299824693577, 10.9896118606737, 10.369929417712939, 9.071273504305822, 8.105850753389808, 7.471383490009864, 6.575099387085148, 6.062261165918277, 5.316656553702043, 4.57404888590319, 3.8735101912517793, 3.267387047702862, 2.842748936221175, 2.5816952978460086, 2.3236850657949986, 2.0784917179534323, 1.8983609390878193, 1.7601875011900392, 1.6190022825818535, 1.4904407241600275, 1.361274731951241, 1.276625053947276, 1.1852478075266233, 1.1028562922457357, 0.9966554402227448, 0.8888190497322952, 0.8205591833635497, 0.7771643284444407, 0.7280136947437282, 0.6874509454974057, 0.6458333333333333] 
 Grad_Magnitude: 12.014310490304643
Iter: 14 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 6.576906239999999
{'loss': 0.3039, 'grad_norm': 2.0070900917053223, 'learning_rate': 5e-05, 'epoch': 0.03}

whole 0.14615347199999998
self.total_flops 7.0153666559999985
I/C: [1, 0.9771667783760247, 0.9508781991194705, 0.9152017471406745, 0.816322633011581, 0.743769291929072, 0.6992030607633212, 0.6269684034472652, 0.5893810659673769, 0.5260455675372554, 0.45967574588437216, 0.39423902819445145, 0.3356297506951628, 0.29436712565323264, 0.269886716979122, 0.244264588688662, 0.21863505038187023, 0.19976219314562405, 0.18520732482252342, 0.16922775710386642, 0.15390519013201723, 0.13735611546977672, 0.12639080193143518, 0.11345244416517206, 0.10093648353742275, 0.08316853652612136, 0.06346242227770103, 0.04944936978406129, 0.03903662083909791, 0.02626384383158938, 0.01399594936824576, 0.0] 
 BI/C: [10.822307896380535, 10.375716413747506, 9.903584282708968, 9.348057901432922, 8.181620304132435, 7.314998168511714, 6.746116954963288, 5.941563525828038, 5.482052803496601, 4.8130845182742155, 4.14667902644675, 3.5179857806653625, 2.9742163759063684, 2.5937626748690366, 2.3605646467063877, 2.129910778542872, 1.910757221448847, 1.750385974346325, 1.6277316836839437, 1.502325247245131, 1.3882721234348119, 1.2736619723489055, 1.1992467607934045, 1.1186548345585485, 1.0461828514099671, 0.9521195150056727, 0.8564545254638916, 0.7966308834747258, 0.7593609708145759, 0.7166765142764663, 0.6818006775119906, 0.6458333333333333] 
 Grad_Magnitude: 10.822307896380535
Iter: 16 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 7.453827071999998
{'loss': 0.1838, 'grad_norm': 3.4254813194274902, 'learning_rate': 5e-05, 'epoch': 0.03}

whole 0.14615347199999998
self.total_flops 7.892287487999998
I/C: [1, 0.9771474891613809, 0.9508703710407594, 0.9152312330583791, 0.8164290511588493, 0.743937271177255, 0.6994097552205, 0.6272284825647497, 0.589673086484748, 0.5263849542630631, 0.4600604952923033, 0.3946608751315247, 0.33608131363706256, 0.29483620741628047, 0.27036531416446963, 0.24473936148754016, 0.21909978504706235, 0.20022700205460203, 0.18566985243762033, 0.1696881377797853, 0.1543542987931013, 0.13779287111537228, 0.12682178100378297, 0.11386300153678751, 0.1013311366123342, 0.08352797009495305, 0.06375746395209689, 0.049709974087496, 0.03927723288396556, 0.026431409000167584, 0.014085076806186397, 0.0] 
 BI/C: [9.854380320063562, 9.449408341429116, 9.021478343344114, 8.517846860648124, 7.458285509928938, 6.671557387320626, 6.155718511567198, 5.425393095948863, 5.009052382272033, 4.402097996429834, 3.7974421135873424, 3.227044153267103, 2.7339048122846346, 2.3893746708371055, 2.1788668637171913, 1.97058138882907, 1.7727284065986186, 1.6284688309657938, 1.5185383374314947, 1.4061035816473992, 1.3039551458673033, 1.2012981385174633, 1.135281284059507, 1.0635673549622324, 0.9992777792211293, 0.9152432676584782, 0.82963305326224, 0.776814183281927, 0.7446053294826265, 0.7072674578536092, 0.6770498888820501, 0.6458333333333333] 
 Grad_Magnitude: 9.854380320063562
Iter: 18 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 8.330747903999999
I/C: [1, 0.9771572856306877, 0.9509099111295648, 0.9153265751511945, 0.8166384734911545, 0.7442380581856919, 0.69976904023039, 0.6276673573281312, 0.5901659133586856, 0.5269465096535287, 0.46068757824788215, 0.39533644113978333, 0.3367925050068608, 0.2955728451072765, 0.2711164138657901, 0.24548959947569812, 0.2198551325663869, 0.2009852844182452, 0.18643597284498029, 0.17044665161449415, 0.15511276683269293, 0.13853146004041883, 0.1275493577995202, 0.11455704591826, 0.10200959869599162, 0.0841365103134099, 0.06429407137912473, 0.05019498229223972, 0.03973259626907836, 0.026754321623437032, 0.014253282616259924, 0.0] 
 BI/C: [8.04278581971369, 7.716169536323323, 7.370966217847315, 6.964164624093553, 6.104044306558349, 5.4663986236934745, 5.049580949609684, 4.457832478367713, 4.122148366033012, 3.6309708064160824, 3.14162578797316, 2.6801132071699927, 2.2815624875912737, 2.0042295428384, 1.836209634659745, 1.6699139353158574, 1.5121651617308067, 1.3981443637540778, 1.3121653741763337, 1.224064822209568, 1.144397610897481, 1.0642256100984893, 1.014003256704433, 0.9590405127394124, 0.9102206769334027, 0.8450815507830087, 0.7786724125573552, 0.7391220276628523, 0.7164836507722301, 0.6893417977669111, 0.66798853724141, 0.6458333333333333] 
 Grad_Magnitude: 8.04278581971369
Iter: 19 Freeze: 0
freeze!!
{'loss': 0.3873, 'grad_norm': 9.754096031188965, 'learning_rate': 5e-05, 'epoch': 0.03}

whole 0.14615347199999998
self.total_flops 8.769208319999999
I/C: [1, 0.9771524943157902, 0.9509716307612696, 0.9155198348066081, 0.8171066784286131, 0.7449212645448368, 0.7005976026361304, 0.6286916544038599, 0.5913100363993875, 0.5282582317984348, 0.4621577805572721, 0.3969525460108569, 0.3385174315404077, 0.29737996142442774, 0.2729642879915565, 0.24734087136659227, 0.22169258602167044, 0.2028297714160242, 0.18827010602334415, 0.1722769580889765, 0.15691435837459092, 0.14027926887604675, 0.1292779004007048, 0.11620514850093216, 0.10359640439136601, 0.08556363255011902, 0.06548040310788855, 0.05125317551902229, 0.04071176597503885, 0.027476856022577344, 0.014657859119137695, 0.0] 
 BI/C: [8.457188418743444, 8.112630200809733, 7.749106834634952, 7.321303510052835, 6.417889709544024, 5.747862461031781, 5.309450189811991, 4.68740656087467, 4.334016993103054, 3.8174082625581853, 3.3026063815775655, 2.8169331577460106, 2.3971792761747346, 2.104686308341177, 1.9268615440523589, 1.7506182425523762, 1.5832639806825042, 1.4620095293265707, 1.3701473501601418, 1.2760912947547254, 1.1907816717217534, 1.1048321170721689, 1.0505524294536674, 0.9910254354689821, 0.9380671557210616, 0.867571636086983, 0.795482548958565, 0.7521377710601937, 0.7267946148794548, 0.6961492087961421, 0.6714866036447291, 0.6458333333333333] 
 Grad_Magnitude: 8.457188418743444
Iter: 20 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 9.207668735999999
I/C: [1, 0.9771528432984534, 0.9509737021573388, 0.9155264323200087, 0.8171221450441319, 0.7449439585427097, 0.7006247754172334, 0.6287248455757386, 0.5913463499869066, 0.5282991556989587, 0.4622025963654748, 0.39699962397086164, 0.33856619561395385, 0.2974295135153679, 0.27301366780242614, 0.24738852850418636, 0.22173743331970275, 0.20287360984421696, 0.18831271873449024, 0.17231808579685856, 0.15695266849649625, 0.14031529509047377, 0.12931178502549465, 0.11623520738519408, 0.10362415512571045, 0.08558830378891591, 0.06550068731151971, 0.051270727084048326, 0.040728204283269516, 0.027484842358848086, 0.014661306931888133, 0.0] 
 BI/C: [7.8702863374641225, 7.551087824887996, 7.21425052973589, 6.817614223633222, 5.9784031496651915, 5.356367857106052, 4.949852897948232, 4.372458896844125, 4.045054249176023, 3.5657658220929687, 3.088152866958216, 2.6376359689812885, 2.2484596777507795, 1.9777070891718964, 1.8136594822495358, 1.651075257203148, 1.4967580613069458, 1.3853515706970416, 1.301296885891739, 1.2151997419584293, 1.137236424789631, 1.0586808718118887, 1.009598753102926, 0.955627273237501, 0.907775886158571, 0.8436021361042203, 0.7779417003694165, 0.7390379450106288, 0.7168927623833599, 0.6897907918079114, 0.6682707563632777, 0.6458333333333333] 
 Grad_Magnitude: 7.8702863374641225
Iter: 21 Freeze: 0
freeze!!
{'loss': 0.2305, 'grad_norm': 5.583496570587158, 'learning_rate': 5e-05, 'epoch': 0.04}

whole 0.14615347199999998
self.total_flops 9.646129151999999

whole 0.14615347199999998
self.total_flops 10.084589567999998
I/C: [1, 0.976578738744533, 0.9504371413743637, 0.9151885838121481, 0.8172282970653807, 0.745391502714814, 0.701290776897724, 0.6296927524926336, 0.5924992659965703, 0.5297130687664341, 0.4638710979584576, 0.3988802761870551, 0.3406090386129877, 0.29958035602826294, 0.27522912868967614, 0.24962192092132512, 0.22395867550702428, 0.20511606767731977, 0.19053980229015421, 0.17452322744227186, 0.15911430922511732, 0.1424258631386168, 0.13138970422403073, 0.11818506970232376, 0.10548697215586973, 0.08727454902899086, 0.06695701328437532, 0.05256251279606725, 0.04191559844480151, 0.028299354375068635, 0.015112059130152221, 0.0] 
 BI/C: [6.542694680730377, 6.277176175146191, 6.000985861353693, 5.676062011724601, 4.9846356294726775, 4.473028496970312, 4.139790006197261, 3.6649038398197704, 3.397118163310344, 3.0034225878318543, 2.6110155140829105, 2.240850393052509, 1.9213757088564116, 1.7000457930064583, 1.5671909440175007, 1.4353250097663863, 1.3101954899621524, 1.2208826240138895, 1.154152344319506, 1.085702365909647, 1.0239378676805706, 0.9616650271499465, 0.9239731394200392, 0.8819004306683034, 0.8450845258052812, 0.7944426403539121, 0.742453010049418, 0.7129564568835349, 0.6976004012435139, 0.6774568056545717, 0.6620775958321488, 0.6458333333333333] 
 Grad_Magnitude: 6.542694680730377
Iter: 23 Freeze: 0
freeze!!
{'loss': 0.2493, 'grad_norm': 3.985400915145874, 'learning_rate': 5e-05, 'epoch': 0.04}

whole 0.14615347199999998
self.total_flops 10.523049983999998

whole 0.14615347199999998
self.total_flops 10.961510399999998
I/C: [1, 0.9761093582384075, 0.9498592550961852, 0.9148064007556953, 0.8172980826467751, 0.7458031748699757, 0.701927503170838, 0.6306516546337739, 0.5936384581704508, 0.5311173158712255, 0.46555078353419127, 0.40080402692175404, 0.34273023385588114, 0.30182706193669817, 0.27754950519246396, 0.251989409948429, 0.22633882287711762, 0.2075216994053825, 0.1929358442022797, 0.17689841437820172, 0.16144206342638723, 0.1447033414572413, 0.13363980132267184, 0.1203493052448923, 0.10755740571351019, 0.08916241438595393, 0.06851457590229881, 0.05394227772755057, 0.04316990448729856, 0.02920939987347864, 0.015652971075701773, 0.0] 
 BI/C: [6.977588956161518, 6.689829672257507, 6.393238804589159, 6.046696599005132, 5.310872569087444, 4.766000913480134, 4.41054139488201, 3.904532267559625, 3.618470958069074, 3.1985586330899847, 2.780000754528741, 2.3849144337056023, 2.043573021021588, 1.8064766894043007, 1.66344367323848, 1.5213164851989982, 1.3861995139053158, 1.2893340553329353, 1.2163918848459536, 1.1415710052772272, 1.0737778759806007, 1.0054452459653402, 0.9634286176485428, 0.9165354078950375, 0.8752456831299862, 0.8189414498386451, 0.7607805012363197, 0.7271693305871049, 0.7088424369954675, 0.684841927781094, 0.6659574992908497, 0.6458333333333333] 
 Grad_Magnitude: 6.977588956161518
Iter: 25 Freeze: 0
freeze!!
{'loss': 0.351, 'grad_norm': 1.4066067934036255, 'learning_rate': 5e-05, 'epoch': 0.04}

whole 0.14615347199999998
self.total_flops 11.399970815999998

whole 0.14615347199999998
self.total_flops 11.838431231999998
{'loss': 0.381, 'grad_norm': 6.495358943939209, 'learning_rate': 5e-05, 'epoch': 0.05}

whole 0.14615347199999998
self.total_flops 12.276891647999998
I/C: [1, 0.9651187876243089, 0.9386848021130658, 0.9041733731637104, 0.8081786536777209, 0.7377880842175658, 0.6945811404336899, 0.6243925270468389, 0.5879303428375487, 0.5263490922226082, 0.4617623975311875, 0.39796248368885667, 0.3407202149996231, 0.30038998576507003, 0.27642124779242955, 0.25117490199633274, 0.22582237252945475, 0.20721219787767806, 0.19276061921736284, 0.17687093666216672, 0.1615370825620414, 0.1449306628927894, 0.13390681884827685, 0.12063004140068449, 0.10788723517307183, 0.0895682540725617, 0.06898324522367966, 0.05441799253158129, 0.04361162668764402, 0.02952660697441393, 0.015817406899820443, 0.0] 
 BI/C: [5.8494420258099575, 5.548627096306963, 5.303666400033052, 5.0208528696270225, 4.4167779994195575, 3.9702685607594574, 3.6800480990393547, 3.265547154597664, 3.0325537130356786, 2.68906440648875, 2.3466664627956733, 2.0235575758553415, 1.74476735849635, 1.5520621508402697, 1.436977961761905, 1.3225977064516568, 1.2139565841612698, 1.1369655811314647, 1.0797137918569955, 1.0209019252421965, 0.9678593830213305, 0.9143669745738876, 0.8826100940948837, 0.846676267575187, 0.8155400637349044, 0.7718803983262651, 0.7266103512737334, 0.7017627654575691, 0.6896265341502666, 0.6725326945541352, 0.6596961267471798, 0.6458333333333333] 
 Grad_Magnitude: 5.8494420258099575
Iter: 28 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 12.715352063999998
{'loss': 0.5746, 'grad_norm': 219.89503479003906, 'learning_rate': 5e-05, 'epoch': 0.05}

whole 0.14615347199999998
self.total_flops 13.153812479999997

whole 0.14615347199999998
self.total_flops 13.592272895999997
{'loss': 0.2479, 'grad_norm': 6.76751184463501, 'learning_rate': 5e-05, 'epoch': 0.05}

whole 0.14615347199999998
self.total_flops 14.030733311999997
I/C: [1, 0.5964001562358802, 0.5528574978893512, 0.541039573615558, 0.5161474137170635, 0.4963830813320951, 0.4820654325288374, 0.4618351510871703, 0.44838445537596433, 0.429370816093874, 0.4094014907262133, 0.38923945262542686, 0.37005706436893476, 0.35400199948156813, 0.3409272696836132, 0.3270873074652633, 0.3126616397508983, 0.29909473265326847, 0.2857508596172116, 0.2713778675638291, 0.2563372394104883, 0.2401458989797947, 0.2241712079645008, 0.20661543208672528, 0.18794687190484696, 0.16669167967139734, 0.14302368270202928, 0.11915293027107106, 0.09403841176950546, 0.06573874957705013, 0.034762138834581964, 0.0] 
 BI/C: [6.279502294158671, 3.6879066462089707, 3.368683679408212, 3.2476180410151807, 3.0543864628470017, 2.8965138336307703, 2.7737396158119982, 2.622997719203648, 2.5130260134987115, 2.378190957573839, 2.2435797668623954, 2.113260652548376, 1.9928306385057615, 1.8917390182467548, 1.8081046135846468, 1.7245875296125839, 1.6422396560741186, 1.5671489136640875, 1.496483236577558, 1.4254045899287004, 1.3556409983912694, 1.2857481570117346, 1.2208286246277602, 1.1549177498943628, 1.0901064066532162, 1.0223966261044821, 0.9533038741712734, 0.889846730809402, 0.829381009352353, 0.7675692905604159, 0.7068583489606074, 0.6458333333333333] 
 Grad_Magnitude: 6.279502294158671
Iter: 32 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 14.469193727999997
I/C: [1, 0.5961921302449072, 0.5526921773440112, 0.5408858314046553, 0.5160146356345748, 0.4962689747331246, 0.4819652505832868, 0.46175164145921715, 0.44831187428996677, 0.42931372550853464, 0.4093577832328395, 0.38920929355869743, 0.3700384941615611, 0.35399319966662884, 0.34092636128229953, 0.3270923281514551, 0.31266956701380416, 0.2991080735166283, 0.2857690264294652, 0.27140190204087006, 0.2563671708042173, 0.2401796272444212, 0.22421278963800656, 0.20665933769985467, 0.18799464914173067, 0.16673254461948933, 0.14305782017795743, 0.11918713053065594, 0.09408103158186011, 0.06576626373286625, 0.034784605581890234, 0.0] 
 BI/C: [5.9646010451429365, 3.5027971989321687, 3.2008971578522303, 3.0870326830930126, 2.904669648763784, 2.7558749406396656, 2.640389132682694, 2.4983486927710135, 2.3950012282832707, 2.2680566403882114, 2.1413108905188256, 2.018639414336737, 1.9053489917643742, 1.810416402180778, 1.7320552259983373, 1.653795479115904, 1.576632817463284, 1.5063722951072318, 1.4403113960691674, 1.3738607914257475, 1.3086579387028503, 1.243323806322315, 1.1827257463466865, 1.1211669279339065, 1.060656540376023, 0.9973612818255249, 0.9327546275517695, 0.8735203614571978, 0.8171482580422035, 0.7594400204693291, 0.7028036105532353, 0.6458333333333333] 
 Grad_Magnitude: 5.9646010451429365
Iter: 33 Freeze: 0
freeze!!
{'loss': 0.3836, 'grad_norm': 10.085134506225586, 'learning_rate': 5e-05, 'epoch': 0.06}

whole 0.14615347199999998
self.total_flops 14.907654143999997

whole 0.14615347199999998
self.total_flops 15.346114559999997
I/C: [1, 0.5954043568588236, 0.5519867724704904, 0.5401944846281715, 0.5153443096551852, 0.4956255255024005, 0.48134031244251557, 0.46115333712602524, 0.4477318982085123, 0.42877008443896125, 0.4088468280598758, 0.38874451058508275, 0.3696150145938272, 0.35360370233848865, 0.3405616203602482, 0.3267535587548889, 0.31235363267116695, 0.29881581251952344, 0.28549966124004816, 0.27115389829436637, 0.25614242745793986, 0.23997771139228877, 0.22403193664275298, 0.20650009733800131, 0.1878618424676146, 0.16662520962535238, 0.14296586849552317, 0.11911509946790602, 0.09403921852125185, 0.06573663193230764, 0.03476869120207878, 0.0] 
 BI/C: [5.682488177683536, 3.333724505900045, 3.047630879267868, 2.940295724265096, 2.7677347847977334, 2.6271792945145824, 2.5183093055349577, 2.3841757049799144, 2.2868593486180657, 2.1671407603121247, 2.0475865863224794, 1.9319653159363934, 1.825249713042813, 1.7359835423817844, 1.6624598118744833, 1.5890315988154666, 1.5166305499402746, 1.4508028537574966, 1.3889677810807677, 1.3267507462567851, 1.2657236842358617, 1.2045646606905056, 1.1479068670061614, 1.0903303967779645, 1.0337613494300333, 0.9745302714042173, 0.9140175180382819, 0.8586306882231138, 0.8059903114523383, 0.7520292717109452, 0.6990897537660034, 0.6458333333333333] 
 Grad_Magnitude: 5.682488177683536
Iter: 35 Freeze: 0
freeze!!
{'loss': 0.253, 'grad_norm': 3.4314231872558594, 'learning_rate': 5e-05, 'epoch': 0.06}

whole 0.14615347199999998
self.total_flops 15.784574975999996
I/C: [1, 0.595433268324336, 0.5520186737186203, 0.5402282940128275, 0.5153807035560763, 0.4956642552521189, 0.481380973540457, 0.4611959540575811, 0.4477761150167346, 0.4288155713812523, 0.40889356533952004, 0.3887921445980448, 0.3696625349905815, 0.35365161733668926, 0.34061011592767876, 0.32680208423357426, 0.312401486164877, 0.2988639329904014, 0.2855479782315417, 0.2712020816771137, 0.2561902303678563, 0.24002442802834445, 0.22407797830668721, 0.20654512001392408, 0.18790651352175422, 0.16666645615227713, 0.14300115024822893, 0.11914664231127764, 0.09406998024217805, 0.06575856603726678, 0.034781433582050165, 0.0] 
 BI/C: [4.822670582923981, 2.832587288341181, 2.5929457098438555, 2.5050091577489413, 2.361718744876008, 2.2455894412684714, 2.1563491277387605, 2.0456675538433187, 1.9662305813559926, 1.8677794463000845, 1.7694675172119314, 1.6744918381067069, 1.587070474831138, 1.5144600792429146, 1.4552106903176099, 1.3960404236741588, 1.3377396382593902, 1.2850206507463116, 1.235689896644171, 1.1860339737213945, 1.1373873011160875, 1.0886267958824412, 1.0436877318912332, 0.9979682678841952, 0.9531056075505857, 0.9059766781386012, 0.8577550769537785, 0.8138896905313344, 0.7723618860209134, 0.7296980445429295, 0.6879022737130291, 0.6458333333333333] 
 Grad_Magnitude: 4.822670582923981
Iter: 36 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 16.223035391999996
I/C: [1, 0.595625152399356, 0.5522316092579509, 0.540454839008121, 0.5156258528355886, 0.49592538123145796, 0.48165606456186927, 0.4614850656180235, 0.4480773907604569, 0.42912826622373557, 0.4092178222518108, 0.3891250041449603, 0.36999972724487473, 0.35399338959383087, 0.3409600980412853, 0.3271542960429739, 0.31275176660698095, 0.29921621697011924, 0.2859012461308556, 0.27155628874595444, 0.25654059002570206, 0.24036630250455784, 0.2244207492321753, 0.2068795397730391, 0.18823704582751336, 0.16696950399781063, 0.14325698492432037, 0.11937891413207341, 0.09429325206434808, 0.06591979514095658, 0.0348792295912785, 0.0] 
 BI/C: [5.228442163505832, 3.070146000856685, 2.808673070287242, 2.7116283135070156, 2.5545932870959747, 2.4269883009766695, 2.328522016730619, 2.206807645231807, 2.118955601971376, 2.0104837605495223, 1.9021609417695273, 1.7974406334624589, 1.7008916308095705, 1.6203997652378255, 1.5544055248094315, 1.4884737793396687, 1.4234696821592498, 1.3645307339406192, 1.30926133116839, 1.2536390446977264, 1.1990961218989429, 1.1444169872692156, 1.0939092416443321, 1.0425300565187707, 0.9920932535691752, 0.9391412308042001, 0.8849633109227248, 0.8355725147857327, 0.7887528395113836, 0.740593726878505, 0.6933865129846153, 0.6458333333333333] 
 Grad_Magnitude: 5.228442163505832
Iter: 37 Freeze: 0
freeze!!
{'loss': 0.3773, 'grad_norm': 2.350855588912964, 'learning_rate': 5e-05, 'epoch': 0.06}

whole 0.14615347199999998
self.total_flops 16.661495807999998
I/C: [1, 0.5956402281526779, 0.5522482325734975, 0.5404724371267977, 0.5156447224053675, 0.49594534069646157, 0.4816769846569234, 0.4615068450963368, 0.4480998708327079, 0.4291512373700366, 0.4092413059280036, 0.389148665346754, 0.37002308124233985, 0.3540166608825533, 0.34098352566968054, 0.32717751326156, 0.31277434832365897, 0.2992386653899873, 0.2859235218320624, 0.2715782841692369, 0.2565621152671308, 0.2403872069354548, 0.22444114630767956, 0.20689921764432398, 0.18825642808291487, 0.16698749167393862, 0.14327177910745617, 0.11939193368313955, 0.09430555307055394, 0.06592857815324644, 0.03488402324368819, 0.0] 
 BI/C: [4.456656435225827, 2.620093775545262, 2.4002981128932346, 2.320656217171871, 2.18988042286494, 2.0841894530794054, 2.003335229200018, 1.9026640728140354, 1.8308559774753745, 1.7414709442646188, 1.6522129205358713, 1.5660243840844719, 1.486799309650572, 1.4212619176349721, 1.3680828836537557, 1.3149559668325916, 1.2626185414867996, 1.215452534107061, 1.1714143147220581, 1.1270750443021276, 1.0836553678569052, 1.0401192959133572, 1.00013925113669, 0.9594160050821694, 0.9194971108441754, 0.8774319838652123, 0.8343185024916865, 0.7952888629338207, 0.7584531041539229, 0.720470821244732, 0.6832997900033314, 0.6458333333333333] 
 Grad_Magnitude: 4.456656435225827
Iter: 38 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 17.099956224
I/C: [1, 0.5956628821596557, 0.5522729162750615, 0.5404984551056117, 0.5156723891386712, 0.4959744688814996, 0.4817073540989139, 0.4615384125787222, 0.44813248795660726, 0.4291845930419005, 0.4092755452390604, 0.389183565200394, 0.3700583512509046, 0.3540523127337279, 0.3410198785345179, 0.3272141664816459, 0.3128104847922132, 0.2992747264305349, 0.28595955452318905, 0.271614237981145, 0.2565975023026059, 0.24042151523624977, 0.22447521907940665, 0.2069321597264944, 0.18828864816389174, 0.16701683929671898, 0.14329533037410866, 0.11941249811632944, 0.09432486069191405, 0.06594231111780656, 0.03489230522832029, 0.0] 
 BI/C: [5.409735371415615, 3.1760790096614095, 2.9048315661043853, 2.8037065101065526, 2.640513566620379, 2.5077686872494755, 2.4051706481224313, 2.278517243907484, 2.186898475982783, 2.0739422474993754, 1.9611406450403324, 1.8520638260336177, 1.751438314187322, 1.6674276288218812, 1.5984193369786937, 1.5294726596802761, 1.4614812960867347, 1.3997689432000393, 1.3418534480614674, 1.2835723618127972, 1.2264060075802625, 1.1690969359503691, 1.1161070801909068, 1.062212616643668, 1.0092958800041174, 0.9537685161001346, 0.8969619995882717, 0.8451206314964409, 0.7959468897037073, 0.7453724709502279, 0.6957843016689529, 0.6458333333333333] 
 Grad_Magnitude: 5.409735371415615
Iter: 39 Freeze: 0
freeze!!
{'loss': 0.2415, 'grad_norm': 7.1301774978637695, 'learning_rate': 5e-05, 'epoch': 0.07}

whole 0.14615347199999998
self.total_flops 17.53841664
I/C: [1, 0.5958030729605668, 0.5524274280542892, 0.5406615552660469, 0.5158452879809604, 0.49615614571658717, 0.4818965132402313, 0.46173324206813837, 0.44833466870424576, 0.4293928588406778, 0.4094899630299136, 0.38939988727413444, 0.3702739648198491, 0.35427087532044577, 0.34124123389433547, 0.3274363958544354, 0.3130309480974463, 0.29949730789568474, 0.2861828773320217, 0.2718403735791737, 0.2568219503372301, 0.2406412859844766, 0.2246944432280437, 0.2071459468589606, 0.18850303192184434, 0.16721838606134792, 0.14346780453166005, 0.11956817353300363, 0.09447686603718876, 0.06602046951044072, 0.03493073891679689, 0.0] 
 BI/C: [4.12581472874862, 2.4277944877324282, 2.225912668429809, 2.1537525699857425, 2.034258579665135, 1.937980798990325, 1.8646887655517568, 1.7730428801245972, 1.708121482957175, 1.626921247407281, 1.5458381122553067, 1.4675811716808544, 1.3957613332944112, 1.3366241632860758, 1.2889278271074682, 1.2412725595119078, 1.1943384641430592, 1.152203802671539, 1.1129609565075715, 1.0734443228804786, 1.0347665414642528, 0.9959732661586163, 0.9604841401415429, 0.9242946867454576, 0.8888642927584582, 0.8514162050620435, 0.8129640579757276, 0.7783258075102663, 0.7457475189259348, 0.7119870059290924, 0.6790441589158724, 0.6458333333333333] 
 Grad_Magnitude: 4.12581472874862
Iter: 40 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 17.976877056000003
{'loss': 0.5474, 'grad_norm': 10.500783920288086, 'learning_rate': 5e-05, 'epoch': 0.07}

whole 0.14615347199999998
self.total_flops 18.415337472000004
I/C: [1, 0.5963274892970678, 0.5529467986615918, 0.5411857194904361, 0.5163579513041695, 0.49666232993172493, 0.482402128418326, 0.46222137632658966, 0.44882293035830306, 0.42987405712705834, 0.4099695962054241, 0.3898819661592761, 0.37075306234045724, 0.3547564849163928, 0.3417334576189561, 0.3279312754416122, 0.3135202707573255, 0.2999848850581593, 0.28667092758499174, 0.2723266858034349, 0.2573024268000785, 0.24110664795158557, 0.22515251157872562, 0.20758638313051503, 0.18893214682261533, 0.16761186960256572, 0.1437804309486862, 0.11983424269352037, 0.09471510045522558, 0.06617742493331225, 0.03501844195676881, 0.0] 
 BI/C: [4.000758432406796, 2.356892184796192, 2.161697960441968, 2.0923312475776576, 1.977004808835416, 1.884210795727618, 1.8137275851955286, 1.7253891422514258, 1.663026769407091, 1.5848555853757498, 1.5068165442473307, 1.4315306637278624, 1.36247008037442, 1.305735936391851, 1.2600950503115698, 1.2144819981376502, 1.169545911308555, 1.1292745586087802, 1.0918132067884585, 1.0540809427776494, 1.0171528313245022, 0.980092818382174, 0.9462562716912508, 0.9117202983136645, 0.8779359397766486, 0.8421503294943846, 0.8053141036193097, 0.772249687414393, 0.7412217653427084, 0.7089674567896128, 0.677537622605609, 0.6458333333333333] 
 Grad_Magnitude: 4.000758432406796
Iter: 42 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 18.853797888000006
I/C: [1, 0.5976669733785506, 0.5541173479165726, 0.5422981772964072, 0.5173007499137073, 0.4974740905123173, 0.48310875271933656, 0.46277902051760456, 0.44931548642872887, 0.43027243241676966, 0.4102920235161141, 0.39017017831876455, 0.370998927468252, 0.3549900273564418, 0.34195651144327865, 0.32815005171971645, 0.3137273154623881, 0.3001843929450515, 0.2868643906295689, 0.27251203659368556, 0.2574817942309254, 0.24127830095547897, 0.225310154015992, 0.20773378843163934, 0.18906928625882588, 0.1677399143301897, 0.1438973877725864, 0.1199316391812128, 0.09479126533374135, 0.06622744116115595, 0.035043862809682975, 0.0] 
 BI/C: [4.3719865050869835, 2.579387943352472, 2.3633188353539345, 2.285237793318588, 2.1564959062195967, 2.0525593842721186, 1.973126828956051, 1.8740376861282066, 1.8036677026608305, 1.715930530280118, 1.6284180253828484, 1.5440686231039535, 1.466501728219707, 1.402508464927058, 1.3506457211276177, 1.2988339734615102, 1.2477410596524852, 1.2017596992666313, 1.1588545278890476, 1.1156489468204072, 1.0733290423151938, 1.0308618301080643, 0.9919036827758678, 0.9521923539967301, 0.9133041840250073, 0.872233390870184, 0.8300121588353826, 0.7918985347645353, 0.7560108886830152, 0.7187784187799438, 0.6824542357337701, 0.6458333333333333] 
 Grad_Magnitude: 4.3719865050869835
Iter: 43 Freeze: 0
freeze!!
{'loss': 0.1944, 'grad_norm': 3.7925498485565186, 'learning_rate': 5e-05, 'epoch': 0.07}

whole 0.14615347199999998
self.total_flops 19.292258304000008
I/C: [1, 0.5977196218216846, 0.5541749376932732, 0.5423586706870486, 0.5173647536726053, 0.497541523310023, 0.48317892291918624, 0.4628514952242516, 0.4493902887789132, 0.4303492939768437, 0.4103703359389194, 0.39024885628095596, 0.3710776773944242, 0.35506803177692997, 0.34203460314277995, 0.3282270057083433, 0.31380079099445696, 0.3002572938354807, 0.286936336964087, 0.27258292548374297, 0.2575516952873828, 0.24134435186039724, 0.22537501704774632, 0.20779494557672448, 0.1891284029509548, 0.16779239444521432, 0.14394080345136837, 0.11996648670965844, 0.09482306908164889, 0.0662482471315443, 0.03505720742943308, 0.0] 
 BI/C: [4.22937263072896, 2.4961461133535, 2.287820134361029, 2.212972110477198, 2.089117635179518, 1.9892584491158347, 1.9131007482970661, 1.8179256101193844, 1.7505324898974328, 1.6663373645493453, 1.5823571782657992, 1.501433120444465, 1.4270693294848364, 1.3658338655738582, 1.3163358507501401, 1.2668835912936776, 1.2181203179553701, 1.1743104042179229, 1.1334754314484574, 1.092349753639672, 1.0520812197770093, 1.0116635479409035, 0.9746472530738977, 0.9368970081385481, 0.8999472455671234, 0.8608771020073864, 0.8206905100077455, 0.7844800517788607, 0.7504342054731863, 0.715074623787219, 0.6806012476044371, 0.6458333333333333] 
 Grad_Magnitude: 4.22937263072896
Iter: 44 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 19.73071872000001
I/C: [1, 0.5977581213482149, 0.5542173409938247, 0.5424034503933445, 0.5174125295776614, 0.4975922101371397, 0.4832319404524878, 0.4629065483174491, 0.4494470480830514, 0.4304079726592683, 0.410430821842341, 0.3903107111772872, 0.3711399136894737, 0.3551307879949779, 0.342098293945379, 0.3282906858645316, 0.31386297644304106, 0.30031883520336766, 0.28699858101951575, 0.2726446513969376, 0.2576119975528392, 0.24140171738677205, 0.2254317751392631, 0.2078494797649907, 0.18918165769402598, 0.16784104188974938, 0.14397873553513396, 0.11999856321874268, 0.09485241649033507, 0.06626827499594175, 0.03506824393648292, 0.0] 
 BI/C: [4.0970631933008335, 2.418864197525083, 2.2177191576717377, 2.1458698867430748, 2.026549178128206, 1.9304722784442048, 1.8573528224233244, 1.7658094296463236, 1.7011774650323166, 1.6202695385944847, 1.5395691357401198, 1.4618275625515587, 1.3904377599564932, 1.3317659335536478, 1.2844654827686903, 1.2372065339593528, 1.190610965683087, 1.1488163046868247, 1.1099070767653907, 1.0707130961786075, 1.0323473694404246, 0.9938339262465363, 0.9586211237835867, 0.9226939860895156, 0.8875446032929155, 0.8503348576289662, 0.8120329065737047, 0.777593242267966, 0.7452568101659136, 0.7116375186878918, 0.6788788043071973, 0.6458333333333333] 
 Grad_Magnitude: 4.0970631933008335
Iter: 45 Freeze: 0
freeze!!
{'loss': 0.3993, 'grad_norm': 16.1472225189209, 'learning_rate': 5e-05, 'epoch': 0.08}

whole 0.14615347199999998
self.total_flops 20.16917913600001
I/C: [1, 0.6009759610103764, 0.5571206555846806, 0.5451143095788575, 0.5196910920640548, 0.49962887843480547, 0.4851086143266888, 0.4646258022998927, 0.45098821176052495, 0.4318140952773728, 0.41172852563842127, 0.3915245583225074, 0.37232223589649516, 0.35622551683917647, 0.343125177396855, 0.3292815787574825, 0.31481339393886, 0.30122519604979825, 0.28787156909917655, 0.2734753508159122, 0.25839888521361737, 0.24214395845445483, 0.2261258251522216, 0.2084932170405608, 0.18976837047424927, 0.16837051336563302, 0.14444880067631602, 0.12039454569329307, 0.09516137426739979, 0.06648513748315724, 0.03518301809269814, 0.0] 
 BI/C: [3.973986325506756, 2.3593479541174025, 2.1634069558279267, 2.093384511347909, 1.9764748522377076, 1.8828601712773407, 1.8118381247548179, 1.7229808328648446, 1.6601841554175596, 1.581768939207098, 1.5036611284772805, 1.4285164565068236, 1.3597026056010793, 1.303067430105026, 1.2575321237294619, 1.212135337716164, 1.1673760817329342, 1.1272710231249934, 1.089998549438938, 1.052433996472132, 1.0156762878796448, 0.9787806885824197, 0.9450863408743826, 0.9107027049375525, 0.8770684546391834, 0.8414447647473395, 0.8047672143691182, 0.7718202467347008, 0.7409041666896155, 0.7087501982696368, 0.6774313122964147, 0.6458333333333333] 
 Grad_Magnitude: 3.973986325506756
Iter: 46 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 20.607639552000013
I/C: [1, 0.601001367059063, 0.5571488715316817, 0.5451440603571953, 0.519722736046926, 0.4996622357971174, 0.48514338910263066, 0.46466152409830286, 0.45102480086837754, 0.43185131571222946, 0.4117660777826529, 0.39156148528575596, 0.372357978905471, 0.35626000602679736, 0.34315878473581646, 0.32931382564540446, 0.314843195620783, 0.3012539961328685, 0.2878994240400815, 0.273502204974709, 0.2584238084661945, 0.24216684631113436, 0.2261476700036212, 0.208512325816752, 0.18978598297748075, 0.168385801810483, 0.14446150838632651, 0.12040417569193665, 0.09517027838422672, 0.06648963257287098, 0.03518478366161511, 0.0] 
 BI/C: [3.8592138338169737, 2.2919054401077235, 2.1022334394893076, 2.0348382804565404, 1.921911074976379, 1.8316051404758047, 1.7632380687835076, 1.6775490719905966, 1.6171676257548238, 1.5416178395458169, 1.4663655637430013, 1.3939879485369646, 1.3277567974930922, 1.2733525839437858, 1.2297288832175344, 1.1862385742235808, 1.1433648106819132, 1.1050148181338948, 1.0694159000021386, 1.0335333603649466, 0.9984324296952367, 0.9631976743988642, 0.9310741173052024, 0.8982779439132091, 0.8662123454856232, 0.8322134742209109, 0.7971910986585149, 0.7657911389598474, 0.7363676895452583, 0.7057365934746249, 0.6759196014425359, 0.6458333333333333] 
 Grad_Magnitude: 3.8592138338169737
Iter: 47 Freeze: 0
freeze!!
{'loss': 0.4007, 'grad_norm': 2.811325788497925, 'learning_rate': 5e-05, 'epoch': 0.08}

whole 0.14615347199999998
self.total_flops 21.046099968000014
I/C: [1, 0.6010284226610675, 0.5571790380311351, 0.5451760132110598, 0.5197570331841721, 0.4996985468024576, 0.485181439040409, 0.46470085363675445, 0.4510654032210736, 0.4318928552579167, 0.41180845926782167, 0.3916033165724029, 0.37239860329833324, 0.35629988954537584, 0.34319818239848116, 0.32935215623489134, 0.3148789740165353, 0.3012891510918002, 0.2879335887645438, 0.27353601252312104, 0.25845626560007945, 0.242198487162486, 0.22617875027159298, 0.20854162235324022, 0.1898148325783758, 0.16841126425255848, 0.14448388062887274, 0.12042469088641143, 0.09519083801664799, 0.0664987542060493, 0.035188500259834596, 0.0] 
 BI/C: [3.751937906167606, 2.2288750441314726, 2.0450636052563924, 1.9801248901561626, 1.8709214385675006, 1.7837089694669865, 1.7178243034415763, 1.6350974720690736, 1.5769744870882683, 1.504103579724174, 1.4315214833225398, 1.3617299817139839, 1.297912326939167, 1.2455943157125404, 1.2037579411569856, 1.1620498271258106, 1.120937572311869, 1.0842284122427066, 1.0501930913403543, 1.0158836226778252, 0.9823319183283521, 0.9486514477007759, 0.9179963394698701, 0.8866850093337562, 0.8560867327518329, 0.8236037071254172, 0.7901266680907623, 0.7601738586266691, 0.7321458806143841, 0.7029267653281953, 0.6745094004947733, 0.6458333333333333] 
 Grad_Magnitude: 3.751937906167606
Iter: 48 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 21.484560384000016
I/C: [1, 0.614331700307245, 0.5698987644417852, 0.55740605510489, 0.5309253355397955, 0.5103874596374784, 0.4954582927612375, 0.4743379801737539, 0.4603486206897014, 0.4409771966102026, 0.42067157296421454, 0.40061908471723795, 0.38151056075790785, 0.36529782051790205, 0.3519785335459546, 0.33802479611348063, 0.32340616465277366, 0.30960200035135155, 0.29596807608988746, 0.2812623732243166, 0.26586769201206994, 0.24925391693431118, 0.23275070020117122, 0.21464597708517488, 0.19540303902255152, 0.17349727086974698, 0.14902657746878756, 0.1242572229112101, 0.09819385642228229, 0.06860936755986272, 0.03628068450146255, 0.0] 
 BI/C: [3.6514522087105075, 2.217302784718443, 2.035918181238915, 1.9706327228700264, 1.8604277816907238, 1.7736913108756434, 1.7079994927485882, 1.6252691891793771, 1.5674508231618718, 1.4957933163245498, 1.4243825308581746, 1.356773611343054, 1.2948006847943854, 1.2434450765594371, 1.202039895562335, 1.161068454502648, 1.120601436154643, 1.0842792530860033, 1.050445803216387, 1.0163222355036585, 0.9829685165463055, 0.9494530556047389, 0.918683948261262, 0.8873799620408787, 0.8567524292138207, 0.8243935591087376, 0.7910749033335287, 0.7610021985832252, 0.732729239131227, 0.7033323480745655, 0.674678944583648, 0.6458333333333333] 
 Grad_Magnitude: 3.6514522087105075
Iter: 49 Freeze: 0
freeze!!
{'loss': 0.3846, 'grad_norm': 1.7488319873809814, 'learning_rate': 5e-05, 'epoch': 0.09}

whole 0.14615347199999998
self.total_flops 21.923020800000018
I/C: [1, 0.6143417054271336, 0.5699098974531223, 0.5574177691478333, 0.5309378606814219, 0.5104006628487526, 0.4954720836619016, 0.4743522585872373, 0.46036317205143346, 0.4409918782159356, 0.4206863797683987, 0.40063390709505914, 0.3815253635563709, 0.36531220207628357, 0.3519927939483103, 0.338038716949049, 0.3234193272223282, 0.3096147359614411, 0.295980524716208, 0.28127442381865153, 0.265878924998564, 0.24926422032258982, 0.23276045720506733, 0.2146547549470224, 0.19541101524986512, 0.17350406286232503, 0.14903143901108293, 0.1242609568294835, 0.09819723352497774, 0.06861135848079199, 0.036281781631286154, 0.0] 
 BI/C: [3.9687059411127485, 2.4081802933644623, 2.2092295960911152, 2.136463011342644, 2.014874888544048, 1.9187936697670076, 1.845585126823939, 1.7538572854219208, 1.6892050466583621, 1.6095107582346684, 1.5300845899962123, 1.454790253959934, 1.3856214827735278, 1.3279913486654056, 1.2811770905715036, 1.2348336816937526, 1.1890374702786282, 1.1477471896677713, 1.109162291809302, 1.0702618506223394, 1.0321972404007755, 0.9939567205568682, 0.9587021467398464, 0.9228654173158068, 0.8877644285905069, 0.8507810816051022, 0.812753397148939, 0.7782553989576675, 0.7457149767047562, 0.7119514128037536, 0.6789968958678403, 0.6458333333333333] 
 Grad_Magnitude: 3.9687059411127485
Iter: 50 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 22.36148121600002
I/C: [1, 0.6143730210501867, 0.569944004065142, 0.5574533475111996, 0.5309752522571155, 0.51043989224164, 0.4955129461720586, 0.4743948382870723, 0.46040708636586775, 0.44103725770019875, 0.42073320756305566, 0.4006819387491474, 0.3815740330324924, 0.36536146085021043, 0.3520427135022972, 0.3380890548937231, 0.3234688227362, 0.30966427140782804, 0.296030010782978, 0.28132390545514735, 0.26592778092630626, 0.24931087231017332, 0.23280625386907522, 0.21469806571930003, 0.1954528355500434, 0.173542130905382, 0.14906166559408046, 0.12428715594553365, 0.09822148980565933, 0.06862722233352127, 0.03629135724794182, 0.0] 
 BI/C: [3.454580111109457, 2.0990174689196612, 1.9285456700191306, 1.867906794234605, 1.7647718337771952, 1.6838393017741133, 1.6228155225628391, 1.545671539573746, 1.4920943029778175, 1.4254238127013574, 1.3589864519867403, 1.296144806039428, 1.2386335490724032, 1.1911659429305455, 1.1531131607309457, 1.115469560813509, 1.0782993077256449, 1.0450533547276502, 1.0141621172139963, 0.9829963143413478, 0.9525568134047028, 0.9219612142934167, 0.8939675877772535, 0.8654644102747735, 0.8376037391755637, 0.8081010303937832, 0.7776833382579896, 0.7503449724356624, 0.7247141688192378, 0.698010135619319, 0.6720142753577154, 0.6458333333333333] 
 Grad_Magnitude: 3.454580111109457
Iter: 51 Freeze: 0
freeze!!
{'loss': 0.2908, 'grad_norm': 3.743690013885498, 'learning_rate': 5e-05, 'epoch': 0.09}

whole 0.14615347199999998
self.total_flops 22.79994163200002
I/C: [1, 0.614421637951294, 0.569996606247115, 0.5575080032568482, 0.5310323396930983, 0.5104996028906013, 0.49557497751522717, 0.4744588747876935, 0.46047289053193297, 0.4411047541996309, 0.42080188511193256, 0.4007512833940212, 0.3816434494021421, 0.36543046859360534, 0.3521120143980064, 0.3381576302988565, 0.3235351209947765, 0.3097296405564713, 0.29609578516809115, 0.28138870625894924, 0.265991228801085, 0.24937089934571208, 0.23286466264061395, 0.2147525823457036, 0.19550542692156223, 0.1735901756639572, 0.14909980576943194, 0.12431969901386139, 0.09825153827102172, 0.06864705817730904, 0.03630236906110192, 0.0] 
 BI/C: [3.3718161817295536, 2.0493893874729308, 1.8835102896218285, 1.8248261001486001, 1.7246648163323197, 1.6461742778562654, 1.58711426239034, 1.5123190119697498, 1.4605249529527942, 1.3959508702891243, 1.331602729372149, 1.2707626562767365, 1.2151236687589202, 1.1692865178235963, 1.132640366449416, 1.0963911917491904, 1.060600637552011, 1.0286436215349424, 0.9989878498573046, 0.9690612250099209, 0.9398428921906156, 0.910468468937307, 0.8836374537241667, 0.8563053292820062, 0.8296041810550341, 0.8012963699112323, 0.772087854818631, 0.7458926381186748, 0.7213692194258547, 0.695788332712859, 0.6709018432882532, 0.6458333333333333] 
 Grad_Magnitude: 3.3718161817295536
Iter: 52 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 23.238402048000022
I/C: [1, 0.6144625208609876, 0.570042899669934, 0.5575573804787667, 0.5310860610938851, 0.5105572561975802, 0.495635780068631, 0.4745228349320072, 0.4605397358870996, 0.44117456052699566, 0.42087378373946455, 0.4008245072905235, 0.38171771526374937, 0.36550587713946253, 0.3521884295127826, 0.3382340421256076, 0.32360937576029736, 0.3098036929495224, 0.29616967230891844, 0.28146216999783313, 0.2660638598118023, 0.24943926867773195, 0.232932015665802, 0.2148167722244759, 0.1955672696689862, 0.17364622446745318, 0.14914310807018505, 0.12435723739836618, 0.09828609069069426, 0.0686703640497876, 0.03631593739959612, 0.0] 
 BI/C: [2.9262173184743565, 1.7814248103031487, 1.6402331800671888, 1.592063183875153, 1.507900460442152, 1.4425429971208052, 1.3940457528808285, 1.3318923841911061, 1.2896994591653643, 1.2364152695810815, 1.1833247892722831, 1.133276786487329, 1.0877417418799349, 1.050713270190374, 1.021660749613001, 0.9929505893388075, 0.964634239846972, 0.939648768348382, 0.9166605151982701, 0.893436766957249, 0.8708270600675005, 0.848076348200701, 0.8275385865620553, 0.8065627912406368, 0.786136165716066, 0.7643106573845829, 0.7416948584761145, 0.7217046320168176, 0.7031693586434378, 0.6837071617170858, 0.6648506218582483, 0.6458333333333333] 
 Grad_Magnitude: 2.9262173184743565
Iter: 53 Freeze: 0
freeze!!
{'loss': 0.6943, 'grad_norm': 18.079675674438477, 'learning_rate': 5e-05, 'epoch': 0.09}

whole 0.14615347199999998
self.total_flops 23.676862464000024

whole 0.14615347199999998
self.total_flops 24.115322880000026
I/C: [1, 0.6174413626453722, 0.5728869297869902, 0.5602927081795605, 0.5336340068989032, 0.5130229488076365, 0.4980634715023861, 0.47688665955023907, 0.4628623422815819, 0.44348814342971127, 0.42312621894787866, 0.40311306416095305, 0.384006141776968, 0.36777880926077305, 0.3544251812610025, 0.3404432586411691, 0.3257727870840431, 0.31192449527438726, 0.2982316234890812, 0.2834576485066792, 0.26798852121772687, 0.25126649190620753, 0.23465772987561806, 0.21642584966325895, 0.197062265169495, 0.17500498832160655, 0.15032677742728717, 0.12536799589666756, 0.09910653698464868, 0.06924119294727994, 0.0366196159306431, 0.0] 
 BI/C: [3.6053378965270015, 2.2005413114697028, 2.021057168453287, 1.9562917505757942, 1.846936665619153, 1.7611188833820997, 1.6962262200979303, 1.6144341538960527, 1.5573126195858664, 1.4866262457611268, 1.416031118814683, 1.349464080245216, 1.2883539215857174, 1.237684182288759, 1.1967909640509853, 1.1563464251223534, 1.116347316620882, 1.080466444035458, 1.047016108817473, 1.0132678638421933, 0.9802770166386257, 0.9470690905357253, 0.9165943867098462, 0.8855668320723975, 0.8552380262955166, 0.8231645558119693, 0.7900736292806316, 0.76024736914533, 0.7322135639934619, 0.7029816675362034, 0.6745097834016294, 0.6458333333333333] 
 Grad_Magnitude: 3.6053378965270015
Iter: 55 Freeze: 0
freeze!!
{'loss': 0.2408, 'grad_norm': 28.048511505126953, 'learning_rate': 5e-05, 'epoch': 0.1}

whole 0.14615347199999998
self.total_flops 24.553783296000027
I/C: [1, 0.6287969547461044, 0.5838468492478083, 0.5707935934039498, 0.5436505958564776, 0.5228077638875472, 0.5076789398099724, 0.4864486488985737, 0.47226698564619524, 0.45280071604151545, 0.4323836326231597, 0.4124505827092574, 0.3933902510015874, 0.3770455372369243, 0.36350733929406104, 0.34935612225527934, 0.3344594204974837, 0.3203520999990269, 0.30635531342974354, 0.2912560073020136, 0.2754255216496378, 0.25830912556252716, 0.24124517788275093, 0.2225250098527953, 0.20262445144347505, 0.18001113031016946, 0.15474481155586883, 0.12908659537355133, 0.10202273319454991, 0.0713011718018406, 0.037704442536160974, 0.0] 
 BI/C: [3.1493985301355454, 1.959908617426274, 1.803817808476762, 1.7478029725723616, 1.652824688539562, 1.579183127804758, 1.5240228934660118, 1.4544343136027331, 1.4061307920213932, 1.3461655515056954, 1.286384131821787, 1.2304570120981069, 1.1792070087055395, 1.136694440143433, 1.102587548380224, 1.0689298898231838, 1.035564004869841, 1.005758529557206, 0.9780218586342804, 0.9500240832794411, 0.9226644276096914, 0.8951040889565618, 0.8698793213392046, 0.8441770515358289, 0.8190725747728007, 0.7924857531616327, 0.7650368292775711, 0.7403634960067281, 0.7172126024847193, 0.6930533397442399, 0.6695298684636121, 0.6458333333333333] 
 Grad_Magnitude: 3.1493985301355454
Iter: 56 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 24.99224371200003
I/C: [1, 0.6288057817243717, 0.5838581809060269, 0.5708060851473689, 0.5436647707499692, 0.5228234295226857, 0.507695812437409, 0.48646690472802234, 0.4722863232066508, 0.45282113962328274, 0.43240506919626526, 0.41247291772274386, 0.39341273392894344, 0.37706830247355955, 0.3635302927304751, 0.349378884204801, 0.3344812584948666, 0.32037381510452767, 0.3063767945223472, 0.29127733576732723, 0.2754465132493922, 0.2583288935695104, 0.24126468443477167, 0.2225425498303416, 0.20264192298563322, 0.18002690686213677, 0.1547567728367555, 0.1290970645945065, 0.10203269610750808, 0.07130846665831898, 0.037708567369878696, 0.0] 
 BI/C: [3.083129783878686, 1.9191337957030818, 1.7667726076495767, 1.712377414315981, 1.6198399598827407, 1.5481895198469298, 1.49463057041673, 1.4269471815909973, 1.3801000246641506, 1.3218364031532261, 1.2637524168018108, 1.2094412269572996, 1.1597068880000998, 1.1185264163947564, 1.0855745099421212, 1.0530615550782108, 1.0208327534764994, 0.9920911581464998, 0.9653746376757055, 0.9384026885191519, 0.9120551201710962, 0.8855095970128288, 0.8612522644552575, 0.836524772688663, 0.8123856741097284, 0.786793027588808, 0.7603536404787266, 0.7366350646274021, 0.714408351791042, 0.6911919143863059, 0.6685976526870508, 0.6458333333333333] 
 Grad_Magnitude: 3.083129783878686
Iter: 57 Freeze: 0
freeze!!
{'loss': 0.3407, 'grad_norm': 2.5923211574554443, 'learning_rate': 5e-05, 'epoch': 0.1}

whole 0.14615347199999998
self.total_flops 25.43070412800003

whole 0.14615347199999998
self.total_flops 25.869164544000032
{'loss': 0.1844, 'grad_norm': 1.510499119758606, 'learning_rate': 5e-05, 'epoch': 0.1}

whole 0.14615347199999998
self.total_flops 26.307624960000034

whole 0.14615347199999998
self.total_flops 26.746085376000035
I/C: [1, 0.6304679809651391, 0.5855351399972862, 0.5724148045606074, 0.5451632047836917, 0.5243020571948279, 0.509135530170867, 0.4879050312897814, 0.47372411328512976, 0.45428009794303936, 0.43387481021058527, 0.4139709493078494, 0.39490913431936303, 0.3785538466268827, 0.3649880857184815, 0.3508100340460587, 0.335873938520875, 0.32172861478237336, 0.30768354404462495, 0.29253661818974946, 0.27665071926753804, 0.25946653846910084, 0.24233230771080372, 0.22353171561810242, 0.20354951830373302, 0.18084568252888641, 0.15546967850240162, 0.1296994567584484, 0.10251114687542477, 0.07164243565707822, 0.03788457419766765, 0.0] 
 BI/C: [3.0202147900500442, 1.8853122890813214, 1.7364234778340846, 1.6832646801039548, 1.5926341429055546, 1.5227230747191625, 1.4704863260667702, 1.404514534526882, 1.3589571444559096, 1.302269069889272, 1.2457294690722975, 1.192925079141106, 1.1445328061478999, 1.104499738009368, 1.0724925437309665, 1.0409211366601578, 1.009607624475404, 0.9817161488164409, 0.9557939939866189, 0.9296287334531088, 0.9040676798390506, 0.8783001308167002, 0.8547767940881942, 0.830788434143257, 0.8073816328442482, 0.7825507191058347, 0.7568779186079194, 0.7338775951839533, 0.7123357008075626, 0.6898153194076585, 0.6679073317399541, 0.6458333333333333] 
 Grad_Magnitude: 3.0202147900500442
Iter: 61 Freeze: 0
freeze!!
{'loss': 0.3355, 'grad_norm': 19.55499267578125, 'learning_rate': 5e-05, 'epoch': 0.11}

whole 0.14615347199999998
self.total_flops 27.184545792000037
I/C: [1, 0.6337993956282293, 0.5889792462860827, 0.5757347036600216, 0.5482342759761408, 0.5273375616282494, 0.5120861133098781, 0.49091148100426835, 0.47671365666811927, 0.4573266132490455, 0.4369477706466029, 0.41712189434049424, 0.39809675011896173, 0.3817137109209408, 0.3680919007591594, 0.3538558049773753, 0.3388394125811822, 0.3246057537727222, 0.3104525858881948, 0.29519853763334397, 0.27919434600893916, 0.2618706787635398, 0.2445787281336349, 0.22561263916765292, 0.20545273829014296, 0.18256581904815203, 0.15698704695478816, 0.1309764108584155, 0.10351139857183135, 0.07234518992524035, 0.038250865164809106, 0.0] 
 BI/C: [2.9604081860300138, 1.858048566637046, 1.712634857852644, 1.6603841215906487, 1.5710808019235045, 1.50268293067815, 1.4514859315704993, 1.3871923551297354, 1.3427225096605016, 1.2875221777608834, 1.2323888076960665, 1.1810310335704997, 1.1338966584130894, 1.0948123710116389, 1.0635391123216238, 1.0326958649388676, 1.0020686471699556, 0.9747902385778647, 0.9494164853984985, 0.9238195177521122, 0.8988087159939264, 0.8735748068647109, 0.8505286373184618, 0.827034116595706, 0.8041119841382106, 0.779808227908057, 0.7546751303317485, 0.7321378420109115, 0.7110149965331103, 0.688942803271187, 0.6674643153837367, 0.6458333333333333] 
 Grad_Magnitude: 2.9604081860300138
Iter: 62 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 27.62300620800004
I/C: [1, 0.633804777375996, 0.5889854207790488, 0.5757412658182846, 0.548241343453888, 0.5273451203210187, 0.5120940444975617, 0.49091972156722935, 0.4767222103966893, 0.4573353642046436, 0.4369565485427337, 0.41713044632728086, 0.39810487462338345, 0.3817213402013017, 0.36809926681585464, 0.35386266326470267, 0.33884554432073377, 0.3246115679216481, 0.3104580898379474, 0.29520386501228113, 0.2791994076027467, 0.26187532952220466, 0.24458328393663348, 0.22561668987406694, 0.20545676770290522, 0.1825695063556564, 0.15699023596598752, 0.13097949902227504, 0.10351452077108501, 0.07234620431136224, 0.038251240279065374, 0.0] 
 BI/C: [2.903487970182166, 1.8227394518352904, 1.6805240803511223, 1.6296792242882892, 1.5424944666853, 1.4758131074669338, 1.4260015355755262, 1.363344994619183, 1.3201310025045325, 1.2663925292494882, 1.212719315064033, 1.1627485336998995, 1.1169195357549049, 1.0789857536097973, 1.0487133533981692, 1.0188622402964098, 0.9892226411233858, 0.9628683178274327, 0.9383820806813841, 0.9136771927837233, 0.8895470707329947, 0.8651979262873066, 0.8429950039179015, 0.820351742146705, 0.7982706267089485, 0.7748340084331694, 0.7505838282165145, 0.7288801123913522, 0.7085638190825072, 0.6873139655046093, 0.6666482559980552, 0.6458333333333333] 
 Grad_Magnitude: 2.903487970182166
Iter: 63 Freeze: 0
freeze!!
{'loss': 0.2316, 'grad_norm': 1.7950689792633057, 'learning_rate': 5e-05, 'epoch': 0.11}

whole 0.14615347199999998
self.total_flops 28.06146662400004
I/C: [1, 0.6338154205508681, 0.5889969531215546, 0.5757533392257228, 0.5482542581026778, 0.5273587266146401, 0.5121081489578466, 0.4909342456979034, 0.47673714375322684, 0.45735039453149373, 0.4369716518795125, 0.4171453012423785, 0.39811895333176145, 0.3817346415299655, 0.36811219144586255, 0.35387491888356887, 0.33885663777439373, 0.324622045010541, 0.31046807933291626, 0.2952133128509149, 0.27920840805008684, 0.26188353384788376, 0.24459127309862289, 0.2256240690113572, 0.20546360400918107, 0.18257556348231255, 0.15699489918809612, 0.1309834987301516, 0.10351821687824347, 0.07234864364931053, 0.03825267222205128, 0.0] 
 BI/C: [2.8492527861575763, 1.7891107622284848, 1.6499428259815836, 1.6004376305578927, 1.5152720580533254, 1.4502264126621838, 1.4017348739531257, 1.3406380512994105, 1.2986205292530721, 1.2462743447686642, 1.1939921348000837, 1.1453424840938202, 1.1007561527519945, 1.063917649652586, 1.0345983200261173, 1.005691880273953, 0.97699214619112, 0.9515174635839182, 0.9278762750326894, 0.9040204847997302, 0.8807289451572768, 0.8572219685114919, 0.8358221151041265, 0.8139895871118847, 0.7927088730885681, 0.7700977178652952, 0.7466874872152631, 0.7257772306801789, 0.7062289866076664, 0.6857635815699556, 0.6658718248399945, 0.6458333333333333] 
 Grad_Magnitude: 2.8492527861575763
Iter: 64 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 28.499927040000042
I/C: [1, 0.6338257993608407, 0.5890079593836134, 0.5757646526262163, 0.5482662661438971, 0.5273712851665185, 0.5121210129202711, 0.49094749790617515, 0.4767505964285573, 0.4573641117085419, 0.43698560039497364, 0.41715937499063216, 0.3981328929874028, 0.381748411551021, 0.36812571320701426, 0.353888033790153, 0.3388691812735808, 0.3246342601194118, 0.3104798996418131, 0.29522479345644115, 0.27921947873907, 0.2618941189971099, 0.24460142905304852, 0.22563353134230188, 0.20547259952998806, 0.18258387785927338, 0.15700226604459827, 0.1309901712657422, 0.1035242370147482, 0.07235377724284327, 0.038254264097726184, 0.0] 
 BI/C: [2.4853996245750603, 1.5633247703653916, 1.4445901544102653, 1.4040674232632389, 1.3324390410377775, 1.2783608531057267, 1.2387222015929111, 1.1880881209638539, 1.1540964611495603, 1.1110952306217943, 1.0681497123400467, 1.0283726437003815, 0.9921395070714052, 0.9626647407559619, 0.9397488191591405, 0.9171928155975112, 0.8948168906116105, 0.8752546232286386, 0.8572916412549154, 0.8391415861215576, 0.8214836594520749, 0.8036377440815312, 0.7876299958002754, 0.77124452817172, 0.755340760866147, 0.738276244461513, 0.7205144626638109, 0.704933778588018, 0.6905412915878644, 0.6753486034400635, 0.6606539251100815, 0.6458333333333333] 
 Grad_Magnitude: 2.4853996245750603
Iter: 65 Freeze: 0
freeze!!
{'loss': 0.1716, 'grad_norm': 3.0705621242523193, 'learning_rate': 5e-05, 'epoch': 0.11}

whole 0.14615347199999998
self.total_flops 28.938387456000044

whole 0.14615347199999998
self.total_flops 29.376847872000045
I/C: [1, 0.6338599764266934, 0.5890460262568576, 0.5758050198069142, 0.5483098564062593, 0.5274177591088884, 0.512169883116066, 0.4909988943098009, 0.4768043212852505, 0.4574202662305983, 0.4370439295608673, 0.4172195179200131, 0.39819290476240154, 0.38180930655826045, 0.3681873751062, 0.353949497642171, 0.3389290101871603, 0.32469407488789304, 0.3105401462048759, 0.29528507404342935, 0.27928019826456557, 0.26195319976827414, 0.2446611703627352, 0.22569181671126176, 0.20553132238409746, 0.18264084524469895, 0.1570520002501541, 0.13103785804818122, 0.10357128314041703, 0.07239496783096341, 0.038264830167514, 0.0] 
 BI/C: [2.756573445813424, 1.7317132131446267, 1.5977591079106719, 1.5505457758429493, 1.468835024393327, 1.4065881031922765, 1.3603546621002238, 1.3019261473563357, 1.261955109086678, 1.2119914545678916, 1.1620887552811394, 1.115699188216985, 1.0732359906845124, 1.0382706011208922, 1.0105793417552271, 0.9832853531220942, 0.9561884729985024, 0.9322153127149284, 0.910016700554612, 0.8876098922404558, 0.8657495541119391, 0.8436774444214845, 0.8236476796152563, 0.8031958692102368, 0.7832810927834606, 0.7620759748920102, 0.7400907961881682, 0.7205317724526997, 0.7022924370223738, 0.6831599765152847, 0.6645549305306235, 0.6458333333333333] 
 Grad_Magnitude: 2.756573445813424
Iter: 67 Freeze: 0
freeze!!
{'loss': 0.2161, 'grad_norm': 3.470564603805542, 'learning_rate': 5e-05, 'epoch': 0.12}

whole 0.14615347199999998
self.total_flops 29.815308288000047
I/C: [1, 0.6338977861699496, 0.5890879919278047, 0.5758494699553675, 0.5483580002196867, 0.5274691010585064, 0.5122238562806799, 0.4910553564065888, 0.4768629686260519, 0.45748077669532483, 0.4371060092579243, 0.4172823604582701, 0.39825386170778987, 0.3818691804876344, 0.36824725565429683, 0.35400790965789763, 0.3389805493796742, 0.32474425604925206, 0.31058969518906376, 0.2953342894907333, 0.2793287259898575, 0.26199904805401614, 0.24470706512774645, 0.22573558843472485, 0.20557393190712137, 0.1826812478627992, 0.15708587124787401, 0.13106972859518154, 0.10360234073208047, 0.07241996592577793, 0.038274640306597316, 0.0] 
 BI/C: [3.022424717958298, 1.8968269138795353, 1.7479543533610566, 1.694182817327769, 1.6025898763079827, 1.5323361022277993, 1.4796382888068151, 1.413568577721936, 1.3677353528786265, 1.3109447310732023, 1.2542200053431636, 1.2013451513089837, 1.1527692367359774, 1.1124162448881392, 1.0800413888653142, 1.0480990513456598, 1.0163621275681407, 0.988061813780112, 0.9617087324266, 0.9351280008730394, 0.9091458600894017, 0.8829282243925013, 0.858954702913113, 0.834515011566653, 0.8106658665819799, 0.785400569543829, 0.7592742675465617, 0.7358149195234459, 0.713804281444574, 0.6908082084722418, 0.6683808321001086, 0.6458333333333333] 
 Grad_Magnitude: 3.022424717958298
Iter: 68 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 30.25376870400005
I/C: [1, 0.6342119132078918, 0.5894262085104203, 0.5762023969585792, 0.5487302824119485, 0.5278612234969835, 0.5126327984091982, 0.49148245008645225, 0.477309079313939, 0.4579469831284482, 0.43759191132549147, 0.417786665862739, 0.3987686718825859, 0.3823963989449185, 0.36878567779732535, 0.3545528501248202, 0.33952742368384525, 0.3253015075976019, 0.31115938411255806, 0.2959160546923271, 0.2799266767683386, 0.2626012257376219, 0.24532628399044118, 0.22636239006260628, 0.20621807212408863, 0.18333251653857446, 0.15771967062254785, 0.1317139262585863, 0.10426108928522747, 0.07306506645557333, 0.038325047099342056, 0.0] 
 BI/C: [2.6552869019035934, 1.6697642822935477, 1.5415500373007314, 1.4968587601464722, 1.418949970602448, 1.3597872643603515, 1.316038760714363, 1.2605438208631619, 1.2228271220516382, 1.1754842586796281, 1.1281962224962163, 1.0842855850259636, 1.0441339235044915, 1.011208858976542, 0.9852891774042878, 0.9597396830412033, 0.9343618139631908, 0.9120173708561571, 0.8913858981490403, 0.8705524728862122, 0.8502499556845495, 0.8297208972577766, 0.8111813204767706, 0.792217234071266, 0.7737840729234515, 0.754091872640244, 0.7336125304726084, 0.7155104901468149, 0.6986846269821939, 0.6809617826037039, 0.6631614983416455, 0.6458333333333333] 
 Grad_Magnitude: 2.6552869019035934
Iter: 69 Freeze: 0
freeze!!
{'loss': 0.5038, 'grad_norm': 3.6619956493377686, 'learning_rate': 5e-05, 'epoch': 0.12}

whole 0.14615347199999998
self.total_flops 30.69222912000005

whole 0.14615347199999998
self.total_flops 31.13068953600005
I/C: [1, 0.6342906412975473, 0.5895110759922197, 0.5762910415403559, 0.5488227593149669, 0.5279584331594306, 0.5127340075125113, 0.49158788243223084, 0.4774188823052299, 0.45806091554491, 0.4377098045291385, 0.41790806174756157, 0.3988918512630033, 0.38252152563497427, 0.36891246227494057, 0.3546793208113471, 0.3396507060300982, 0.32542568832353497, 0.3112858591361231, 0.2960440338351191, 0.2800566974055492, 0.2627301039168232, 0.2454581053609493, 0.22649265973829927, 0.20635070132477176, 0.18346506117269695, 0.1578445976194943, 0.13183886866162378, 0.1043880929683273, 0.07318764657548435, 0.03833781626339675, 0.0] 
 BI/C: [2.9142706396260425, 1.8308176222371197, 1.6880783696443793, 1.637001308350536, 1.5494665493443118, 1.482508160626633, 1.4324649560275715, 1.3695296965686614, 1.3261065262543439, 1.272117200332864, 1.2181871586791135, 1.1679624206940833, 1.1218591078913867, 1.0836873706542463, 1.05320345315834, 1.0231216776470728, 0.9932227202078476, 0.9666611332229703, 0.9419820248819823, 0.9170795966546301, 0.8927605895631159, 0.8681874782447669, 0.8458044810938106, 0.8229483897740297, 0.8006808951685125, 0.7770278613952936, 0.7525008600469528, 0.7305936880446617, 0.7100896476933958, 0.6885934079659785, 0.6668975396214231, 0.6458333333333333] 
 Grad_Magnitude: 2.9142706396260425
Iter: 71 Freeze: 0
freeze!!
{'loss': 0.2817, 'grad_norm': 4.6112847328186035, 'learning_rate': 5e-05, 'epoch': 0.12}

whole 0.14615347199999998
self.total_flops 31.569149952000053
I/C: [1, 0.6343378954620326, 0.5895637336143359, 0.57634702040359, 0.5488835650727932, 0.5280234853063788, 0.5128026304774825, 0.4916601707700542, 0.47749452917032675, 0.45813972430350314, 0.4377919834082192, 0.4179928027269, 0.39897695445255454, 0.3826077707830736, 0.36900019055532435, 0.35476653119457346, 0.3397353526776747, 0.3255097232565862, 0.31137008848926834, 0.2961280743796005, 0.2801415964361913, 0.26281129097196543, 0.2455388708293351, 0.2265713948339005, 0.20642912297272004, 0.18354062292995132, 0.15790672893557756, 0.13189629554386184, 0.10444171006953383, 0.0732275692279954, 0.038360916682847086, 0.0] 
 BI/C: [2.277034317348053, 1.4351506326621948, 1.328187818132702, 1.292839322650256, 1.2290078210741693, 1.1812518051158136, 1.146710539170633, 1.1020960486246107, 1.0727261910556543, 1.0350998979333053, 0.9975200013136378, 0.9628334662480189, 0.9313631628396084, 0.9060913717812162, 0.8868268187100647, 0.8678732017463937, 0.8490593712422727, 0.8328562734386906, 0.8181252355536025, 0.8032191633975806, 0.7887703501344281, 0.7741170597979617, 0.7611794023573637, 0.7478702298782327, 0.7350230985544725, 0.7210906423311578, 0.7064645603329731, 0.6938954211869488, 0.6824238991628517, 0.6701685848761331, 0.6577559213994146, 0.6458333333333333] 
 Grad_Magnitude: 2.277034317348053
Iter: 72 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 32.00761036800005
I/C: [1, 0.6344624077103801, 0.5896979578968076, 0.5764878907087663, 0.549034714673377, 0.52818365879233, 0.5129697183335097, 0.491834683309206, 0.47767615540993497, 0.4583280121779825, 0.43798658537857926, 0.4181928323677662, 0.39917719688297004, 0.3828102739115239, 0.3692043084093265, 0.354969192423513, 0.33993207515410345, 0.3257046340562438, 0.3115651368290108, 0.2963211595111795, 0.2803342233510272, 0.2629965864134415, 0.24572522551132, 0.22675399873951904, 0.20660978140440417, 0.1837118933238177, 0.15805086331618767, 0.1320286117752998, 0.1045637365880354, 0.0733186166610662, 0.03841554758113103, 0.0] 
 BI/C: [2.823474727090954, 1.7749013115124614, 1.6372890607079993, 1.5884678030220376, 1.5043368377445503, 1.4401347522935573, 1.3923124060429264, 1.3319998901550703, 1.2905887937782687, 1.2389380167706747, 1.1873432099085157, 1.1393334385399159, 1.095300045272557, 1.058956868293716, 1.0300609823648363, 1.0015444987962765, 0.9731930820834629, 0.9480871434454285, 0.9248101810495919, 0.9013125800933537, 0.8783846802826727, 0.8551923709653686, 0.8341411055216328, 0.8126219712020032, 0.7916787480825609, 0.7693799046023763, 0.7461991166604078, 0.7255910087627021, 0.7063471115110472, 0.6861094158789169, 0.6656744978960063, 0.6458333333333333] 
 Grad_Magnitude: 2.823474727090954
Iter: 73 Freeze: 0
freeze!!
{'loss': 0.278, 'grad_norm': 1.5671842098236084, 'learning_rate': 5e-05, 'epoch': 0.13}

whole 0.14615347199999998
self.total_flops 32.44607078400005
I/C: [1, 0.634467617510686, 0.589703783656823, 0.5764941084589384, 0.5490415179470879, 0.5281909567486821, 0.512977438751975, 0.49184284066986733, 0.4776847093935182, 0.4583369913444811, 0.43799594194641556, 0.41820250706696566, 0.39918707127551717, 0.38282022026082346, 0.36921439328730604, 0.35497923856651986, 0.33994169125999707, 0.32571427632165817, 0.3115747743099716, 0.29633076617458326, 0.2803438088248225, 0.26300574495087886, 0.24573443138780987, 0.22676295128794724, 0.20661854689619494, 0.1837201306146872, 0.15805795753583024, 0.13203526418495176, 0.1045699904261882, 0.07332311186550175, 0.03841841562430179, 0.0] 
 BI/C: [2.2080590687900954, 1.3925890188502383, 1.2895132545948105, 1.2558747290188936, 1.1946230942749017, 1.1489563287579025, 1.1160989250058873, 1.0734737465663309, 1.0456300454989327, 1.009778559618871, 0.9739707217688673, 0.9409663753716416, 0.9110714746552478, 0.8871903764002012, 0.8691334258433239, 0.8513728997774423, 0.833740889497653, 0.8186476502429094, 0.80498469126335, 0.791149150683039, 0.7777591521819702, 0.7641618739090091, 0.7522395756924084, 0.7399510370088326, 0.7281129781271873, 0.7152144315006332, 0.7016255988269053, 0.6900494773366094, 0.6795402982015992, 0.6682527808338354, 0.65681129913542, 0.6458333333333333] 
 Grad_Magnitude: 2.2080590687900954
Iter: 74 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 32.88453120000005
I/C: [1, 0.6345662918690462, 0.5898154759907895, 0.5766137660341477, 0.5491725038319458, 0.5283322091546203, 0.5131271093602169, 0.492001732873828, 0.477851904753483, 0.45851242490521504, 0.43817969332038187, 0.41839241059068194, 0.39937844667308436, 0.3830152311721457, 0.3694122579137148, 0.35517536640952413, 0.3401323313292808, 0.3259041449779319, 0.3117658864225489, 0.29652338332058753, 0.28053755932572766, 0.2631920911859895, 0.24592188176681928, 0.22694632091637973, 0.20680017159116632, 0.1838928798912495, 0.1582062807122571, 0.13217269229394565, 0.10469793249534932, 0.0734150372278903, 0.038478035059518134, 0.0] 
 BI/C: [2.455684093271804, 1.546663216797013, 1.4297171289246144, 1.3899824248858808, 1.3195446669454949, 1.2664360642774704, 1.2275683202471226, 1.177838208343694, 1.1445444345356344, 1.1023438555808656, 1.0601911314479167, 1.0211513486464119, 0.9855604740180208, 0.9566615494470654, 0.9342381956463175, 0.9121364671095239, 0.8901717037685131, 0.8710384659867356, 0.8534990800703982, 0.8357680190708674, 0.8185317795008659, 0.8010531053877117, 0.7854493288395505, 0.7694314949483916, 0.7539179459311534, 0.7372167679237984, 0.7197312965420257, 0.7045012903886285, 0.6904604364280309, 0.6755291384046305, 0.6604337119885051, 0.6458333333333333] 
 Grad_Magnitude: 2.455684093271804
Iter: 75 Freeze: 0
freeze!!
{'loss': 0.4378, 'grad_norm': 2.6459062099456787, 'learning_rate': 5e-05, 'epoch': 0.13}

whole 0.14615347199999998
self.total_flops 33.322991616000046
I/C: [1, 0.6345840044116824, 0.5898353635103113, 0.5766349435251975, 0.5491954720472313, 0.528356811000534, 0.5131530635698369, 0.49202906705373, 0.4778804761048909, 0.45854215152419425, 0.43821060587394994, 0.4184239876995736, 0.39941030637989794, 0.38304677549003036, 0.36944419980193427, 0.35520657893406926, 0.34016209275291776, 0.32593342594295693, 0.3117952418918056, 0.2965522086896149, 0.2805658828230455, 0.2632192218994955, 0.24594884524300334, 0.22697087081139616, 0.2068243231708532, 0.18391616677564868, 0.15822569033889458, 0.13219068696226446, 0.10471486169740055, 0.0734273021198069, 0.038485807189374076, 0.0] 
 BI/C: [2.420449987813602, 1.5248126197919436, 1.4098475401530408, 1.3709837894016825, 1.3018584924886725, 1.2498131912529473, 1.211803660656109, 1.1630875359066601, 1.1305714938037013, 1.0892761553683667, 1.0480279273875197, 1.0098468839447712, 0.9750645034073883, 0.9468769730696027, 0.925073356310115, 0.9035848347609421, 0.8822302221722995, 0.863668172133374, 0.8466779933983499, 0.8294979980699455, 0.8128058178016393, 0.7958737913719035, 0.7807912263802316, 0.7652977299424409, 0.750303965249224, 0.7341391109064457, 0.7171979613657641, 0.702482914158012, 0.6889404523830733, 0.6745169820395911, 0.6599323643284439, 0.6458333333333333] 
 Grad_Magnitude: 2.420449987813602
Iter: 76 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 33.761452032000044
I/C: [1, 0.6346014895359264, 0.5898558633376738, 0.5766568533033352, 0.5492193391059722, 0.5283825781613282, 0.5131803315908663, 0.4920580098382672, 0.47791090187444185, 0.45857404311528066, 0.4382437779104414, 0.4184582869088612, 0.3994454306317534, 0.38308226948542345, 0.3694799337210415, 0.35524155457283485, 0.3401959475323943, 0.32596687121506723, 0.31182884151908935, 0.2965848580649307, 0.28059856818939644, 0.2632512295597173, 0.2459807251154664, 0.2270015558751888, 0.2068546037730611, 0.18394492245002605, 0.15824937339950593, 0.13221220033252512, 0.10473503413337962, 0.07344233846464729, 0.038495222265393716, 0.0] 
 BI/C: [2.6626800145767375, 1.6753711054202745, 1.5468225263405426, 1.5019868861495316, 1.4238624113684732, 1.3645268839497933, 1.320630636200755, 1.264956545440814, 1.227103172641184, 1.179591701092951, 1.1321315012558346, 1.088044982228979, 1.0476965237928764, 1.014601929196121, 0.988529841675193, 0.962802529049428, 0.937221967023002, 0.9147147849031778, 0.893937765175935, 0.8729501385764897, 0.8525007831214397, 0.8317865056157943, 0.8131076453986918, 0.7939752635972344, 0.7753938096948598, 0.7555226829621395, 0.7347934117738215, 0.7165169677850258, 0.6995316175887343, 0.6815732393795486, 0.6634376721185324, 0.6458333333333333] 
 Grad_Magnitude: 2.6626800145767375
Iter: 77 Freeze: 0
freeze!!
{'loss': 0.2446, 'grad_norm': 3.5251681804656982, 'learning_rate': 5e-05, 'epoch': 0.13}

whole 0.14615347199999998
self.total_flops 34.19991244800004
I/C: [1, 0.6346292149470164, 0.5898866716601561, 0.5766894784197123, 0.5492544627853297, 0.5284200771489879, 0.5132197540690232, 0.4920994652329151, 0.47795429819784563, 0.4586192972885954, 0.4382909511906374, 0.4185069206082586, 0.3994945156848976, 0.38313209100240786, 0.3695304627870003, 0.3552921070031594, 0.34024566977306137, 0.3260166449285877, 0.3118791333331934, 0.2966351961875023, 0.2806490576091912, 0.2633000563546882, 0.2460299449848704, 0.2270492907810839, 0.20690243619779655, 0.18399047770438437, 0.1582867910109408, 0.13224606235608866, 0.10476644737864514, 0.07346471011929524, 0.038508888782004036, 0.0] 
 BI/C: [2.347518514114625, 1.4795995851926895, 1.3687378044953518, 1.331677400767545, 1.265269601986257, 1.2154263399270102, 1.1791937651755884, 1.1325774337963992, 1.1016721366000877, 1.0622515491936138, 1.0228760969704034, 0.9864739904850106, 0.9533655788931645, 0.9266528894642931, 0.906131385402962, 0.8859126743872389, 0.8658220060930617, 0.8484423626304416, 0.8325887747910595, 0.8165487882220288, 0.8009835009120658, 0.7851822383462808, 0.771178252559234, 0.7567720904818696, 0.7428536497948737, 0.7277955044819215, 0.7119747040340723, 0.6983219099123579, 0.6858088228664104, 0.6724319911592309, 0.6589001235151508, 0.6458333333333333] 
 Grad_Magnitude: 2.347518514114625
Iter: 78 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 34.63837286400004
I/C: [1, 0.6346411011386822, 0.5898996924498947, 0.5767028515163121, 0.5492679107856049, 0.5284339793741765, 0.5132338794927441, 0.4921139809301772, 0.47796916613842316, 0.4586344575450674, 0.43830616967557584, 0.4185222416699482, 0.39950983503610576, 0.3831471208191306, 0.36954528067197023, 0.35530623979380105, 0.34025893360516024, 0.3260295927251566, 0.3118916355787533, 0.29664733247125247, 0.280660946539291, 0.26331091564786185, 0.24604061100026486, 0.22705928919523438, 0.20691184098199403, 0.18399899088502145, 0.1582937611836844, 0.13225200772817558, 0.10477169492203328, 0.07346849646264324, 0.03851126879802728, 0.0] 
 BI/C: [2.3163058637569773, 1.4602307601164497, 1.35112194512304, 1.3148314343243153, 1.2495831089823877, 1.200679857841918, 1.165205813979312, 1.1194863851308274, 1.089268985184552, 1.0506493677077702, 1.0120738278278143, 0.9764321735882122, 0.9440402301420359, 0.917958485254655, 0.8979857628854769, 0.8783110745813791, 0.8587625087368858, 0.841889832896145, 0.8265227652173879, 0.810971931551246, 0.7958896811146503, 0.7805735975723281, 0.7670320429070591, 0.7530931057205275, 0.739635555273672, 0.7250531803079971, 0.7097176849785443, 0.6965220441850526, 0.6844513713765261, 0.6715278057083074, 0.6584514541515969, 0.6458333333333333] 
 Grad_Magnitude: 2.3163058637569773
Iter: 79 Freeze: 0
freeze!!
{'loss': 0.2189, 'grad_norm': 1.9155353307724, 'learning_rate': 5e-05, 'epoch': 0.14}

whole 0.14615347199999998
self.total_flops 35.07683328000004

whole 0.14615347199999998
self.total_flops 35.515293696000036
I/C: [1, 0.6346555322914721, 0.5899164670820093, 0.5767201385907497, 0.5492851315570167, 0.5284518780955904, 0.5132521219788011, 0.49213263744826374, 0.4779883149961781, 0.4586541249339725, 0.4383260548822484, 0.4185423974896558, 0.3995298453466902, 0.38316663417161645, 0.36956447743536064, 0.35532444309017547, 0.3402761172264763, 0.3260462853942352, 0.3119082286622193, 0.2966633435847726, 0.28067667333194535, 0.2633257786970695, 0.24605516250938558, 0.22707284128892527, 0.2069249257290742, 0.18401099219036016, 0.15830340132383422, 0.1322605899039059, 0.10477932918756652, 0.07347427346283338, 0.038514865440637, 0.0] 
 BI/C: [2.286212316970757, 1.4415623513134288, 1.3341461974839823, 1.2985981415230505, 1.2344672305200082, 1.1864705683963357, 1.1517279076068985, 1.1068730747920523, 1.0773189775936336, 1.0394718265934626, 1.0016675868707887, 0.9667591879097271, 0.9350575400717688, 0.9095835364028797, 0.8901395259945379, 0.8709886438405546, 0.851962300249437, 0.8355779591811825, 0.8206802713325606, 0.805600548183746, 0.7909837728004249, 0.7761354842311503, 0.7630394358908992, 0.7495503784397327, 0.7365371569450343, 0.7224130943017303, 0.7075444602155858, 0.6947894079885558, 0.6831449137302283, 0.6706578748011028, 0.6580199349088208, 0.6458333333333333] 
 Grad_Magnitude: 2.286212316970757
Iter: 81 Freeze: 0
freeze!!
{'loss': 0.2771, 'grad_norm': 2.14789080619812, 'learning_rate': 5e-05, 'epoch': 0.14}

whole 0.14615347199999998
self.total_flops 35.953754112000034
I/C: [1, 0.6346741351113979, 0.5899382094176043, 0.57674282731571, 0.5493081052654333, 0.5284759394737748, 0.5132769289713929, 0.4921579022231666, 0.4780141654691479, 0.45868050564166307, 0.4383526744494283, 0.4185684069892536, 0.3995550346218491, 0.38319014644630395, 0.36958671545373917, 0.35534443052968295, 0.3402899323565979, 0.3260589574267426, 0.31192030564528644, 0.2966746778915942, 0.2806869173350016, 0.26333436363910995, 0.24606341011444402, 0.22707982313594638, 0.2069309911264079, 0.1840161302363482, 0.15830800055926927, 0.13226432995996631, 0.10478271394740482, 0.07347610837529288, 0.03851579748794702, 0.0] 
 BI/C: [2.2571801873843955, 1.4235619273183833, 1.317780303158508, 1.2829492028435128, 1.2198967576435649, 1.1727752721635636, 1.1387387003762686, 1.0947177438432234, 1.0658034196550388, 1.0287011966099773, 0.9916407693845843, 0.9574379097267518, 0.9264007809385931, 0.9015108797829849, 0.8825751999135467, 0.8639275306986814, 0.8453971288544593, 0.8294830911939276, 0.815037708715891, 0.8004124572089805, 0.7862438867221643, 0.7718461233983182, 0.7591801209982222, 0.7461250404881307, 0.7335402666631721, 0.7198588324283026, 0.7054427710847926, 0.6931131859739473, 0.6818806107926869, 0.6698151563613661, 0.6576014106216639, 0.6458333333333333] 
 Grad_Magnitude: 2.2571801873843955
Iter: 82 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 36.39221452800003
I/C: [1, 0.6346814459349425, 0.5899464875748415, 0.5767514541346447, 0.5493167647318966, 0.5284848237311278, 0.5132860530319089, 0.49216730749621823, 0.47802384621419425, 0.4586904170130074, 0.4383626242087103, 0.4185784490099006, 0.39956503841707863, 0.38319989885368794, 0.3695964810814846, 0.3553537000419877, 0.3402985500488298, 0.32606752092828595, 0.31192883886976763, 0.2966830794750085, 0.2806952200974835, 0.26334225003015965, 0.24607125864109966, 0.2270871320783361, 0.20693812546768336, 0.18402266254948424, 0.1583134079353053, 0.1322690441240276, 0.10478723214254923, 0.07347940896725139, 0.03851765344904346, 0.0] 
 BI/C: [2.229155683781936, 1.4061620077510475, 1.3019541256586205, 1.267814483231631, 1.2058032059405777, 1.1595254747989114, 1.1261702072068165, 1.0829545747073066, 1.054657978143061, 1.0182750345219422, 0.9819330071223258, 0.9484131575542656, 0.9180195073209839, 0.8936964195708887, 0.8752540683602541, 0.8570953701385575, 0.8390522980160671, 0.8235940269748583, 0.8095862150637763, 0.7954006336232426, 0.7816661180862574, 0.767704866306993, 0.7554543701082236, 0.7428190474927927, 0.7306486492887329, 0.7173947661632909, 0.7034148985123589, 0.6914961275301473, 0.6806612725493086, 0.6690029958471964, 0.6571981922919543, 0.6458333333333333] 
 Grad_Magnitude: 2.229155683781936
Iter: 83 Freeze: 0
freeze!!
{'loss': 0.2535, 'grad_norm': 4.078275680541992, 'learning_rate': 5e-05, 'epoch': 0.14}

whole 0.14615347199999998
self.total_flops 36.83067494400003

whole 0.14615347199999998
self.total_flops 37.26913536000003
I/C: [1, 0.6344732338842469, 0.5897652986406318, 0.5765770878717038, 0.5491575180935447, 0.5283372677071603, 0.5131461237641338, 0.49203856565995807, 0.4779020062652678, 0.45857852401062416, 0.4382609752397622, 0.41848629694721656, 0.3994813818484911, 0.38312262389527707, 0.36952375879160876, 0.35528490237888766, 0.34023343156790453, 0.3260062631431744, 0.3118713957039111, 0.2966297719108767, 0.28064605136766796, 0.2632971420227087, 0.24603040781946306, 0.2270499060088945, 0.20690558004770437, 0.18399519256432667, 0.15829058528089554, 0.13225109603518903, 0.10477478770666582, 0.07346918438896323, 0.03851281402368591, 0.0] 
 BI/C: [2.45687569596734, 1.5471797458205077, 1.4302725273652932, 1.3905420944158884, 1.320110779506627, 1.2670111806052298, 1.2281442099614555, 1.17841627773733, 1.1451215202059732, 1.1029197246466007, 1.0607625846913666, 1.0217134593000945, 0.9861070735412547, 0.9571867336004996, 0.9347440422908009, 0.9126124537366874, 0.8906074993165012, 0.8714513084195323, 0.8538932827327201, 0.8361394133736851, 0.818882269951748, 0.8013746963424553, 0.7857524867803096, 0.7697048936692301, 0.7541706454896149, 0.7374422142933514, 0.719912633776994, 0.7046544703310805, 0.690591095611102, 0.675616425354749, 0.660482948784289, 0.6458333333333333] 
 Grad_Magnitude: 2.45687569596734
Iter: 85 Freeze: 0
freeze!!
{'loss': 0.2759, 'grad_norm': 5.088403701782227, 'learning_rate': 5e-05, 'epoch': 0.15}

whole 0.14615347199999998
self.total_flops 37.707595776000026
I/C: [1, 0.6346103596749606, 0.5899125427494708, 0.5767243930867251, 0.5493016838289894, 0.5284844382950201, 0.5132946354889981, 0.4921890633516038, 0.4780558519208235, 0.45873622241045736, 0.4384222783730191, 0.41865163737856415, 0.39964978885044106, 0.38329209969498057, 0.36969374713305636, 0.35545364930155343, 0.34039879032757137, 0.3261700730535071, 0.3120343844012801, 0.2967892712174084, 0.2808049722951507, 0.26345000424941517, 0.24618098070869046, 0.2271929816880296, 0.2070441367812831, 0.18412577139636344, 0.15839894182010109, 0.13234620065374458, 0.10485771498586068, 0.07352842951655153, 0.0385489791090077, 0.0] 
 BI/C: [2.4215960516365422, 1.5255872342057697, 1.4106744724857836, 1.3718064186074637, 1.3026712229911197, 1.2506325135925582, 1.212618229798079, 1.1639001414855874, 1.1313818028943414, 1.0900849827571089, 1.0488313127872666, 1.0106414714004766, 0.9758427630382045, 0.9476302548660327, 0.925801317180257, 0.9042760431608039, 0.8828722444260682, 0.8642795206899925, 0.8472632707756118, 0.8300501686061819, 0.81333112377741, 0.7963578381778829, 0.7812483992224288, 0.7657133476121176, 0.7506886320720256, 0.7344833238211088, 0.7174733655435248, 0.7027139536665898, 0.6891345952472459, 0.6746472278626254, 0.6600062708518722, 0.6458333333333333] 
 Grad_Magnitude: 2.4215960516365422
Iter: 86 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 38.146056192000025
I/C: [1, 0.634691623128361, 0.5900012072597841, 0.5768148823715766, 0.549393310820639, 0.5285793931498144, 0.5133916849610676, 0.49228904192383394, 0.4781584496358024, 0.4588417828760134, 0.4385305017450259, 0.41876268151753704, 0.3997626551746487, 0.38340490252661974, 0.36980735674389037, 0.35556649897006476, 0.3405089107040056, 0.32627860054704844, 0.31214240327072384, 0.2968949860881969, 0.2809095068334502, 0.2635493961582906, 0.24627899336385473, 0.22728628435768228, 0.20713419356764728, 0.18421144878115225, 0.15846838304152552, 0.1324072803031691, 0.10491228575509241, 0.07356738534757305, 0.0385729246520116, 0.0] 
 BI/C: [2.387653267065173, 1.5046855373842176, 1.3916883804992939, 1.3536568172371641, 1.28578067236093, 1.2347659488160767, 1.1975761671462137, 1.1498341064767263, 1.118063820373118, 1.0776385040843117, 1.0372548716160657, 0.9998921485846215, 0.9658709572587987, 0.9383401850922308, 0.9171049849892858, 0.8961665401358004, 0.8753448087381481, 0.857296774242875, 0.8408048930993239, 0.8241163796198713, 0.8079167926819897, 0.7914613244333477, 0.7768489566871453, 0.7618129371904813, 0.7472823169963514, 0.7315866781833733, 0.7150851282271654, 0.7008124204870956, 0.6877059007660089, 0.6736961406566027, 0.6595370385871129, 0.6458333333333333] 
 Grad_Magnitude: 2.387653267065173
Iter: 87 Freeze: 0
freeze!!
{'loss': 0.2204, 'grad_norm': 3.0417022705078125, 'learning_rate': 5e-05, 'epoch': 0.15}

whole 0.14615347199999998
self.total_flops 38.58451660800002
I/C: [1, 0.6347220023254267, 0.5900347879879771, 0.5768497516632718, 0.5494298152522564, 0.5286177626287336, 0.5134315046363893, 0.4923306465199372, 0.4782016453456377, 0.45888649802409726, 0.4385767759270863, 0.4188103625751503, 0.3998115929017842, 0.38345441710972267, 0.3698574675032551, 0.3556163463846753, 0.3405574789508446, 0.3263269819741517, 0.31219103440148055, 0.29694321074435026, 0.2809576269012758, 0.2635957886296372, 0.246325500591688, 0.22733082104317331, 0.20717776827207515, 0.18425286339096103, 0.158502429058626, 0.1324372667574709, 0.10493979560051665, 0.07358677483956653, 0.0385851826862131, 0.0] 
 BI/C: [2.110754821864922, 1.3326645576406495, 1.2351929915714337, 1.2039891201389064, 1.1464023291683823, 1.1037218152053747, 1.0732620210950432, 1.0334741818718147, 1.00780535728087, 0.9744849718193705, 0.9412013685989713, 0.9105879523612981, 0.8829281856662022, 0.8610049811623179, 0.8446472233291314, 0.8285505060324899, 0.8125555605451047, 0.799014245247992, 0.7868492070037016, 0.7745094813137913, 0.7626023883375963, 0.7504671710537275, 0.7399635664828562, 0.7290831388934322, 0.718650736681748, 0.7071872970090096, 0.6950065596058654, 0.6847998872387873, 0.675625908153879, 0.6656489407613325, 0.6555414476527988, 0.6458333333333333] 
 Grad_Magnitude: 2.110754821864922
Iter: 88 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 39.02297702400002
I/C: [1, 0.6347323121806131, 0.5900470510133622, 0.5768630386409949, 0.5494447111722977, 0.528633982670522, 0.5134488396393453, 0.49234923174209266, 0.47822133067623723, 0.458907389072391, 0.43859850680795337, 0.41883281181651577, 0.39983444403480717, 0.38347682585305826, 0.3698799642521878, 0.35563874986692434, 0.34057864792625486, 0.3263479188098956, 0.3122121875327416, 0.29696385071729653, 0.28097813778698505, 0.2636151983410458, 0.24634544912860123, 0.2273490343793106, 0.20719596927547956, 0.18427023800217385, 0.15851605823154383, 0.13245002861367022, 0.10495152318947734, 0.07359486925951705, 0.03859016754633454, 0.0] 
 BI/C: [1.8546566943997251, 1.173518645855557, 1.0904041001238838, 1.0655152153443328, 1.01744536913004, 0.9824726220505019, 0.9582374117102724, 0.9258060571657165, 0.9057803269528567, 0.879031474767745, 0.8523143116373662, 0.827943122832941, 0.8061667212105605, 0.7894296911988257, 0.7775835825424612, 0.7659666044071904, 0.7544376462306905, 0.7450659150427066, 0.7369040148004885, 0.7285877878770644, 0.7206521574655167, 0.7125150769461617, 0.7058133780290197, 0.6987783378004696, 0.692138695734704, 0.6845923896094861, 0.6764133980941202, 0.6699715828557781, 0.6644371021128384, 0.6581952317076475, 0.6518393172166811, 0.6458333333333333] 
 Grad_Magnitude: 1.8546566943997251
Iter: 89 Freeze: 0
freeze!!
{'loss': 0.4881, 'grad_norm': 6.5777974128723145, 'learning_rate': 5e-05, 'epoch': 0.15}

whole 0.14615347199999998
self.total_flops 39.46143744000002
I/C: [1, 0.6348616141558564, 0.590190386451496, 0.5770131741626817, 0.5496038765822783, 0.52880255357166, 0.5136245037677594, 0.4925335315195896, 0.4784136620367965, 0.4591077432710302, 0.4388069678683027, 0.41904836177441607, 0.40005499157606705, 0.38369962942947283, 0.3701051689450527, 0.3558615046830165, 0.34079469101396775, 0.3265621200730976, 0.31242795586331173, 0.2971788342083961, 0.28119341188519603, 0.26382421061727745, 0.24655579546130144, 0.2275463649594982, 0.2073884502725574, 0.18445151485546554, 0.1586641222398442, 0.13258316511627838, 0.10507404263254623, 0.07368309124240777, 0.03864602185175556, 0.0] 
 BI/C: [1.8389400699855942, 1.1639834515592935, 1.0817695526256916, 1.0572743564474985, 1.009797875327688, 0.9753074335326262, 0.9514590957918746, 0.9194859484132984, 0.8998117109566759, 0.8734706957526772, 0.8471606086598398, 0.8231745516242782, 0.8017578656552342, 0.7853337878932676, 0.7737592012413071, 0.7624054864747887, 0.7511340086292966, 0.7420077751291219, 0.734085179387959, 0.726006831648861, 0.7183070689767961, 0.7104007631892421, 0.7039257213705197, 0.697106316824785, 0.6906874656292104, 0.6833644057845197, 0.6753963305256401, 0.6691679665353052, 0.6638436947134849, 0.6578016039657353, 0.6516503942982745, 0.6458333333333333] 
 Grad_Magnitude: 1.8389400699855942
Iter: 90 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 39.89989785600002
I/C: [1, 0.6349811864399398, 0.5903292864338991, 0.577159470101121, 0.5497609630188911, 0.5289712239152597, 0.513801886288961, 0.492721875109019, 0.4786112582638097, 0.45931515416092145, 0.4390233065752501, 0.41927351364648213, 0.4002871800230867, 0.383934905590137, 0.37034333000328234, 0.356097348028185, 0.34102326314543097, 0.3267902934492647, 0.3126573319135551, 0.29740335085721237, 0.2814183902136979, 0.26404104309286247, 0.24677366720596802, 0.2277498587139738, 0.20758772682259807, 0.18463928882117064, 0.15881421640105242, 0.1327174780319582, 0.10519473626221412, 0.07377175521862735, 0.03870321180665783, 0.0] 
 BI/C: [2.052656174787944, 1.297077260444698, 1.2029204276668415, 1.1731655782566284, 1.1177643824482522, 1.0768589606115864, 1.0478262876951376, 1.0097277619837606, 0.9853536288318635, 0.9535380709816996, 0.9217547550513603, 0.8925646160067726, 0.8662389638221318, 0.8454796336180779, 0.8301328288786265, 0.81502497642577, 0.8000023378945352, 0.7873839901039859, 0.7761112518406765, 0.764657039826058, 0.7536321978831009, 0.7423668310948827, 0.7327099747062558, 0.7226521634355834, 0.7130531146362994, 0.7024379678138812, 0.6910792000557091, 0.6816852159682547, 0.6733035937265929, 0.6641069360128071, 0.6547916450121481, 0.6458333333333333] 
 Grad_Magnitude: 2.052656174787944
Iter: 91 Freeze: 0
freeze!!
{'loss': 0.5111, 'grad_norm': 3.0335285663604736, 'learning_rate': 5e-05, 'epoch': 0.16}

whole 0.14615347199999998
self.total_flops 40.338358272000015

whole 0.14615347199999998
self.total_flops 40.77681868800001
I/C: [1, 0.6350177604153612, 0.5903841635339546, 0.5772211431045869, 0.5498342831049463, 0.5290550481038074, 0.5138932759396504, 0.4928227363477084, 0.47871953303614484, 0.459431898679224, 0.43914820448082925, 0.41940579414556023, 0.4004245913252738, 0.3840751258668552, 0.37048734146013035, 0.3562401978933821, 0.34116162790990834, 0.32692798748747715, 0.3127966914331182, 0.29754071816936056, 0.28155619020447065, 0.26417210207524555, 0.24690542664388673, 0.22787318523405042, 0.20770793372416135, 0.18475218048365705, 0.15890491069578147, 0.13279914487120256, 0.10526987398621308, 0.07382525059669655, 0.0387382540925529, 0.0] 
 BI/C: [2.266297265338459, 1.4299902844150465, 1.3239032646779627, 1.288895029481373, 1.2255806045075657, 1.1782672578216693, 1.1440555601956204, 1.0998374084778866, 1.070767307153266, 1.0334825201636098, 0.9962319634571148, 0.9618423658447907, 0.9306108672210536, 0.9055207137558385, 0.8864077345621401, 0.8675505030739648, 0.8487824429137616, 0.8326749192535363, 0.818056429001121, 0.8032324116980798, 0.7888858472747124, 0.7742645382879108, 0.7614289254834774, 0.7481397794478608, 0.7353639610940843, 0.7214620273353098, 0.7067243087560715, 0.6941710232516403, 0.6827386781406162, 0.6703935272346703, 0.6579221497427271, 0.6458333333333333] 
 Grad_Magnitude: 2.266297265338459
Iter: 93 Freeze: 0
freeze!!
{'loss': 0.2411, 'grad_norm': 2.57585072517395, 'learning_rate': 5e-05, 'epoch': 0.16}

whole 0.14615347199999998
self.total_flops 41.21527910400001

whole 0.14615347199999998
self.total_flops 41.65373952000001
I/C: [1, 0.6345223445486109, 0.589963922755999, 0.576819325796844, 0.5494773472550368, 0.5287313214102545, 0.5135909803142718, 0.4925527956058117, 0.47846822930604405, 0.4592083986712267, 0.43895282514488954, 0.41923690055840196, 0.40027930550084756, 0.3839457884534804, 0.3703691544927508, 0.3561307538512259, 0.34105938703536587, 0.32683368800668755, 0.3127095371216526, 0.2974609495576258, 0.2814838385372162, 0.26410564362578, 0.24684650787886617, 0.22781815400147146, 0.20766019725411317, 0.18471192387199473, 0.1588703748249728, 0.13277185913379966, 0.10525087297803604, 0.07381280790657828, 0.038734582953863304, 0.0] 
 BI/C: [2.0058735236531176, 1.2670888300318524, 1.175751637043175, 1.1472124502006231, 1.0936668908138594, 1.054258975540565, 1.0264237307245165, 0.9897488141664159, 0.9664556275618187, 0.9359050995961793, 0.9053830479886058, 0.8773883200382138, 0.8521822457278059, 0.8323986292748646, 0.8178971906904833, 0.8036178594497998, 0.7894146629650679, 0.7775666309109597, 0.7670348631913404, 0.7563208801690076, 0.7460289044505297, 0.7354914163729287, 0.7265357237202428, 0.7171741683953542, 0.7082700457943047, 0.69836877968231, 0.6877255276707024, 0.6790165561536768, 0.6712999747700082, 0.6627734163466599, 0.6541362528988374, 0.6458333333333333] 
 Grad_Magnitude: 2.0058735236531176
Iter: 95 Freeze: 0
freeze!!
{'loss': 0.3108, 'grad_norm': 0.8721906542778015, 'learning_rate': 5e-05, 'epoch': 0.16}

whole 0.14615347199999998
self.total_flops 42.09219993600001
I/C: [1, 0.6345244622899792, 0.5899663440025344, 0.5768219002777083, 0.5494801376917451, 0.5287343108675658, 0.5135941391819479, 0.49255613097279505, 0.4784717225416525, 0.45921205711005353, 0.4389566326335478, 0.41924082749053476, 0.40028336221373095, 0.3839498291335152, 0.3703732423635909, 0.35613474489149033, 0.34106318561664967, 0.3268374198047291, 0.31271327119486286, 0.2974646407634445, 0.281487485153862, 0.2641090267437093, 0.246849914944918, 0.2278213774232553, 0.2076633633894835, 0.18471487601928685, 0.15887273873047922, 0.13277401003843597, 0.10525283809864502, 0.07381425661941272, 0.038735455347839585, 0.0] 
 BI/C: [2.215671213472402, 1.3974413856453791, 1.2943726351021398, 1.2606696997616564, 1.1993450465035804, 1.153636663813972, 1.1207112808943827, 1.0780216678551318, 1.0501133517467447, 1.0141886353522795, 0.9782953301204047, 0.9451936212578272, 0.9151722421666827, 0.8911402173751499, 0.8729429430363572, 0.8549907828817213, 0.8371225882306703, 0.8218560862282275, 0.8080436206607788, 0.7940298209458068, 0.7804821687214222, 0.7666630568730153, 0.7545915524037647, 0.7420714936303845, 0.7300568681774686, 0.7169406452168609, 0.7030044704965455, 0.6912053039735129, 0.6805023681297662, 0.6689044655661344, 0.6571843875081077, 0.6458333333333333] 
 Grad_Magnitude: 2.215671213472402
Iter: 96 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 42.530660352000005
{'loss': 0.395, 'grad_norm': 2.0515003204345703, 'learning_rate': 5e-05, 'epoch': 0.17}

whole 0.14615347199999998
self.total_flops 42.969120768
I/C: [1, 0.6345415206161343, 0.5900020560239166, 0.5768659119006372, 0.5495380957551621, 0.5288039814850114, 0.5136731920427522, 0.49264573473445994, 0.4785699641940064, 0.45931962849346364, 0.4390734791714286, 0.41936516025393017, 0.4004145464878421, 0.3840841692189853, 0.37051111041955676, 0.35627173153701586, 0.341195422396325, 0.32696973641616417, 0.3128470085325566, 0.2975970034757068, 0.28162325785098663, 0.26423851633394774, 0.2469816134995811, 0.227945079040121, 0.20778646706000709, 0.18483163304830194, 0.15896519144620602, 0.1328559640255817, 0.10532922264229701, 0.07387223046597122, 0.038772901330536555, 0.0] 
 BI/C: [1.9620458755415533, 1.239895415605903, 1.151043971391814, 1.1235975467360897, 1.0717007080435936, 1.0336274967965124, 1.006869071845778, 0.9714653085311313, 0.9491468536707659, 0.9197300233957141, 0.890340161187152, 0.8634188806628272, 0.8392237820824842, 0.8203265958894166, 0.8065965221957171, 0.7930772684860465, 0.7796273808442451, 0.7684878813672824, 0.7586376142292599, 0.7486056296676675, 0.7389920217218106, 0.7291270512618857, 0.720819180388286, 0.7121034907190952, 0.7038432903442189, 0.6946022353274314, 0.6846194575228634, 0.6765429046126517, 0.669441986191382, 0.6615390291031972, 0.6535278291768846, 0.6458333333333333] 
 Grad_Magnitude: 1.9620458755415533
Iter: 98 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 43.407581184
I/C: [1, 0.6345481415259191, 0.5900097936519174, 0.5768741659548035, 0.5495470156105233, 0.5288136016172732, 0.5136833622512836, 0.49265639201154876, 0.4785810825351039, 0.4593310992902424, 0.43908512732255484, 0.4193767887739807, 0.40042610649784255, 0.3840953358600682, 0.37052208082878435, 0.35628192244237994, 0.3412048770278827, 0.32697887322481833, 0.3128559027992033, 0.29760557118423275, 0.2816314335731961, 0.26424612029006955, 0.24698893574319808, 0.22795160297738945, 0.20779283076825264, 0.18483728053575202, 0.15896970825568432, 0.13285994598485848, 0.10533269091947003, 0.07387492672057569, 0.038774661788637574, 0.0] 
 BI/C: [2.168200365726315, 1.3679977726831294, 1.2676236399457703, 1.2351051040011887, 1.1755673702113298, 1.1313057356330778, 1.099547397163162, 1.0582351779752235, 1.0313830651519234, 0.9966865091948415, 0.9620194224695513, 0.9300799489892561, 0.90115302291624, 0.8780801597707295, 0.8607176620735406, 0.8435872837471046, 0.8265336927729718, 0.8120338976632441, 0.7989589267930431, 0.7856830570881548, 0.7728694700761677, 0.7597779257432624, 0.7484074796047424, 0.7365858067413935, 0.7252682458335158, 0.7128662075608735, 0.6996441656405493, 0.6885293052702024, 0.6784926579060548, 0.667569525407033, 0.6565267134516393, 0.6458333333333333] 
 Grad_Magnitude: 2.168200365726315
Iter: 99 Freeze: 0
freeze!!
{'loss': 0.3683, 'grad_norm': 4.598783493041992, 'learning_rate': 5e-05, 'epoch': 0.17}

whole 0.14615347199999998
self.total_flops 43.8460416
I/C: [1, 0.6345464971678271, 0.5900221673627024, 0.5768924815345402, 0.5495754559237335, 0.5288505326117143, 0.5137269535755856, 0.49270778427045897, 0.47863863343912555, 0.45939562919720006, 0.4391565553183899, 0.41945429416493624, 0.40050870329607935, 0.3841814433922832, 0.370611200763352, 0.356371631178691, 0.3412928186786263, 0.32706777558809424, 0.31294687740080884, 0.2976970977313062, 0.28172489454516547, 0.2643358241459859, 0.2470806724181904, 0.22803895306530472, 0.2078810323473967, 0.1849222418020967, 0.1590373331477699, 0.1329211290958366, 0.10539024127576878, 0.07391737982515145, 0.0388023661711169, 0.0] 
 BI/C: [1.7065934894706818, 1.0811855683156852, 1.0066393232368787, 0.9854883935419674, 0.9430767371312981, 0.9126857012896861, 0.892132690045489, 0.8640609952238982, 0.8473679796969631, 0.8245012917768738, 0.8016571935470824, 0.7809584333216419, 0.7626291591410755, 0.7489052969251082, 0.7396752191629176, 0.7306247851011007, 0.7216320682400278, 0.7146525797804852, 0.7087956897015, 0.702778956996966, 0.697127424664013, 0.6912515105432911, 0.6867358945832494, 0.6818592670036246, 0.6773842081942556, 0.6720521491689369, 0.6660638687775168, 0.6617435209185204, 0.658274291506238, 0.6540998221707992, 0.6498324495563821, 0.6458333333333333] 
 Grad_Magnitude: 1.7065934894706818
Iter: 100 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 44.284502016
{'loss': 0.2416, 'grad_norm': 0.9389190673828125, 'learning_rate': 5e-05, 'epoch': 0.17}

whole 0.14615347199999998
self.total_flops 44.722962431999996
I/C: [1, 0.6346384950151778, 0.5901190059142851, 0.5769885747357165, 0.5496699070847539, 0.528945951386373, 0.5138228899797778, 0.49280402550181485, 0.4787360344094145, 0.45949431948074054, 0.43925645853830586, 0.41955577226284546, 0.4006109745411647, 0.3842829969533539, 0.3707123352355122, 0.356470336610986, 0.3413884916190561, 0.3271617911870058, 0.31303941366566645, 0.2977877029647389, 0.2818134071381646, 0.26442002260671676, 0.24716281167659834, 0.22811611057498482, 0.20795458981841894, 0.18499101825781236, 0.15909416673088814, 0.13297063352412863, 0.10543328244426875, 0.07394847884610907, 0.038821835910759564, 0.0] 
 BI/C: [2.1281267122135064, 1.3432871518857619, 1.245187685709776, 1.21366074862851, 1.1556199444863993, 1.112574007581014, 1.0817951903236185, 1.0416401215172308, 1.0156757857715328, 0.9820129850103314, 0.9483781106510747, 0.9174189647914446, 0.8894131870952031, 0.8671479558397144, 0.8504869997395671, 0.834047156249336, 0.8176786455045266, 0.8038227949637754, 0.791367211373474, 0.778711854003977, 0.7665118730945333, 0.7540296137613174, 0.7432466318054978, 0.7320104106254558, 0.72127685875999, 0.7094737402479713, 0.6968457502396198, 0.6863030312499097, 0.6768230769691664, 0.6664596443758175, 0.6559816697570714, 0.6458333333333333] 
 Grad_Magnitude: 2.1281267122135064
Iter: 102 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 45.161422847999994
I/C: [1, 0.6346499316077036, 0.5901323353787854, 0.577002932852778, 0.5496857851738496, 0.5289631665401633, 0.5138412123597745, 0.4928235721422238, 0.47875673222295584, 0.4595161842715725, 0.43927946702734916, 0.4195797302807716, 0.4006357335817827, 0.3843083297480889, 0.37073825195582844, 0.35649632208600274, 0.3414139118558797, 0.3271873461727074, 0.31306527913363147, 0.29781355993442815, 0.2818393464580578, 0.2644449985993406, 0.24718809620062163, 0.2281404557431647, 0.20797857255383598, 0.18501383554401335, 0.15911317093142074, 0.13298757350430604, 0.10544946704319548, 0.07395998964974397, 0.03882917142096705, 0.0] 
 BI/C: [1.6757152278785024, 1.0621697932094314, 0.9893565016553284, 0.9689618135424598, 0.9276904373671568, 0.8982258380375397, 0.8784201012299724, 0.851231469673841, 0.8352166221961314, 0.8131398422954047, 0.7910849396520645, 0.7711366104917462, 0.7535135496964511, 0.740410337762081, 0.7317199785046025, 0.7232030919765084, 0.7147416607376442, 0.7082595285181998, 0.7028801597276626, 0.6973431417932088, 0.6921647827271373, 0.6867631624876886, 0.6827007975165754, 0.6782804353041472, 0.6742564305504484, 0.6693896153448786, 0.6638713332643327, 0.6599965696424025, 0.6569596990399812, 0.6532246195268007, 0.6493999876885073, 0.6458333333333333] 
 Grad_Magnitude: 1.6757152278785024
Iter: 103 Freeze: 0
freeze!!
{'loss': 0.2003, 'grad_norm': 3.2497737407684326, 'learning_rate': 5e-05, 'epoch': 0.18}

whole 0.14615347199999998
self.total_flops 45.59988326399999

whole 0.14615347199999998
self.total_flops 46.03834367999999
I/C: [1, 0.6343881261218035, 0.5899116666704797, 0.5767935332643123, 0.5495020934823033, 0.5287983774945844, 0.5136892492995269, 0.4926900542432657, 0.47863450931068485, 0.45940985641843174, 0.43918954818657346, 0.41950496945484317, 0.4005745303125477, 0.38425727952108935, 0.37069499958867774, 0.35645892446667377, 0.34138133959432715, 0.32716047060436176, 0.3130440081587298, 0.297796901386779, 0.28182831113507134, 0.26443602737244115, 0.24718434928186958, 0.2281390492907036, 0.2079817522621927, 0.18502069204215274, 0.15911671520683848, 0.13299238230180677, 0.1054581949822986, 0.07396805267667991, 0.03883683981534996, 0.0] 
 BI/C: [1.8734943974656535, 1.184595045939018, 1.1008130274023211, 1.075580737248539, 1.0270316690735144, 0.9916694645390908, 0.9670946892758759, 0.9342736314330018, 0.9139325596894083, 0.8868202061141012, 0.8597318333794719, 0.8349955785282919, 0.8128556037309953, 0.7957632315184462, 0.7836006284693603, 0.7716288610665254, 0.7597173514195277, 0.7500194285673843, 0.7415538721534829, 0.7329104992415021, 0.724668861142612, 0.7161734213708177, 0.709178350657087, 0.7017798076506634, 0.6948263238191538, 0.6869293810206749, 0.6782977924714436, 0.6715077113772697, 0.665656390610907, 0.6590207481946433, 0.6522852256784984, 0.6458333333333333] 
 Grad_Magnitude: 1.8734943974656535
Iter: 105 Freeze: 0
freeze!!
{'loss': 0.2969, 'grad_norm': 3.938410997390747, 'learning_rate': 5e-05, 'epoch': 0.18}

whole 0.14615347199999998
self.total_flops 46.47680409599999
I/C: [1, 0.6341568672701612, 0.589714077502257, 0.5766043235630577, 0.5493333246116108, 0.5286442142108619, 0.5135446540159146, 0.49255968416143286, 0.4785123333289309, 0.4592997131768412, 0.439092042188336, 0.4194188878366101, 0.40049853204215496, 0.38418858079638496, 0.3706312543200027, 0.3563996597030213, 0.34132499962694235, 0.3271081982050131, 0.31299505231762165, 0.2977515563047352, 0.2817862580313687, 0.26439743946632493, 0.24714899765048826, 0.2281055215046727, 0.2079513825301572, 0.1849944818138397, 0.15909475924005112, 0.13297451054471354, 0.10544500378650423, 0.07395917057685915, 0.03883320079155047, 0.0] 
 BI/C: [1.8572712372624252, 1.1740971155455384, 1.0912898695889497, 1.0664787113451475, 1.018572568181647, 0.9837278090282978, 0.9595677505844367, 0.9272394644823301, 0.9072726611392946, 0.8805983690850611, 0.853947807869879, 0.8296262824898053, 0.8078758030957888, 0.7911246672483938, 0.7792569608643172, 0.7675774503938697, 0.7559554029104854, 0.7465289184992943, 0.7383229425468542, 0.7299407633306737, 0.7219562153901904, 0.7137199897337341, 0.7069706425211824, 0.6998197000788406, 0.6931110607611085, 0.6854677790182825, 0.6770959718205463, 0.6705492585041386, 0.664933321935709, 0.6585392200966569, 0.6520464200803687, 0.6458333333333333] 
 Grad_Magnitude: 1.8572712372624252
Iter: 106 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 46.915264511999986
I/C: [1, 0.6341585989789847, 0.5897174412328087, 0.5766083360616625, 0.5493384558282637, 0.528650317160799, 0.5135514739698018, 0.4925673850782017, 0.4785206985211251, 0.45930881093485065, 0.4391019195566438, 0.4194293564003582, 0.400509468800178, 0.3841996765937908, 0.3706425649520337, 0.3564108389087271, 0.34133564317421883, 0.3271187812005098, 0.3130057719928371, 0.2977621660176233, 0.281796666620513, 0.26440728216921766, 0.24715883595775018, 0.22811465195291214, 0.20796041141855323, 0.18500325029678558, 0.15910184416470685, 0.13298079404677535, 0.10545088071535538, 0.07396363423526914, 0.038835768105580655, 0.0] 
 BI/C: [1.8414847184327188, 1.1642976738932844, 1.0823741705474845, 1.0579519744173147, 1.01063184068391, 0.97626174289974, 0.9524850425134898, 0.920609746025308, 0.9009904614836683, 0.8747207520571497, 0.8484745841359425, 0.8245373283356919, 0.8031490497873501, 0.7867171700958133, 0.7751272720465792, 0.763723515417267, 0.7523762471744848, 0.7432064861976109, 0.7352470911912783, 0.7271127057295315, 0.7193724822507233, 0.7113823578757799, 0.7048670771976503, 0.6979529404280657, 0.6914779598331234, 0.6840761487600837, 0.6759508234058952, 0.6696359187859561, 0.6642442439094159, 0.6580803154399147, 0.6518183025606339, 0.6458333333333333] 
 Grad_Magnitude: 1.8414847184327188
Iter: 107 Freeze: 0
freeze!!
{'loss': 0.2351, 'grad_norm': 1.3721671104431152, 'learning_rate': 5e-05, 'epoch': 0.18}

whole 0.14615347199999998
self.total_flops 47.353724927999984
I/C: [1, 0.6341648804387751, 0.5897247187472515, 0.5766161286618462, 0.5493469490725481, 0.5286594718338347, 0.5135611637373405, 0.49257761977058995, 0.4785314132836408, 0.45931992616234857, 0.4391134135721953, 0.41944100486327346, 0.40052120842856687, 0.38421128887704775, 0.3706542913426339, 0.3564221175722221, 0.34134597737427, 0.3271289057929344, 0.31301577043028206, 0.29777182796895435, 0.2818056758275794, 0.26441566900553404, 0.2471669643083331, 0.22812210442436925, 0.2079676507163579, 0.18500923910858358, 0.15910662849344212, 0.13298453287782716, 0.10545430972119059, 0.07396625852887496, 0.038837589185862005, 0.0] 
 BI/C: [1.8261182127320617, 1.1547671205850414, 1.0737025890108718, 1.0496586384104227, 1.0029080964093247, 0.9689994096564657, 0.9455954701460513, 0.9141604889278874, 0.8948791076347247, 0.8690026421415961, 0.8431494599001461, 0.8195855781553346, 0.7985493049726451, 0.7824277734468181, 0.7711081410340562, 0.7599723827194246, 0.7488920707506539, 0.7399720340868176, 0.7322523745344349, 0.7243589623017948, 0.7168561116300058, 0.7091055262577901, 0.7028178848507854, 0.6961343383417218, 0.6898867573161206, 0.6827191884245283, 0.6748342763600398, 0.6687448964061913, 0.663571681497064, 0.6576323230149439, 0.6515957608565907, 0.6458333333333333] 
 Grad_Magnitude: 1.8261182127320617
Iter: 108 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 47.79218534399998
{'loss': 0.2654, 'grad_norm': 3.315258026123047, 'learning_rate': 5e-05, 'epoch': 0.19}

whole 0.14615347199999998
self.total_flops 48.23064575999998
I/C: [1, 0.6341855328015468, 0.5897515034305174, 0.5766459913370214, 0.5493817471294303, 0.5286984596068698, 0.5136035787345726, 0.49262395156240696, 0.4785810044486549, 0.45937302266034913, 0.4391699184530486, 0.4195003495848475, 0.4005832077564987, 0.3842749276204648, 0.37071958628077273, 0.3564875590565562, 0.3414097144083519, 0.32719285715197405, 0.31308033378072125, 0.2978361051808253, 0.2818701433563163, 0.2644774030259577, 0.24722898204934973, 0.22818082916573554, 0.2080253708271345, 0.18506370558569815, 0.15915011499384768, 0.13302264531970712, 0.10548961343377203, 0.07399299236319708, 0.038854264142478154, 0.0] 
 BI/C: [1.8111559237847006, 1.1455128660847431, 1.0652930986241518, 1.041621065440701, 0.9954313385882682, 0.9619766650323254, 0.9389391435893752, 0.9079368814768689, 0.8889873510150111, 0.8634968891147671, 0.8380291161554738, 0.8148308353681861, 0.7941389872726451, 0.7783200709012703, 0.7672636071184331, 0.7563875061093208, 0.745564151125553, 0.7368857442703337, 0.7293983132171529, 0.7217375241716923, 0.7144646215954038, 0.706943021048682, 0.7008755441587181, 0.6944120106445972, 0.6883831913355368, 0.6814400461026865, 0.6737792670401399, 0.6679045790298807, 0.6629408909451392, 0.657213418381376, 0.6513891739997293, 0.6458333333333333] 
 Grad_Magnitude: 1.8111559237847006
Iter: 110 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 48.66910617599998
I/C: [1, 0.6341889911999989, 0.5897554561943661, 0.576650203860622, 0.5493863237266855, 0.528703353742387, 0.5136087298867735, 0.49262934782735407, 0.47858661110097656, 0.4593787768046236, 0.4391757911552209, 0.41950621499769897, 0.40058897169231283, 0.38428045747810047, 0.37072507752116746, 0.35649280302699443, 0.3414143920320216, 0.32719740648380374, 0.31308482108552854, 0.2978403714493981, 0.28187424062650857, 0.2644812472971339, 0.24723272423254214, 0.2281839278040008, 0.2080282903048808, 0.1850663889072581, 0.15915241120279772, 0.13302456235071475, 0.10549153600835502, 0.07399444347950654, 0.038855060570321606, 0.0] 
 BI/C: [1.796582835687324, 1.1364694508348654, 1.0570635077745898, 1.0337498672983654, 0.9880998694213292, 0.9550823527430734, 0.9323980498270263, 0.9018130553575219, 0.8831837424114823, 0.8580660207075579, 0.832970753189106, 0.8101265336911213, 0.7897684530310334, 0.7742439289548537, 0.7634438036486455, 0.7528223350379977, 0.7422528243875688, 0.7338115536557607, 0.7265517597978108, 0.7191198348854384, 0.7120727464769906, 0.7047788889560529, 0.698927620587218, 0.692682983371033, 0.6868700278495643, 0.6801500676830946, 0.6727181413532154, 0.6670579698817991, 0.6623017845428757, 0.6567876207237255, 0.6511773755875867, 0.6458333333333333] 
 Grad_Magnitude: 1.796582835687324
Iter: 111 Freeze: 0
freeze!!
{'loss': 0.2267, 'grad_norm': 0.9980782270431519, 'learning_rate': 5e-05, 'epoch': 0.19}

whole 0.14615347199999998
self.total_flops 49.107566591999976
I/C: [1, 0.6341936877148815, 0.5897607808228953, 0.5766558702434595, 0.5493924629551106, 0.528709922618691, 0.5136156482118187, 0.4926365984649084, 0.47859415461397714, 0.45938655989885124, 0.4391837420445527, 0.4195142008688687, 0.4005968594823838, 0.3842881725358826, 0.3707327332745027, 0.35650012853627305, 0.34142102828944726, 0.3272038862798767, 0.3130911648484684, 0.2978464028441747, 0.2818799830790759, 0.26448654742079214, 0.24723801828347228, 0.2281884430075315, 0.20803256842297455, 0.18507023504199474, 0.15915549645570828, 0.13302692961303064, 0.10549368194860406, 0.07399581297402404, 0.03885570128994129, 0.0] 
 BI/C: [1.7823846653770075, 1.12766091419811, 1.0490480481470197, 1.0260836690514772, 0.9809596428078202, 0.9483681607469462, 0.9260280733616151, 0.8958496805625222, 0.8775324017691878, 0.8527778923732571, 0.8280455406232892, 0.8055462522052659, 0.7855132745046917, 0.7702755646558308, 0.7597250732754259, 0.7493514990867399, 0.7390290701735736, 0.7308187264597384, 0.7237805569318342, 0.7165714368947423, 0.7097441596015106, 0.7026719310557472, 0.6970313450969414, 0.690999782100458, 0.6853970299280514, 0.6788942922083564, 0.6716849783010129, 0.6662335072481979, 0.6616793004163962, 0.6563727300956896, 0.6509709273031229, 0.6458333333333333] 
 Grad_Magnitude: 1.7823846653770075
Iter: 112 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 49.546027007999975
I/C: [1, 0.6341997486036326, 0.589767684965162, 0.5766631834112498, 0.5494003344958842, 0.528718316725788, 0.5136244530941835, 0.49264576263626203, 0.478603660057218, 0.45939632387780355, 0.43919368400305187, 0.41952413893435003, 0.4006066828430926, 0.3842977624728899, 0.37074220256241214, 0.3565092866528251, 0.34142945393962393, 0.3272120846334617, 0.3130991544826438, 0.2978539413006558, 0.28188703673258886, 0.26449307862537097, 0.24724436641095146, 0.22819396838921596, 0.20803752824023156, 0.18507436736888525, 0.1591592445141954, 0.13303005865536305, 0.10549613543677773, 0.07399743122126097, 0.03885648019002352, 0.0] 
 BI/C: [1.7685478184456294, 1.1190789863964767, 1.0412393379417468, 1.0186153890623852, 0.9740040327738289, 0.9418278312824669, 0.9198232302675418, 0.8900410654135547, 0.8720278824119053, 0.8476272976967756, 0.8232485667773015, 0.8010853026210867, 0.7813690562476687, 0.7664107068942461, 0.7561033470961328, 0.7459713083012547, 0.7358895439453363, 0.7279040994140461, 0.7210817666359067, 0.7140895667703857, 0.7074762439192217, 0.7006198696732383, 0.6951843876211574, 0.6893603880089577, 0.6839621583620412, 0.6776707495664641, 0.6706786700575575, 0.6654306337599034, 0.6610729000754824, 0.6559685815746227, 0.6507698287272032, 0.6458333333333333] 
 Grad_Magnitude: 1.7685478184456294
Iter: 113 Freeze: 0
freeze!!
{'loss': 0.2098, 'grad_norm': 1.40516996383667, 'learning_rate': 5e-05, 'epoch': 0.19}

whole 0.14615347199999998
self.total_flops 49.98448742399997
I/C: [1, 0.6342100416135596, 0.5897787783388143, 0.5766747313395821, 0.5494127366620913, 0.5287313942803912, 0.5136380336048145, 0.49265990441931884, 0.47861823789138286, 0.4594113498288578, 0.43920913739662326, 0.41953990604660313, 0.40062278726134765, 0.38431391723790087, 0.37075839110778935, 0.3565252127040593, 0.34144471847881896, 0.32722721544552624, 0.31311413728644, 0.2978685593965946, 0.2819011315183903, 0.26450644183118666, 0.24725755132569402, 0.2282062523646146, 0.20804923501796097, 0.18508506190502153, 0.15916854593560809, 0.13303815148563752, 0.10550330959390174, 0.07400289317651752, 0.03885972924694526, 0.0] 
 BI/C: [1.9581240660767985, 1.236823154901265, 1.1484075187129974, 1.1211256278760073, 1.0695001100448926, 1.031642327252569, 1.005046120497207, 0.9698387046795229, 0.9476615750653226, 0.9184123415170797, 0.8891872357319177, 0.8624148730885364, 0.8383518408664077, 0.8195562824898401, 0.8059102408990542, 0.7924579119217905, 0.7790607469921285, 0.7679853344753054, 0.758197704780908, 0.7482217551204343, 0.7386651440969239, 0.728839241527369, 0.7205871876254495, 0.7119042472835141, 0.7036931070087685, 0.6944926837856946, 0.6845162234978588, 0.6764710276820489, 0.6694119039860709, 0.6615256265765987, 0.653534564139877, 0.6458333333333333] 
 Grad_Magnitude: 1.9581240660767985
Iter: 114 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 50.42294783999997
I/C: [1, 0.634252798352818, 0.5898313187413418, 0.5767323621102636, 0.5494784581872758, 0.5288039210099535, 0.5137162487903617, 0.4927446930707346, 0.47870841183309565, 0.45950735650778035, 0.4393110692226396, 0.41964718883218904, 0.40073532666744, 0.3844295436682933, 0.37087713246547765, 0.3566446441549018, 0.34156238590055504, 0.327346560186177, 0.3132347503837564, 0.29798939428867927, 0.28202147197482097, 0.2646210558909825, 0.24737321088473524, 0.2283158745318942, 0.20815743925100333, 0.1851883282728564, 0.1592531676949677, 0.1331125523491897, 0.10557116484313701, 0.07405350672944855, 0.03889004935981197, 0.0] 
 BI/C: [1.7384032878469469, 1.10044991769136, 1.024307841117755, 1.0024313448439544, 0.9589472284543457, 0.9276833837735957, 0.9064152639278693, 0.8775030994715687, 0.8601568975422031, 0.836532393216175, 0.8129290139733205, 0.7915019573679046, 0.7724797070763235, 0.7581307373551289, 0.7483532687462074, 0.7387446526194215, 0.7291821164362484, 0.7216848006517542, 0.7153301999593998, 0.7088072195932051, 0.7026557815726042, 0.6962601888968583, 0.6912686350272765, 0.6858880557051541, 0.6809307883918726, 0.6750924160631147, 0.668554522230446, 0.6637389431626693, 0.6598021916938088, 0.6551242152484649, 0.6503524711268602, 0.6458333333333333] 
 Grad_Magnitude: 1.7384032878469469
Iter: 115 Freeze: 0
freeze!!
{'loss': 0.2735, 'grad_norm': 1.0083751678466797, 'learning_rate': 5e-05, 'epoch': 0.2}

whole 0.14615347199999998
self.total_flops 50.86140825599997
I/C: [1, 0.634258450957054, 0.5898377346672905, 0.576739194486664, 0.5494858668845615, 0.5288118472456895, 0.5137245901476187, 0.4927533992818123, 0.47871745847409225, 0.4595167036228333, 0.4393206558723779, 0.4196568162039805, 0.4007449507785099, 0.38443896445633263, 0.3708864961440786, 0.35665356756408206, 0.3415704847388982, 0.32735446089221093, 0.3132424035080973, 0.2979968054096098, 0.2820286907948407, 0.2646277390978613, 0.24737966922999902, 0.22832184613249015, 0.20816293125636925, 0.18519312263285123, 0.15925735941257427, 0.13311610613396552, 0.10557456156817702, 0.07405564761466356, 0.03889139768588875, 0.0] 
 BI/C: [1.533128530536383, 0.9729747325857361, 0.9082846819301482, 0.8914518566369467, 0.8555630880099685, 0.8304514750586377, 0.8141550977442464, 0.7911172102763966, 0.7782794947104141, 0.7599047619730354, 0.7415485666610866, 0.7251114584247138, 0.710795138130199, 0.7006000429796941, 0.694436807087321, 0.6884220849656799, 0.6824476368948981, 0.6782952160699658, 0.6751505411200337, 0.671857390147562, 0.6688919688343132, 0.6657109394400266, 0.6637684489177142, 0.6614826752346139, 0.6595702644546118, 0.6568806620677831, 0.6535742506477645, 0.6517867938322026, 0.6507747385162674, 0.6491083270396333, 0.6473595667692522, 0.6458333333333333] 
 Grad_Magnitude: 1.533128530536383
Iter: 116 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 51.29986867199997
I/C: [1, 0.6342730836340752, 0.5898567502619749, 0.5767604132874034, 0.5495106979631381, 0.5288396797922136, 0.5137548773554742, 0.4927864782186569, 0.47875292009915094, 0.4595546928254854, 0.4393612166243213, 0.41969960654768, 0.4007896053394936, 0.3844852668143838, 0.37093434153500665, 0.35670191653298744, 0.34161833030771743, 0.32740289445966364, 0.31329144063121683, 0.29804557053917635, 0.2820773598937423, 0.264675010473234, 0.24742736660762482, 0.22836790147547315, 0.20820877504511726, 0.18523628241629062, 0.1592925990873256, 0.1331465227012688, 0.10560254308955107, 0.07407644290516058, 0.038903583271282696, 0.0] 
 BI/C: [1.7165097474571225, 1.0868872653865855, 1.0119742422018922, 0.9906389418955247, 0.9479704302702189, 0.9173669584132049, 0.8966320979362713, 0.8683496775911053, 0.8514867116447946, 0.8284244641512453, 0.8053828503672953, 0.784489233933155, 0.7659694481835505, 0.7520634330920621, 0.7426712924789283, 0.7334440927075381, 0.7242607959221492, 0.7171187093803402, 0.71110488227398, 0.7049238684060533, 0.6991099803801714, 0.6930534449044125, 0.6883853885585522, 0.6833311087963424, 0.6786961959355255, 0.6731891112511773, 0.6669875120559547, 0.6624894455248276, 0.6588615810706147, 0.6544980372868651, 0.6500418924610625, 0.6458333333333333] 
 Grad_Magnitude: 1.7165097474571225
Iter: 117 Freeze: 0
freeze!!
{'loss': 0.216, 'grad_norm': 1.4281278848648071, 'learning_rate': 5e-05, 'epoch': 0.2}

whole 0.14615347199999998
self.total_flops 51.738329087999965
I/C: [1, 0.6342807843065484, 0.5898654017822114, 0.5767696089095858, 0.5495206179558265, 0.528850282038851, 0.5137660367319165, 0.4927982042875049, 0.47876519836047415, 0.4595674959913608, 0.4393744749968191, 0.4197131497855119, 0.40080336238178066, 0.38449916642933024, 0.3709484517816415, 0.3567158489530061, 0.34163184262324375, 0.3274163764689321, 0.3133050038929342, 0.2980590249468263, 0.28209063637994425, 0.2646876817151109, 0.24744014849316784, 0.22838003158713635, 0.20822092641469953, 0.18524789848859707, 0.15930275485522227, 0.13315511535307384, 0.10561074724024522, 0.07408151340314398, 0.03890645215340977, 0.0] 
 BI/C: [1.704298284125618, 1.0793160762569287, 1.0050854841173873, 0.9840507388753852, 0.9418347924176174, 0.9115979377966876, 0.8911592529886964, 0.8632266769475541, 0.8466322550540143, 0.8238825770721113, 0.8011532546953244, 0.7805563924408967, 0.7623163620842853, 0.7486571757450693, 0.7394798236582751, 0.7304657688875773, 0.721495042123645, 0.7145514630610308, 0.7087282378391861, 0.7027388137242895, 0.6971138427376415, 0.6912475534991414, 0.6867605694378759, 0.6818894249804744, 0.6774352838038095, 0.6721147195257464, 0.666103897054943, 0.6617845151457216, 0.6583300897111559, 0.6541433943206195, 0.6498655748674269, 0.6458333333333333] 
 Grad_Magnitude: 1.704298284125618
Iter: 118 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 52.17678950399996
I/C: [1, 0.6342912188998389, 0.5898769060802578, 0.5767818489436881, 0.5495338260481845, 0.5288644278341489, 0.5137809935423107, 0.492814106738013, 0.47878190019860706, 0.45958497599318043, 0.43939273906753396, 0.4197320632082158, 0.40082276191399835, 0.3845187962312767, 0.37096844250133787, 0.3567357169738615, 0.3416511664522461, 0.3274357400438416, 0.3133245705332271, 0.2980784824637869, 0.28210991054007784, 0.2647059427872404, 0.24745855396639424, 0.22839675970742637, 0.20823754823547383, 0.18526358764051565, 0.1593155170624854, 0.1331661631338679, 0.10562099909840683, 0.07408872934231348, 0.03891034716449207, 0.0] 
 BI/C: [1.6923788886519382, 1.071930629204155, 0.998366255138819, 0.9776250854780585, 0.9358511586537346, 0.9059724308936771, 0.8858230935039212, 0.85823241252509, 0.8419003168039848, 0.8194559276163791, 0.7970317047113349, 0.776724797053427, 0.7587579852658098, 0.7453396303355921, 0.7363719053154595, 0.72756574741134, 0.7188021475913937, 0.7120521947718743, 0.7064149302914804, 0.700612295741885, 0.6951714998452169, 0.6894902964665313, 0.6851798842974085, 0.6804863824819573, 0.6762084152291777, 0.6710694217677232, 0.6652435164509749, 0.6610983263871103, 0.6578128121135287, 0.6537987047311166, 0.6496941437842391, 0.6458333333333333] 
 Grad_Magnitude: 1.6923788886519382
Iter: 119 Freeze: 0
freeze!!
{'loss': 0.25, 'grad_norm': 1.1156145334243774, 'learning_rate': 5e-05, 'epoch': 0.2}

whole 0.14615347199999998
self.total_flops 52.61524991999996

whole 0.14615347199999998
self.total_flops 53.05371033599996
I/C: [1, 0.634304947634173, 0.589892060193831, 0.5767977724236051, 0.5495507716336925, 0.5288823287050214, 0.5137996940093026, 0.4928335850197633, 0.4788021122512728, 0.4596059194023775, 0.4394141146118548, 0.41975363372344116, 0.4008442220150112, 0.3845399997484644, 0.37098950730911795, 0.3567560810859908, 0.3416701778713328, 0.3274544704223822, 0.3133429603628249, 0.2980963671898567, 0.28212667226111704, 0.2647216320425247, 0.2474737946156564, 0.22841000652082077, 0.2082503018406516, 0.18527508511540916, 0.15932518045856883, 0.13317429479869142, 0.10562876602841771, 0.0740937052565775, 0.0389130580332395, 0.0] 
 BI/C: [1.6807417873436195, 1.06472568908657, 0.99181222577374, 0.9713576115241265, 0.9300152006390378, 0.900486023104411, 0.880619039040075, 0.8533617921356731, 0.8372855982742538, 0.8151390854906734, 0.7930121509649215, 0.7729876351201598, 0.7552867256169045, 0.7421028255600461, 0.7333391103836562, 0.7247352116919943, 0.7161728969583175, 0.7096116410131785, 0.704155379532347, 0.6985347418489223, 0.6932728843128502, 0.687772398805566, 0.6836339217699725, 0.6791136680244646, 0.6750074922652525, 0.6700456309846587, 0.6644012239291907, 0.6604263259923281, 0.6573061170872931, 0.6534607363640245, 0.6495260510161723, 0.6458333333333333] 
 Grad_Magnitude: 1.6807417873436195
Iter: 121 Freeze: 0
freeze!!
{'loss': 0.202, 'grad_norm': 1.003640055656433, 'learning_rate': 5e-05, 'epoch': 0.21}

whole 0.14615347199999998
self.total_flops 53.49217075199996
I/C: [1, 0.6343060131551258, 0.5898945469052443, 0.5768007418705784, 0.5495547975742153, 0.5288871546990459, 0.513805037695493, 0.492839597362751, 0.47880854777236387, 0.4596128993933795, 0.4394215604886546, 0.4197613872394474, 0.400852245602123, 0.3845480130840573, 0.37099753595173846, 0.3567638557346175, 0.34167747589451336, 0.3274615705941876, 0.3133499196628651, 0.29810297944301717, 0.2821327797394463, 0.2647272857157264, 0.2474792090722928, 0.22841462930111767, 0.20825454810576302, 0.18527885362843174, 0.1593286167770005, 0.13317700937449467, 0.10563123499484849, 0.07409496921551424, 0.038913701540926986, 0.0] 
 BI/C: [1.6693776361855355, 1.0576692671746089, 0.985391899131772, 0.9652171178255964, 0.9242966148514589, 0.8951090143578464, 0.875517809377282, 0.8485864892630517, 0.8327602347213815, 0.8109048401341316, 0.7890687497005282, 0.7693206266353072, 0.751880330667202, 0.7389261428723704, 0.7303622842984213, 0.7219568514868516, 0.7135924913644154, 0.7072159938013325, 0.7019370926160757, 0.6964947284939799, 0.6914085892102698, 0.6860855183848369, 0.6821154725666754, 0.6777657676733829, 0.6738277426208428, 0.6690397628796695, 0.6635739969237875, 0.6597661904829355, 0.6568076755762745, 0.653128275139218, 0.6493606236601083, 0.6458333333333333] 
 Grad_Magnitude: 1.6693776361855355
Iter: 122 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 53.930631167999955
I/C: [1, 0.634308691501482, 0.5898977622309399, 0.5768042039847547, 0.5495586084662393, 0.5288912914112366, 0.5138094204340776, 0.4928442300313558, 0.4788134070630796, 0.45961794467500977, 0.4394267318809458, 0.4197665818138935, 0.40085742621320153, 0.38455311474971615, 0.3710026194683887, 0.35676869337589073, 0.34168187874943473, 0.3274658669162811, 0.313354170441791, 0.29810714641400654, 0.28213668567608213, 0.2647309182425079, 0.24748263921086874, 0.2284177636591013, 0.20825771483155092, 0.18528187435138624, 0.15933139370283883, 0.13317932871455695, 0.10563358680608485, 0.07409574829331891, 0.038914052883577015, 0.0] 
 BI/C: [1.8501443153608355, 1.1699467318536567, 1.0875878251258324, 1.0629728303862118, 1.015365840793805, 0.9807621728891472, 0.956793881095585, 0.9246906452622279, 0.9048949193302588, 0.8784171161573691, 0.8519606054223048, 0.8278179987394311, 0.8062330662838978, 0.7896199285895242, 0.7778726077370048, 0.7663005793393307, 0.754773857086718, 0.7454506765967881, 0.7373440232109312, 0.7290561672267317, 0.7211629246757043, 0.7130071019612294, 0.7063509072968462, 0.6992738682090214, 0.6926534136128158, 0.6850908073150876, 0.676776949812337, 0.6703004278508542, 0.6647655750585221, 0.6584305983843445, 0.6519987301488254, 0.6458333333333333] 
 Grad_Magnitude: 1.8501443153608355
Iter: 123 Freeze: 0
freeze!!
{'loss': 0.2104, 'grad_norm': 3.0134222507476807, 'learning_rate': 5e-05, 'epoch': 0.21}

whole 0.14615347199999998
self.total_flops 54.36909158399995
I/C: [1, 0.6343341520377699, 0.5899271336137532, 0.5768358804251721, 0.5495936422836313, 0.5289293257939821, 0.5138499968675956, 0.49288766668535355, 0.47885935052128126, 0.4596665230332721, 0.4394780010493463, 0.4198204524314643, 0.4009132214611725, 0.3846104161341569, 0.37106167979486054, 0.3568280878638856, 0.341740590680707, 0.3275253000078395, 0.31341448710008196, 0.2981672874955517, 0.282196720735025, 0.2647883676541095, 0.24754114438148742, 0.22847337115528557, 0.20831305766351016, 0.18533474401904107, 0.15937483338207653, 0.13321697032499122, 0.10566874087761063, 0.07412257069036181, 0.03892923320690262, 0.0] 
 BI/C: [1.4608437855364402, 0.9281909559587808, 0.8675500792648525, 0.8525004167439567, 0.8192979188253486, 0.796361960389314, 0.7818227527942029, 0.7608605683049803, 0.7496155886291914, 0.7330945491687426, 0.7165902261477242, 0.7019126596270261, 0.6892536910832113, 0.6805198076911637, 0.6756280638601494, 0.6708731900793057, 0.6661530787743088, 0.6631742140165569, 0.6611560036107784, 0.6589937300136642, 0.6571431067076388, 0.6550831232705372, 0.654210260485232, 0.6530020335483122, 0.6521564178669165, 0.6505653647503473, 0.6483766285036764, 0.6476415176619243, 0.6476523014318823, 0.647028092467896, 0.646326073152251, 0.6458333333333333] 
 Grad_Magnitude: 1.4608437855364402
Iter: 124 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 54.80755199999995
{'loss': 0.3766, 'grad_norm': 1.690926194190979, 'learning_rate': 5e-05, 'epoch': 0.21}

whole 0.14615347199999998
self.total_flops 55.24601241599995

whole 0.14615347199999998
self.total_flops 55.68447283199995
{'loss': 0.1818, 'grad_norm': 1.4766420125961304, 'learning_rate': 5e-05, 'epoch': 0.22}

whole 0.14615347199999998
self.total_flops 56.122933247999946
I/C: [1, 0.6344723166913466, 0.5900845633116212, 0.5770042080144903, 0.5497790594771191, 0.5291293124766033, 0.5140621512713217, 0.49311320741171943, 0.47909625927840643, 0.45991524387253263, 0.43973860595252906, 0.4200906431846604, 0.40119085754752126, 0.3848935503498304, 0.3713516319808854, 0.3571183887305479, 0.3420226692742232, 0.32780838585796457, 0.3136988204088722, 0.29844891223662007, 0.28247598742499486, 0.26505678254010007, 0.24780986288035764, 0.22872924196213384, 0.2085630373249972, 0.1855669017446133, 0.15956634535867936, 0.1333829869626738, 0.10582287647389362, 0.07423446984576092, 0.038996424518509175, 0.0] 
 BI/C: [1.4541424603749555, 0.9242253619743246, 0.8639808929431069, 0.8491059237708376, 0.8161689846931298, 0.7934471711031911, 0.7790796512559071, 0.7583193949881584, 0.7472285110196162, 0.7308856059846113, 0.7145587078854838, 0.7000468902928847, 0.6875414955055682, 0.6789406645851125, 0.6741653745199989, 0.669519446048223, 0.6648997905349524, 0.6620225598965489, 0.6601017340787991, 0.6580339548029928, 0.6562768576214324, 0.654304556069836, 0.6535233736784294, 0.652398386805477, 0.6516401841195225, 0.6501320073863042, 0.6480147574317503, 0.6473565658649025, 0.6474506408165427, 0.6468958832895157, 0.6462648837606892, 0.6458333333333333] 
 Grad_Magnitude: 1.4541424603749555
Iter: 128 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 56.561393663999944
{'loss': 0.3306, 'grad_norm': 1.4763646125793457, 'learning_rate': 5e-05, 'epoch': 0.22}

whole 0.14615347199999998
self.total_flops 56.99985407999994
I/C: [1, 0.6345553173788935, 0.5901804919171636, 0.5771066495261209, 0.549891258448395, 0.5292502539026682, 0.5141902326699366, 0.49324949143744695, 0.47923943033298083, 0.46006576368237284, 0.43989635930269966, 0.42025512867601306, 0.40136021917249354, 0.3850668867562176, 0.3715288516397545, 0.3572964485931611, 0.34219752081499516, 0.32798477008144333, 0.3138774025628436, 0.29862458675124315, 0.2826503715684133, 0.2652245034507337, 0.24797786011172887, 0.22888943733696784, 0.20872066951858476, 0.18571620417344994, 0.15969090898241195, 0.13348968449772955, 0.10592113760388049, 0.07430697636221545, 0.039038153220545185, 0.0] 
 BI/C: [1.6293561016963205, 1.0332099828552466, 0.9632135945403928, 0.9440427256889735, 0.9046379541204975, 0.8766770127580727, 0.8580741189042354, 0.8323092043712637, 0.8173764083220925, 0.7965589043804294, 0.7757586885722152, 0.7569911365117722, 0.7404690415651561, 0.7283205802585567, 0.7204582343076182, 0.7127371646829138, 0.705041079016844, 0.6993025745472, 0.6946362881564758, 0.6898001663260569, 0.6853138960776737, 0.6805816541969667, 0.6771906297067644, 0.6734075006973053, 0.6700401482151236, 0.6658281270924891, 0.6609219552622988, 0.6576572264780778, 0.6552430216056242, 0.6520912079448588, 0.6488526449308192, 0.6458333333333333] 
 Grad_Magnitude: 1.6293561016963205
Iter: 130 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 57.43831449599994
I/C: [1, 0.6345620447435764, 0.5901880853806599, 0.5771147094996923, 0.549899966914364, 0.5292595334393441, 0.5142000100206031, 0.49325973975323567, 0.47925016763867134, 0.46007691520939953, 0.43990787988084423, 0.4202668828964503, 0.40137214892401196, 0.3850788721756839, 0.3715409897622163, 0.35730853478581, 0.34220918568876846, 0.327996466392389, 0.3138893148949982, 0.29863656770989355, 0.2826621434807172, 0.26523578519986113, 0.24798919721568902, 0.22890042049029133, 0.2087315122778214, 0.18572671315717243, 0.1597002638860102, 0.13349706877102363, 0.10592804716947365, 0.0743121234578283, 0.03904074743277648, 0.0] 
 BI/C: [1.619165783044153, 1.0268890427742623, 0.9574618386833431, 0.9385416161062827, 0.899514276314446, 0.87185903867668, 0.853503179133031, 0.8280300209006213, 0.8133212274655923, 0.7927643989238973, 0.7722246645456936, 0.7537046873271788, 0.7374160373534967, 0.7254735140834068, 0.7177904074817815, 0.7102474555414422, 0.7027289360737712, 0.6971562565750079, 0.6926492739632203, 0.6879733593343048, 0.6836448413501051, 0.6790716481568859, 0.6758317956271256, 0.6722019419699471, 0.6689854612616545, 0.6649294540760635, 0.6601830512958685, 0.6570673250771959, 0.6547979456006244, 0.6517947771624395, 0.6487050408953577, 0.6458333333333333] 
 Grad_Magnitude: 1.619165783044153
Iter: 131 Freeze: 0
freeze!!
{'loss': 0.2723, 'grad_norm': 2.0728368759155273, 'learning_rate': 5e-05, 'epoch': 0.22}

whole 0.14615347199999998
self.total_flops 57.87677491199994

whole 0.14615347199999998
self.total_flops 58.315235327999936
{'loss': 0.0937, 'grad_norm': 1.5892002582550049, 'learning_rate': 5e-05, 'epoch': 0.23}

whole 0.14615347199999998
self.total_flops 58.753695743999934
I/C: [1, 0.634602270654164, 0.5902327492994648, 0.577161716802355, 0.5499505090247476, 0.5293131986844684, 0.5142562859480002, 0.49331897153967647, 0.4793118675561245, 0.460141153692181, 0.4399747315207521, 0.4203358561804919, 0.40144259440768004, 0.38515033388301684, 0.37161355677647123, 0.35738082379944686, 0.3422798029639016, 0.3280673934560682, 0.3139605076162543, 0.29870696152837145, 0.28273180991720553, 0.2653021067491043, 0.24805527459664092, 0.22896307708027686, 0.20879273672997953, 0.18578404891365305, 0.15974805540882617, 0.13353913117307112, 0.1059665019998682, 0.07433995103754779, 0.039056204477188355, 0.0] 
 BI/C: [1.7953908328937909, 1.1364557846980272, 1.05721103122571, 1.0339664269789286, 0.9884280939109472, 0.9554986412469733, 0.9328796438554166, 0.9023690568123344, 0.883793444256224, 0.8587332324555933, 0.8336918914111682, 0.8108892560031599, 0.7905597654494867, 0.7750487136642563, 0.7642606976943356, 0.7536263002448211, 0.743017347017388, 0.734568435713624, 0.7273011357905651, 0.7198453431882978, 0.7127748914874787, 0.7054305458526728, 0.699567923283454, 0.6932699008651476, 0.687432282749906, 0.680661760443785, 0.6731213390329073, 0.6673927827240708, 0.6626047026184937, 0.6569982513666904, 0.6512954318072385, 0.6458333333333333] 
 Grad_Magnitude: 1.7953908328937909
Iter: 134 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 59.19215615999993
{'loss': 0.622, 'grad_norm': 5.48586368560791, 'learning_rate': 5e-05, 'epoch': 0.23}

whole 0.14615347199999998
self.total_flops 59.63061657599993
I/C: [1, 0.634753916515244, 0.5904371710411268, 0.5773870422834975, 0.5502130190535524, 0.5296068035603753, 0.51457347329702, 0.49366578879745004, 0.4796809281924632, 0.4605360388140171, 0.4403961589236321, 0.42078052283812867, 0.4019061927920573, 0.3856273846277352, 0.37210257599549446, 0.35787398899395284, 0.3427674649370544, 0.32855894124072926, 0.3144566237082365, 0.29920040672395054, 0.2832213706448903, 0.26576906474056855, 0.2485214402918449, 0.22940677725474296, 0.2092266133546483, 0.18619553370810493, 0.16008733508702544, 0.13383272176317587, 0.10623448227741773, 0.07453704774238297, 0.039167639722611745, 0.0] 
 BI/C: [1.5965037097726862, 1.0131080870403848, 0.9450253367067303, 0.9266880202940148, 0.8885490322438739, 0.8616109738336399, 0.8438286516856451, 0.8190356206525526, 0.8048436511387275, 0.7848885892411095, 0.7649494970138826, 0.7469952839856882, 0.7312335458298519, 0.7197488386496693, 0.7124613929532191, 0.7053011663537467, 0.6981530195742578, 0.6929356797013358, 0.6887694789454957, 0.6844283795772548, 0.6804289818708589, 0.6761694800131384, 0.6732479257496566, 0.6699212348615591, 0.6670155322019357, 0.6632713080642954, 0.6588075111622771, 0.6559781910929501, 0.6540015604423658, 0.6512703081560031, 0.6484492307950711, 0.6458333333333333] 
 Grad_Magnitude: 1.5965037097726862
Iter: 136 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 60.06907699199993
I/C: [1, 0.634766436427917, 0.5904522262115058, 0.5774031782751476, 0.5502306308141948, 0.5296258862080057, 0.5145937304957772, 0.4936871320957585, 0.4797032719621183, 0.46055939405915114, 0.4404202939664469, 0.4208052276366353, 0.40193143091872635, 0.3856525811454044, 0.37212798735974645, 0.35789893672112044, 0.3427910816333329, 0.3285823512303342, 0.3144798528099291, 0.299222742447474, 0.28324301155598725, 0.26578919583844446, 0.24854122148201002, 0.22942442026650112, 0.20924355748692017, 0.18621116736480467, 0.1600997850803464, 0.13384318831124647, 0.10624386070413323, 0.07454392063588264, 0.03917199856116376, 0.0] 
 BI/C: [1.4099708665204729, 0.8971896369415415, 0.8394987521541134, 0.8257390558790172, 0.7944917293722636, 0.7731365416137527, 0.7598668970814919, 0.7404054877223669, 0.7303063650342784, 0.7151174539396519, 0.6999423286176825, 0.6865198984071947, 0.6750337059507177, 0.6673242008431355, 0.6633218147291835, 0.659431113330611, 0.6555502922706937, 0.6533757878565547, 0.652129644106029, 0.6507284402934921, 0.6496292300896871, 0.6482997003070625, 0.6481527691019834, 0.647646744085477, 0.6475136600318295, 0.646639653814964, 0.6451290149872605, 0.6450628108379685, 0.6457503118081196, 0.6457706327309034, 0.6457117662829835, 0.6458333333333333] 
 Grad_Magnitude: 1.4099708665204729
Iter: 137 Freeze: 0
freeze!!
{'loss': 0.1988, 'grad_norm': 1.9800379276275635, 'learning_rate': 5e-05, 'epoch': 0.23}

whole 0.14615347199999998
self.total_flops 60.507537407999926
I/C: [1, 0.6347856185363017, 0.5904732692187795, 0.5774252369182387, 0.5502541731791534, 0.5296507808139234, 0.5146197812304154, 0.49371442591591197, 0.47973167920480303, 0.4605889969784377, 0.4404510495427821, 0.4208369548758261, 0.4019638604156855, 0.38568570352273845, 0.37216155805151435, 0.35793250332167625, 0.3428237970655352, 0.3286151391327666, 0.31451267573539554, 0.29925542281230383, 0.2832751968786643, 0.2658198153805211, 0.24857177656508284, 0.22945347245441086, 0.2092718288293192, 0.18623745323853735, 0.160121388465049, 0.13386172164153518, 0.10626063740606644, 0.07455588110294441, 0.03917897405210351, 0.0] 
 BI/C: [1.7634315326535859, 1.116913455864385, 1.0395400495407188, 1.017109253623365, 0.9728075966284842, 0.9408775873295876, 0.919059655855379, 0.8894978137131118, 0.8716449752688369, 0.8474264432028646, 0.823225004905336, 0.8012153080074168, 0.7816268098331383, 0.7667616998958078, 0.7565326772525827, 0.7464427557568664, 0.7363641959262657, 0.7284208177515843, 0.7216384811319055, 0.7146620212133155, 0.7080629085134521, 0.7011747125009681, 0.6957671256664022, 0.6899091086473796, 0.6845182709268526, 0.6781998113509269, 0.6710830900077899, 0.6657744916691162, 0.6614097327840527, 0.656208534207341, 0.650908539347686, 0.6458333333333333] 
 Grad_Magnitude: 1.7634315326535859
Iter: 138 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 60.945997823999924
I/C: [1, 0.6348165713305768, 0.590515077839493, 0.5774720099161096, 0.5503089949536353, 0.5297124411336713, 0.5146869567806527, 0.49378814139124727, 0.4798106880612323, 0.46067383494325725, 0.4405419886520846, 0.42093353419146123, 0.40206476810223307, 0.38579022311368905, 0.3722692847481635, 0.3580414400717819, 0.3429317341421176, 0.32872427578437985, 0.31462408294983346, 0.29936648858535037, 0.28338619351034866, 0.2659256180403205, 0.24867856063212182, 0.22955586040329967, 0.20937451090305595, 0.18633547535807418, 0.16020317632642106, 0.1339328381422386, 0.10632705714578726, 0.07460210772949522, 0.03920636891281502, 0.0] 
 BI/C: [1.7500709392594724, 1.1086620742200224, 1.0320498070497153, 1.0099534213655699, 0.966156464707991, 0.9346349379972081, 0.9131463501430018, 0.8839736527581363, 0.8664189512683788, 0.8425471614467701, 0.8186922877253417, 0.7970114830267836, 0.7777313997668628, 0.7631376882137362, 0.753144173578475, 0.7432860695326633, 0.7334365747146503, 0.7257086430095864, 0.7191340402260407, 0.7123638575829137, 0.7059684660790632, 0.6992811415770509, 0.6940694411803735, 0.6884057501190203, 0.6832101234765519, 0.6770897272641061, 0.6701681731635515, 0.6650464859323074, 0.6608666219865931, 0.6558462632115205, 0.6507302225755763, 0.6458333333333333] 
 Grad_Magnitude: 1.7500709392594724
Iter: 139 Freeze: 0
freeze!!
{'loss': 0.2716, 'grad_norm': 2.931448459625244, 'learning_rate': 5e-05, 'epoch': 0.24}

whole 0.14615347199999998
self.total_flops 61.38445823999992
I/C: [1, 0.634848598487494, 0.5905519039273256, 0.5775115339936215, 0.5503525654042666, 0.529759502933442, 0.5147370581416764, 0.4938416612548542, 0.4798671816902885, 0.46073360149490455, 0.44060503731744305, 0.42099947209517324, 0.40213303934883815, 0.38586050085895207, 0.37234137542274054, 0.3581142711935517, 0.34300323443818803, 0.3287964466928096, 0.3146969507994027, 0.2994389095369763, 0.2834580763296542, 0.2659946628356738, 0.2487478465023328, 0.22962229962003852, 0.2094403161698313, 0.18639834071994246, 0.1602553155898295, 0.13397916134185942, 0.10636981946352299, 0.07463260472298643, 0.03922367339258596, 0.0] 
 BI/C: [1.5569042150448882, 0.9886401576734253, 0.9227897172427688, 0.9054345076672268, 0.8687757097687809, 0.8430363860899565, 0.8262217585280088, 0.8025714733931364, 0.7892560315294345, 0.7703209450214359, 0.751400706484217, 0.7344138864074162, 0.7195619679782634, 0.7088786334840042, 0.7022873985888204, 0.695815362573666, 0.68934878764723, 0.6847717038787986, 0.6812206307258524, 0.6774944439956321, 0.67410162639859, 0.6704471191084213, 0.6681081424640278, 0.6653645448680928, 0.6630392555225721, 0.6598895902899539, 0.6560218308156958, 0.6537593154468274, 0.6523365084484677, 0.6501608441788944, 0.6479003134129229, 0.6458333333333333] 
 Grad_Magnitude: 1.5569042150448882
Iter: 140 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 61.82291865599992
{'loss': 0.248, 'grad_norm': 1.5400015115737915, 'learning_rate': 5e-05, 'epoch': 0.24}

whole 0.14615347199999998
self.total_flops 62.26137907199992

whole 0.14615347199999998
self.total_flops 62.69983948799992
I/C: [1, 0.6348703206632123, 0.590580896382688, 0.5775437716290783, 0.550389801486963, 0.5298011662922822, 0.5147821821895865, 0.4938908272135561, 0.47991961992572385, 0.46078938148746423, 0.44066425893528244, 0.42106156306814346, 0.40219712827307985, 0.385925434402762, 0.3724080371220169, 0.3581803361602917, 0.34306685869916814, 0.3288602067742416, 0.31476094332047994, 0.29950285108704056, 0.28352143300200194, 0.266054659846178, 0.24880847965679245, 0.22967929492589176, 0.20949678982471875, 0.18645212576740955, 0.1603000099457116, 0.13401828503804947, 0.10640606986297274, 0.07465827816443663, 0.039239462704603954, 0.0] 
 BI/C: [1.3755395878188463, 0.8759290663034213, 0.8201854276679303, 0.807282176475629, 0.7773260472873177, 0.7570163864589184, 0.7445903618673564, 0.7261254537626376, 0.7167903634823397, 0.7024901541545863, 0.6882029803726826, 0.6756231960341081, 0.664928554035007, 0.6579156240385721, 0.6545189151672984, 0.6512252219771362, 0.6479346969395735, 0.6463159839909185, 0.6456038363978276, 0.6447367254522974, 0.6441637238021397, 0.6433574033924284, 0.6437165365078414, 0.6437150847254606, 0.6440855639624326, 0.6437263009416491, 0.6427287127370371, 0.6431520122456243, 0.6443190672836403, 0.6448169359645396, 0.6452407878830965, 0.6458333333333333] 
 Grad_Magnitude: 1.3755395878188463
Iter: 143 Freeze: 0
freeze!!
{'loss': 0.4612, 'grad_norm': 5.565422058105469, 'learning_rate': 5e-05, 'epoch': 0.24}

whole 0.14615347199999998
self.total_flops 63.138299903999915

whole 0.14615347199999998
self.total_flops 63.57676031999991
I/C: [1, 0.6349849775659169, 0.5907188880267837, 0.577694785906831, 0.5505604183215157, 0.5299884177849782, 0.514983630362746, 0.49410823592590075, 0.48015061060601844, 0.46103565686910297, 0.44092493906915015, 0.42133479622378184, 0.40247960536792293, 0.38621333891478604, 0.3727047119723498, 0.3584789125150541, 0.34335620532760547, 0.32915207830636195, 0.3150563602864745, 0.29979500163105643, 0.2838115686946536, 0.26633247816759315, 0.24908964557761126, 0.22994883467605168, 0.20976578309477192, 0.18670844186384153, 0.16051369586962547, 0.13420749343691452, 0.10658349612976707, 0.07478134042024001, 0.039309032737921495, 0.0] 
 BI/C: [1.5424891113637353, 0.9798853843213274, 0.9148783921307823, 0.8978949221433354, 0.8617973295414011, 0.8365116382090749, 0.8200620620694646, 0.7968420734121806, 0.7838559072286936, 0.7653032655452028, 0.746763184642282, 0.7301345918815031, 0.7156153066194957, 0.7052196968308777, 0.698882513313009, 0.692653000705489, 0.6864154720246683, 0.6820649666641565, 0.6787318782548605, 0.6752184425845449, 0.6720361483944957, 0.668583408011518, 0.6664514524474969, 0.663902902947182, 0.6617807181801864, 0.65883129140036, 0.6551457045475051, 0.6530684488143139, 0.6518349509296851, 0.6498258054853477, 0.6477376581161817, 0.6458333333333333] 
 Grad_Magnitude: 1.5424891113637353
Iter: 145 Freeze: 0
freeze!!
{'loss': 0.2833, 'grad_norm': 1.3475000858306885, 'learning_rate': 5e-05, 'epoch': 0.25}

whole 0.14615347199999998
self.total_flops 64.01522073599992

whole 0.14615347199999998
self.total_flops 64.45368115199992
I/C: [1, 0.6349725490647196, 0.5907114334065682, 0.5776891455179962, 0.5505579334406882, 0.5299885928756715, 0.5149857136386055, 0.49411277834835626, 0.48015703873518334, 0.461044198132437, 0.4409355639156753, 0.42134723241847905, 0.4024935878057372, 0.3862279883370116, 0.37272021688222257, 0.3584944209977345, 0.3433708170177099, 0.32916699601383326, 0.31507173757809465, 0.2998103401073544, 0.2838270130335255, 0.26634728880031566, 0.24910507096296988, 0.22996323432859417, 0.2097801866343868, 0.18672300454589238, 0.16052546740513013, 0.1342175709154592, 0.1065934923681133, 0.07478824225855782, 0.039313463081825366, 0.0] 
 BI/C: [1.3629990970839005, 0.8682697816514365, 0.8132583524381937, 0.8006779222526864, 0.7712091356576999, 0.7512933513090668, 0.7391844298629614, 0.7210934604292398, 0.7120446752121119, 0.6980772959383547, 0.6841208639289864, 0.6718530875369153, 0.6614487975709595, 0.6546873745419944, 0.6515122676783976, 0.6484314558390504, 0.6453427423734, 0.6439225806053523, 0.6434015586472491, 0.6427207388129061, 0.6423326447874175, 0.6417050017068859, 0.6422454095175056, 0.6424165003918579, 0.6429651024843807, 0.6427828248295712, 0.6419481974355749, 0.6425355622371222, 0.6438695141053158, 0.6445164547239004, 0.6450940805064135, 0.6458333333333333] 
 Grad_Magnitude: 1.3629990970839005
Iter: 147 Freeze: 0
freeze!!
{'loss': 0.2442, 'grad_norm': 3.0027780532836914, 'learning_rate': 5e-05, 'epoch': 0.25}

whole 0.14615347199999998
self.total_flops 64.89214156799991
I/C: [1, 0.635011422973149, 0.5907562580096911, 0.5777372781544713, 0.5506108882711626, 0.5300458577518506, 0.5150466395878287, 0.4941776378756263, 0.480225439873276, 0.4611162233110489, 0.44101156351874543, 0.4214265680500743, 0.4025755568005139, 0.38631231355341183, 0.37280661226988354, 0.35858164550113175, 0.3434564279703962, 0.32925348507684515, 0.3151587785771402, 0.29989750859126607, 0.2839139017367077, 0.26643008508204785, 0.2491885073964775, 0.23004349926383727, 0.20985965454213973, 0.18679862734381542, 0.16058739648015588, 0.13427082189932427, 0.10664284855379942, 0.07482022215798005, 0.039332445798678735, 0.0] 
 BI/C: [1.528617557622865, 0.9713002435635054, 0.9070803720913141, 0.8904431378876593, 0.8548673486271524, 0.8300043415355056, 0.8138956692350344, 0.7910781909894238, 0.7784008658395443, 0.7602071634846375, 0.7420259317949938, 0.7257375394436116, 0.7115380482962999, 0.7014235933922484, 0.6953307692888311, 0.6893422619186006, 0.6833423507159871, 0.6792163000855518, 0.6760982764824959, 0.6728006107599779, 0.6698308687779675, 0.6665892095886468, 0.6646617107638824, 0.6623169437456793, 0.6603975762848919, 0.6576563378009366, 0.6541768271549007, 0.6522963219263949, 0.6512567211226057, 0.6494387208304729, 0.6475466002120412, 0.6458333333333333] 
 Grad_Magnitude: 1.528617557622865
Iter: 148 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 65.33060198399991
I/C: [1, 0.6349996244662035, 0.5907467061907927, 0.5777283965811296, 0.5506032802329331, 0.5300393079720754, 0.5150407964628831, 0.4941727321839868, 0.4802211747882269, 0.46111270386127595, 0.4410087490312069, 0.4214243978283449, 0.40257393428591465, 0.38631090520742595, 0.37280542326576827, 0.358580396984027, 0.3434549540772636, 0.3292521511825626, 0.31515763175744366, 0.2998964557714698, 0.2839130302726105, 0.26642925220642555, 0.2491880016615426, 0.23004293714362337, 0.20985921902646368, 0.18679829496796937, 0.16058705231845224, 0.13427047790865068, 0.10664294513254449, 0.07482023549283505, 0.03933256503211306, 0.0] 
 BI/C: [1.5205795073692958, 0.9662847616473721, 0.9025157798346453, 0.8860768381249255, 0.8507997258948026, 0.826178690031443, 0.8102654204905431, 0.7876788774176311, 0.7751787311564888, 0.7571913040642713, 0.7392161858583757, 0.723123837916654, 0.7091092560071465, 0.6991578251585273, 0.6932068698549618, 0.6873593773363026, 0.6815003765828997, 0.6775057560251943, 0.6745138977758798, 0.6713432446746792, 0.6684988624961292, 0.6653838593512093, 0.6635763414381257, 0.6613534250185608, 0.6595538139420826, 0.6569366284336633, 0.6535849662477947, 0.6518239100042519, 0.6508996154058563, 0.6492006712440009, 0.6474281096350379, 0.6458333333333333] 
 Grad_Magnitude: 1.5205795073692958
Iter: 149 Freeze: 0
freeze!!
{'loss': 0.2248, 'grad_norm': 1.005064845085144, 'learning_rate': 5e-05, 'epoch': 0.26}

whole 0.14615347199999998
self.total_flops 65.76906239999991

whole 0.14615347199999998
self.total_flops 66.20752281599991
{'loss': 0.3148, 'grad_norm': 1.5926090478897095, 'learning_rate': 5e-05, 'epoch': 0.26}

whole 0.14615347199999998
self.total_flops 66.6459832319999
I/C: [1, 0.6350305784747308, 0.5907814858038148, 0.5777652877270283, 0.5506429817488232, 0.5300817014810832, 0.5150854833730417, 0.4942196675848319, 0.48027019488937167, 0.4611636389604308, 0.44106123664933744, 0.42147777795771857, 0.4026275658307891, 0.3863640611005718, 0.37285891058522064, 0.3586327713628311, 0.34350367291275746, 0.3293003641320575, 0.31520515785688324, 0.29994293178869497, 0.28395808939889405, 0.2664719096550645, 0.2492305183009697, 0.23008324914735936, 0.20989879080161414, 0.18683493706719262, 0.16061819583697898, 0.13429690556461157, 0.10666657682003002, 0.07483573185896451, 0.03934096194907903, 0.0] 
 BI/C: [1.6877283584297145, 1.070264134183458, 0.9972003894252425, 0.9766664318248836, 0.9352244610288026, 0.9056095532207258, 0.8856588301411399, 0.8583010516529526, 0.8421380230194653, 0.8198841479720061, 0.7976433158769232, 0.7774912486951211, 0.7596444705536122, 0.7463065706440148, 0.7374098946039194, 0.728626355212762, 0.7198272599997506, 0.7131011760957093, 0.7074879272739854, 0.7016759076004078, 0.6962257367156862, 0.6904743617404974, 0.6861764323247863, 0.6814156377008582, 0.6771260708179951, 0.6719273395328299, 0.6659116134971982, 0.6616623044872041, 0.6583434194149109, 0.6541613614742107, 0.6498988214235119, 0.6458333333333333] 
 Grad_Magnitude: 1.6877283584297145
Iter: 152 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 67.0844436479999
{'loss': 0.2091, 'grad_norm': 1.4532159566879272, 'learning_rate': 5e-05, 'epoch': 0.26}

whole 0.14615347199999998
self.total_flops 67.5229040639999

whole 0.14615347199999998
self.total_flops 67.9613644799999
I/C: [1, 0.6350973252493504, 0.5908620888035094, 0.5778536651871491, 0.5507431333615832, 0.5301920282496356, 0.515204328821399, 0.4943478856883274, 0.48040630790614086, 0.4613085238241638, 0.44121513439357063, 0.4216386492589865, 0.4027934958137303, 0.3865328811707728, 0.3730312029756929, 0.3588045231642748, 0.34366665941546076, 0.3294644445176511, 0.3153690063847575, 0.3001054780306793, 0.2841194086048383, 0.26662358861609226, 0.2493835108404707, 0.23022832261121803, 0.21004181881835063, 0.18697125267068573, 0.16072785584127194, 0.1343909920499079, 0.10675437736270656, 0.07489289536799415, 0.0393768120053171, 0.0] 
 BI/C: [1.5023724355264347, 0.9551078670951246, 0.8923742939402999, 0.8763919546985258, 0.8418028607330768, 0.8177390253637193, 0.8022751844995215, 0.7802183357869907, 0.7681243290426759, 0.750608983504286, 0.7331049860395771, 0.7174574275577936, 0.7038593839899105, 0.6942723356946967, 0.6886391895005463, 0.6831023924241462, 0.6775435440768264, 0.6738401520377035, 0.6711260638823874, 0.6682340779243651, 0.665664347933489, 0.6628194607363506, 0.6612779109708293, 0.6593170238378028, 0.6577805194502637, 0.6554314686189706, 0.6523418376087137, 0.6508335783919897, 0.6501603474672989, 0.6487046543903158, 0.6471844888583855, 0.6458333333333333] 
 Grad_Magnitude: 1.5023724355264347
Iter: 155 Freeze: 0
freeze!!
{'loss': 0.2144, 'grad_norm': 1.5938018560409546, 'learning_rate': 5e-05, 'epoch': 0.27}

whole 0.14615347199999998
self.total_flops 68.3998248959999
I/C: [1, 0.6351341962337993, 0.5909000035531318, 0.5778924765407977, 0.550784205920634, 0.5302348729318935, 0.5152480656416006, 0.494392795121614, 0.4804520022400829, 0.4613551683846565, 0.44126268801158175, 0.4216866995790272, 0.40284169454013, 0.3865805739748, 0.3730779244652123, 0.3588498570063421, 0.3437101334504704, 0.3295065018026476, 0.31541014710639387, 0.3001450277887819, 0.2841572047175937, 0.2666589962660216, 0.24941750292593043, 0.2302598875797314, 0.21007132227422876, 0.18699870585717077, 0.16075207932336394, 0.13441021397378153, 0.10677089488375077, 0.07490434786407606, 0.039383616715894854, 0.0] 
 BI/C: [1.494862657585746, 0.950491759328443, 0.8881762517755754, 0.8723780155755486, 0.8380678466672093, 0.8142295288689845, 0.7989469561308035, 0.7771046339974248, 0.7651747974258358, 0.7478508731457058, 0.7305381323080848, 0.7150720190593097, 0.701644754564953, 0.6922077134667655, 0.6867043491706211, 0.6812964850066512, 0.6758662956859478, 0.6722828315473153, 0.6696842817081093, 0.6669081713154812, 0.6644526632928294, 0.6617229489028971, 0.6602909936058058, 0.6584410976473085, 0.6570138875487026, 0.6547783290679822, 0.6518052119003059, 0.650404604229538, 0.6498365931994716, 0.6484888028696578, 0.6470774117309729, 0.6458333333333333] 
 Grad_Magnitude: 1.494862657585746
Iter: 156 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 68.8382853119999
{'loss': 0.2233, 'grad_norm': 1.0663989782333374, 'learning_rate': 5e-05, 'epoch': 0.27}

whole 0.14615347199999998
self.total_flops 69.2767457279999

whole 0.14615347199999998
self.total_flops 69.7152061439999
{'loss': 0.1139, 'grad_norm': 1.1016470193862915, 'learning_rate': 5e-05, 'epoch': 0.27}

whole 0.14615347199999998
self.total_flops 70.15366655999989
I/C: [1, 0.6351735441941787, 0.590945778898825, 0.5779416544605713, 0.5508382824610457, 0.5302935018382425, 0.5153103158571822, 0.49445887020258367, 0.4805213849816485, 0.4614277917244832, 0.4413383775729924, 0.42176450346835287, 0.402920821183333, 0.38665948361843117, 0.37315730598242464, 0.35892699334140976, 0.34378236745805874, 0.32957764447291205, 0.3154807179495964, 0.3002139470116967, 0.2842250074642804, 0.2667218885365769, 0.24948025176819172, 0.23031867139009551, 0.21012808521375223, 0.18705283222788865, 0.16079640671600534, 0.134446528262801, 0.10680469269535564, 0.07492657366357496, 0.03939690198548006, 0.0] 
 BI/C: [1.3215406490747121, 0.8427533316638466, 0.7900855820383348, 0.7785375523404405, 0.7506255828938726, 0.7319706250132243, 0.7208780881311961, 0.7039864030624818, 0.6958571191691061, 0.6829589114935563, 0.6700702297178527, 0.6588129295791438, 0.6493571826642535, 0.6434274556941627, 0.6409759717514472, 0.6386064205787035, 0.6362149153539762, 0.6354595391690553, 0.6355753704810412, 0.6355333978637177, 0.6357753588277726, 0.6357721474557216, 0.6369199091704068, 0.6376955658765063, 0.6388464030611043, 0.6392823372961514, 0.6390620360293275, 0.6402334915989902, 0.6421444762120189, 0.643361494646954, 0.6445242277830341, 0.6458333333333333] 
 Grad_Magnitude: 1.3215406490747121
Iter: 160 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 70.59212697599989
I/C: [1, 0.6351798786366594, 0.59095305863999, 0.5779495036837194, 0.5508469836020888, 0.5303029461244203, 0.5153203960843377, 0.4944696183066574, 0.4805327470660584, 0.46143978173235095, 0.4413510135754915, 0.42177769338776705, 0.4029344711277118, 0.3866734300767519, 0.37317147465152195, 0.35894112692113284, 0.3437956755429013, 0.32959096650445446, 0.31549396989963346, 0.3002268868880442, 0.28423777525309135, 0.2667338017701675, 0.24949210221249818, 0.2303297410315916, 0.21013887830721592, 0.18706308643353464, 0.1608045153231335, 0.1344533517088884, 0.10681113792013851, 0.07493087662393115, 0.03939953677553587, 0.0] 
 BI/C: [1.4827339753473394, 0.9430152284592502, 0.8813834204692358, 0.8658862798252966, 0.8320295763207146, 0.8085588000865648, 0.7935726770307336, 0.7720800628427662, 0.7604185252848619, 0.7434063590855267, 0.7264048631152065, 0.7112335894395412, 0.6980834726347523, 0.6888892526012769, 0.683597433734865, 0.6783972652743548, 0.6731716858033001, 0.6697826550857369, 0.6673710176171233, 0.6647821158239231, 0.6625119204261916, 0.6599660895202316, 0.6587123089544553, 0.6570404857085912, 0.6557900272037445, 0.6537372970235784, 0.6509472292019829, 0.6497193667966661, 0.6493218763082083, 0.648144761976758, 0.6469071369212628, 0.6458333333333333] 
 Grad_Magnitude: 1.4827339753473394
Iter: 161 Freeze: 0
freeze!!
{'loss': 0.2114, 'grad_norm': 1.9915670156478882, 'learning_rate': 5e-05, 'epoch': 0.28}

whole 0.14615347199999998
self.total_flops 71.03058739199989

whole 0.14615347199999998
self.total_flops 71.46904780799989
I/C: [1, 0.635222338067168, 0.5910018463092594, 0.5780017754004653, 0.5509037639351922, 0.5303641513252089, 0.5153853305063729, 0.4945384361139443, 0.48060510920549865, 0.4615156146516241, 0.44142991289067396, 0.42185885399783624, 0.4030174667560328, 0.3867572839324716, 0.3732562749170439, 0.3590246934454704, 0.3438747875869332, 0.3296699173895635, 0.3155730226445287, 0.30030438890134087, 0.28431364837428896, 0.2668057071977417, 0.24956339824142845, 0.2303974838828867, 0.21020548482211648, 0.1871232645261677, 0.1608532458050272, 0.13449339919901904, 0.10684767257516402, 0.07495562127830407, 0.03941387017409751, 0.0] 
 BI/C: [1.6463425178109032, 1.0448395112685795, 0.9741168231968587, 0.9546145920737259, 0.9147282656395206, 0.886373442640076, 0.8674381848350833, 0.8412784545147918, 0.8260338546351372, 0.8048478829656138, 0.7836729937618383, 0.7645290460522903, 0.7476285932056742, 0.7351192421122543, 0.726942936766915, 0.7188658622122711, 0.7107571224050409, 0.7046924511893967, 0.6997133029086191, 0.6945356797556552, 0.6897119611656429, 0.6845801386117648, 0.6808862014327124, 0.6767256113088795, 0.6730351135698525, 0.6684497226792323, 0.6630422881109895, 0.6593722131414886, 0.6566282776206793, 0.6530135395610139, 0.6493332738471609, 0.6458333333333333] 
 Grad_Magnitude: 1.6463425178109032
Iter: 163 Freeze: 0
freeze!!
{'loss': 0.4629, 'grad_norm': 4.731851577758789, 'learning_rate': 5e-05, 'epoch': 0.28}

whole 0.14615347199999998
self.total_flops 71.90750822399988
I/C: [1, 0.6353107495305541, 0.5911065852202669, 0.5781160990383017, 0.5510325448078758, 0.5305057517827978, 0.5155376247284137, 0.4947022047323588, 0.4807790999484516, 0.4617001255915572, 0.44162613713820625, 0.4220648589327837, 0.4032306810182666, 0.3869737397435666, 0.3734786151061538, 0.3592456448843106, 0.3440868958006858, 0.3298806672435199, 0.3157838839687166, 0.30051199325647276, 0.2845205076558599, 0.26699785520235125, 0.24976006713504373, 0.230583062533211, 0.2103866723122954, 0.18729915767176902, 0.16099322628482246, 0.13461182999983087, 0.10695919904320401, 0.07503244106556169, 0.039459415268912654, 0.0] 
 BI/C: [1.466134450825076, 0.9328790815148663, 0.8721983233384603, 0.8571211837906147, 0.823897147679586, 0.8009393466486147, 0.7863665382719998, 0.7653603699072185, 0.7540723347259145, 0.7374929988150377, 0.7209242744508062, 0.7061612857514012, 0.6933927948029033, 0.6845300749811063, 0.6795286538462793, 0.6746079111882094, 0.6696517680072291, 0.666523577877365, 0.6643635195636775, 0.6620237208288209, 0.6600014356402893, 0.6576932990173219, 0.6566818293863304, 0.6552425894566112, 0.6542275741357512, 0.6524152540933597, 0.6498506195609254, 0.6488445806349701, 0.6486735693957907, 0.6477113601820567, 0.6466948030506872, 0.6458333333333333] 
 Grad_Magnitude: 1.466134450825076
Iter: 164 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 72.34596863999988
I/C: [1, 0.6353296701413879, 0.5911276936598937, 0.5781384501642585, 0.5510564832268947, 0.530531257810766, 0.5155644444666002, 0.4947302264514695, 0.48080840314168277, 0.46173065250468714, 0.44165780087095396, 0.42209728354078996, 0.4032633683419029, 0.38700640779626766, 0.3735115330245967, 0.3592778444250147, 0.3441173169819028, 0.3299102511304506, 0.31581274390596165, 0.3005401278678446, 0.2845480060924036, 0.2670229363793357, 0.24978513728102542, 0.2306068235668648, 0.21040938999982903, 0.187320112049113, 0.16101016765430054, 0.13462541561952024, 0.10697209008371485, 0.07504123697416873, 0.039464645266180556, 0.0] 
 BI/C: [1.4593320016136395, 0.9286744833950491, 0.8683744120480326, 0.8534649453325137, 0.8204931639472042, 0.7977398629650466, 0.7833322311162344, 0.7625208690973724, 0.7513825744578414, 0.7349773828274051, 0.7185825787038527, 0.703984640116972, 0.6913713538748857, 0.682645401050669, 0.6777631109561494, 0.6729601383901309, 0.6681209419874103, 0.6651022125247256, 0.6630472773121141, 0.6608134784298214, 0.6588958399168319, 0.6566922528755542, 0.6557813656958972, 0.6544437069904147, 0.6535285781333777, 0.6518194038199966, 0.6493600080280866, 0.6484526400442948, 0.6483782476411092, 0.6475144060955097, 0.6465970074134754, 0.6458333333333333] 
 Grad_Magnitude: 1.4593320016136395
Iter: 165 Freeze: 0
freeze!!
{'loss': 0.2777, 'grad_norm': 0.8486737012863159, 'learning_rate': 5e-05, 'epoch': 0.28}

whole 0.14615347199999998
self.total_flops 72.78442905599988
I/C: [1, 0.6353357820154677, 0.5911343937992364, 0.5781454807324847, 0.5510639102584688, 0.5305390840096963, 0.515572567410629, 0.49473857996913045, 0.48081701910510644, 0.4617394186193982, 0.44166663853428095, 0.42210586373528675, 0.40327162380094644, 0.3870141779057688, 0.37351902002914594, 0.35928475170383256, 0.3441228700849153, 0.3299155470723841, 0.3158178253048209, 0.3005449165010457, 0.2845525019788412, 0.2670270009569653, 0.24978918374681572, 0.2306105733587738, 0.21041291468692613, 0.18732345758000674, 0.1610130909872384, 0.13462756022303235, 0.10697412022840294, 0.07504276688388431, 0.039465438525509385, 0.0] 
 BI/C: [1.4526594717852583, 0.924532238560762, 0.864603768906727, 0.8498579768648926, 0.8171325247296543, 0.7945788103786519, 0.7803324517614821, 0.7597115427966579, 0.7487194974988219, 0.732484488712696, 0.7162597204553836, 0.701823229143604, 0.6893622580124997, 0.6807706957031252, 0.6760054591555779, 0.6713188983710288, 0.6665955644578535, 0.6636854848887778, 0.6617348470547938, 0.6596061077065094, 0.6577921008781916, 0.6556933574664325, 0.6548817545146317, 0.6536451217101312, 0.6528291567529534, 0.6512228225759729, 0.648869546197682, 0.648061000228081, 0.6480820704107018, 0.6473170861657105, 0.64649869115584, 0.6458333333333333] 
 Grad_Magnitude: 1.4526594717852583
Iter: 166 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 73.22288947199988
I/C: [1, 0.635338566436436, 0.5911379249463231, 0.5781493575940674, 0.5510681707483721, 0.5305437996352906, 0.5155775987381963, 0.4947439222975915, 0.4808226278401497, 0.4617452584992168, 0.4416725688524043, 0.4221118653717929, 0.40327742501173963, 0.3870195945916693, 0.37352435931242634, 0.3592896178202817, 0.3441272414649581, 0.3299197067504395, 0.3158219511698133, 0.3005487458617027, 0.28455626549384255, 0.2670303848242502, 0.24979244317701405, 0.23061316908751608, 0.21041532451558914, 0.18732565246560284, 0.16101509785836632, 0.13462903573521987, 0.10697570641674783, 0.07504407748580129, 0.03946602394555462, 0.0] 
 BI/C: [1.2847702600817315, 0.820091926589651, 0.7694982411784017, 0.7588647817395774, 0.732329663967221, 0.7147907605002883, 0.7045989199202888, 0.6887692372226966, 0.6814555105194755, 0.6695047178810055, 0.6575628267480804, 0.6472025110233379, 0.6385891316630677, 0.6333977975418601, 0.631590866684654, 0.6298531733154951, 0.628082963678762, 0.6279167052267369, 0.6285991564649756, 0.6291238879427368, 0.6299271658820726, 0.6304783920402119, 0.6321681970179494, 0.6334817402223126, 0.6351676756015376, 0.6361545797183101, 0.6364808958615986, 0.6381732292995398, 0.6405996692314466, 0.6423306995839896, 0.6440142901933458, 0.6458333333333333] 
 Grad_Magnitude: 1.2847702600817315
Iter: 167 Freeze: 0
freeze!!
{'loss': 0.2226, 'grad_norm': 3.0412979125976562, 'learning_rate': 5e-05, 'epoch': 0.29}

whole 0.14615347199999998
self.total_flops 73.66134988799988
I/C: [1, 0.6353744255520861, 0.591180596624279, 0.5781959370153033, 0.5511206539650367, 0.5306013035586515, 0.5156393901845644, 0.4948102443796893, 0.4808930471897923, 0.46181993066050686, 0.44175167566626744, 0.4221947706607159, 0.40336354625437065, 0.3871075287552168, 0.3736146261780815, 0.35937994768936743, 0.34421464726526385, 0.3300071783581102, 0.3159100525731348, 0.30063623488584396, 0.2846433459226482, 0.2671131960226908, 0.24987578610186673, 0.23069290891365865, 0.21049452823841214, 0.1874021852749535, 0.1610770178010291, 0.13468377632524886, 0.10702734815682005, 0.07507986249410416, 0.03948750096826337, 0.0] 
 BI/C: [1.4420070946915338, 0.9179599621518396, 0.8586330056355097, 0.8441524780917685, 0.8118265686279025, 0.7895963812483026, 0.7756112015799881, 0.7552982333288356, 0.7445426548629259, 0.7285824383919525, 0.7126321649020828, 0.69845605461403, 0.6862398215790544, 0.6778627729286153, 0.6732847503207675, 0.6687820485523339, 0.6642399756355029, 0.6615011139007794, 0.6597153356842724, 0.6577514151078205, 0.6561003391616972, 0.6541632571096284, 0.6535081055231962, 0.6524275059106893, 0.6517673015567689, 0.6503210720151071, 0.6481256761278843, 0.6474690454378746, 0.6476392480700647, 0.6470218373607145, 0.646352971205453, 0.6458333333333333] 
 Grad_Magnitude: 1.4420070946915338
Iter: 168 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 74.09981030399987
I/C: [1, 0.6353869757365767, 0.5911946913823752, 0.5782109005118938, 0.5511367337261046, 0.5306184315283716, 0.5156573461661642, 0.4948289422654878, 0.4809124410952481, 0.46183981668393276, 0.4417719211706022, 0.4222149431246779, 0.40338335186435537, 0.3871265950670593, 0.3736334146661823, 0.3593978874274126, 0.3442301589758649, 0.33002227803895523, 0.31592471777994324, 0.300650399730274, 0.2846567469274325, 0.2671257693466795, 0.24988798321293293, 0.2307044651897446, 0.2105057358493022, 0.18741296262811444, 0.16108618344072956, 0.13469132278504417, 0.10703485890324496, 0.07508547873136341, 0.039490274949001175, 0.0] 
 BI/C: [1.2754842746288448, 0.8143755521923168, 0.7643070515980113, 0.753905229083035, 0.7277190506181221, 0.7104626042798833, 0.700498731615312, 0.6849376648776047, 0.677830213408633, 0.6661189066569825, 0.6544162345869942, 0.6442824011947299, 0.6358818414625446, 0.630876790634427, 0.629232510958504, 0.6276543682020886, 0.6260401030844687, 0.6260226042373365, 0.6268481309342959, 0.6275160594476746, 0.6284605358842167, 0.6291520289592747, 0.6309777712120235, 0.6324270403313421, 0.6342483778974792, 0.6353744290407616, 0.6358371596760378, 0.6376610405618106, 0.6402171997367525, 0.6420757625025378, 0.6438884592618327, 0.6458333333333333] 
 Grad_Magnitude: 1.2754842746288448
Iter: 169 Freeze: 0
freeze!!
{'loss': 0.2669, 'grad_norm': 3.031810998916626, 'learning_rate': 5e-05, 'epoch': 0.29}

whole 0.14615347199999998
self.total_flops 74.53827071999987

whole 0.14615347199999998
self.total_flops 74.97673113599987
I/C: [1, 0.6354344791058993, 0.591249879738626, 0.5782704925343847, 0.5512028173116391, 0.5306902006820695, 0.5157339778734221, 0.4949107126122954, 0.4809988615351503, 0.46193121885134214, 0.44186849654859295, 0.42231604173317705, 0.4034873852816031, 0.3872328329199021, 0.3737421417884589, 0.3595066192348661, 0.34433638063228067, 0.33012841854895747, 0.31603094440634266, 0.3007554995963189, 0.28476103471705133, 0.2672230969568898, 0.24998574002901405, 0.2307982570403523, 0.21059929740475655, 0.1875015078475171, 0.16115796745575967, 0.13475294577324862, 0.10709372505529077, 0.07512663431233718, 0.03951469675580868, 0.0] 
 BI/C: [1.4317172138010585, 0.9116424302707372, 0.8528983542096134, 0.8386748297450267, 0.8067360150206543, 0.7848193063962179, 0.7710870621305386, 0.7510720760042593, 0.7405452915654889, 0.7248508380675263, 0.7091659967564696, 0.6952411338480726, 0.6832598762944383, 0.6750891029669388, 0.6706909160276673, 0.6663643729733617, 0.6619948823261264, 0.6594201401592783, 0.6577918395002289, 0.6559855823250881, 0.6544900772141186, 0.6527056981591046, 0.6522006472356818, 0.6512697070416426, 0.6507593196543993, 0.6494652111911609, 0.6474191249009842, 0.6469060490323577, 0.6472199706882239, 0.6467425378257978, 0.6462152018287826, 0.6458333333333333] 
 Grad_Magnitude: 1.4317172138010585
Iter: 171 Freeze: 0
freeze!!
{'loss': 0.1737, 'grad_norm': 0.5214165449142456, 'learning_rate': 5e-05, 'epoch': 0.29}

whole 0.14615347199999998
self.total_flops 75.41519155199987
I/C: [1, 0.6354352995032057, 0.5912510341201205, 0.578271792427768, 0.5512043665516935, 0.5306919500577836, 0.5157358985389311, 0.4949128273963579, 0.48100113530883165, 0.4619336661751443, 0.44187111798281875, 0.4223187931971131, 0.40349006291351275, 0.38723559658438106, 0.3737449846116739, 0.35950943397504387, 0.34433913445326103, 0.33013121633764086, 0.3160337803027872, 0.3007583304042623, 0.2847638744647835, 0.2672257747964604, 0.24998840087885132, 0.23080070019491478, 0.21060155821090257, 0.1875036000277989, 0.16115976173156124, 0.1347543270410506, 0.10709506723527415, 0.07512754965804304, 0.03951517145751025, 0.0] 
 BI/C: [1.4255628137405938, 0.9078143307284309, 0.8494127591678434, 0.8353400908001365, 0.803628410416906, 0.7818956773086632, 0.7683121788346681, 0.7484729632074596, 0.7380811098860651, 0.7225438087427444, 0.7070160687909788, 0.6932406829926565, 0.6814003220525174, 0.6733542360970244, 0.6690645075848207, 0.6648460051813294, 0.660584710261461, 0.6581105490758885, 0.6565787531784487, 0.6548697262638266, 0.6534701275779858, 0.6517827591753544, 0.6513693410863236, 0.6505317164495634, 0.6501128749506438, 0.6489137014951823, 0.6469657082230786, 0.6465440814589075, 0.6469461439106897, 0.6465600370941492, 0.6461242596281539, 0.6458333333333333] 
 Grad_Magnitude: 1.4255628137405938
Iter: 172 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 75.85365196799987
I/C: [1, 0.6354241601598395, 0.5912421167637343, 0.5782635796810361, 0.5511974979287354, 0.5306861488802483, 0.5157308749662277, 0.494908850211264, 0.48099784602556694, 0.46193124168173866, 0.44186951271414415, 0.4223178665239054, 0.4034896763431269, 0.38723547217767756, 0.37374520252166327, 0.35950966826834, 0.34433920653527916, 0.3301314182956351, 0.31603412610832515, 0.3007587409439988, 0.2847643422040131, 0.26722614358702523, 0.24998892507296783, 0.23080121443437077, 0.21060230691211784, 0.18750454180801557, 0.16116068992756957, 0.13475507474909743, 0.10709623837600982, 0.07512820109347469, 0.03951563817511542, 0.0] 
 BI/C: [1.2611454510991706, 0.8055005747477572, 0.7562405433025438, 0.7461948278603701, 0.7205451990725635, 0.7037232119319059, 0.6941101910856716, 0.6789632052345607, 0.6721735379197025, 0.6608320183861071, 0.6494988663682563, 0.6397157808859919, 0.6316443774142084, 0.6269293520508148, 0.6255375022714865, 0.6242083631494174, 0.6228412159713768, 0.623055329789629, 0.6241031253335099, 0.6249940629703188, 0.6261587319700725, 0.6270687074122472, 0.629105880993845, 0.6307676571312869, 0.6328000706766044, 0.6341421145649395, 0.6348215742074892, 0.6368512654204044, 0.6396099724407238, 0.6416709206689102, 0.6436881127494354, 0.6458333333333333] 
 Grad_Magnitude: 1.2611454510991706
Iter: 173 Freeze: 0
freeze!!
{'loss': 0.1722, 'grad_norm': 2.124027729034424, 'learning_rate': 5e-05, 'epoch': 0.3}

whole 0.14615347199999998
self.total_flops 76.29211238399986
I/C: [1, 0.6354456894165182, 0.5912669023933134, 0.5782902233440944, 0.5512267765889962, 0.5307178484424028, 0.515764701264086, 0.49494498938230364, 0.4810360266784959, 0.4619714849388171, 0.44191183508753956, 0.4223621269739173, 0.40353534160180826, 0.38728239103674544, 0.3737934128784748, 0.3595577895547434, 0.3443860169381601, 0.330178293407368, 0.3160811319592228, 0.3008054782066437, 0.28481064879269524, 0.267269223622558, 0.25003183619846664, 0.23084173156766738, 0.2106429688708844, 0.18754307893120986, 0.161191339181245, 0.13478067990463158, 0.10712005282240837, 0.07514490989598559, 0.03952634416308848, 0.0] 
 BI/C: [1.5796388997382664, 1.0036960894718054, 0.9367386908503839, 0.9188966238743703, 0.8815109873042039, 0.8551818750407444, 0.8378817370750569, 0.8136501811835841, 0.7998860165974055, 0.7804203541456052, 0.7609650572592077, 0.7434509767736485, 0.7280800922600394, 0.7169129490059405, 0.7099081859428755, 0.7029803863706474, 0.6960036992542928, 0.6910090991579099, 0.6870587821975578, 0.6829116042553748, 0.6791071549373704, 0.674981235064584, 0.6722700079257122, 0.6690867598266803, 0.6663699137924028, 0.6627866226187028, 0.6583693835994832, 0.6556458521483558, 0.6538379176584558, 0.6511528048539894, 0.6484140065516715, 0.6458333333333333] 
 Grad_Magnitude: 1.5796388997382664
Iter: 174 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 76.73057279999986
{'loss': 0.285, 'grad_norm': 1.4638781547546387, 'learning_rate': 5e-05, 'epoch': 0.3}

whole 0.14615347199999998
self.total_flops 77.16903321599986

whole 0.14615347199999998
self.total_flops 77.60749363199986
I/C: [1, 0.6354947896549638, 0.5913369992074715, 0.5783706788539262, 0.5513240067193138, 0.5308290812723938, 0.5158876800305763, 0.4950814138129095, 0.4811834523534805, 0.4621310172537411, 0.44208367999522774, 0.4225444927940281, 0.40372581178301553, 0.38747802041608237, 0.37399550182141933, 0.3597602978060155, 0.3445823409832069, 0.3303746542011624, 0.3162784355313383, 0.30100099066807273, 0.28500506014858784, 0.26745228633420154, 0.2502168446639852, 0.23101789767182854, 0.21081676432104635, 0.18770997926427907, 0.16132746568362696, 0.13490071250947144, 0.10723572694985481, 0.07522916004426239, 0.039577284203174364, 0.0] 
 BI/C: [1.5705354652475065, 0.9981073737761847, 0.9316859071196885, 0.9140796842494069, 0.8770510799454506, 0.8510102837352282, 0.8339424103757431, 0.8099845762854188, 0.796429731009479, 0.7772069361526751, 0.7579939109480442, 0.7407079401747396, 0.7255492792307993, 0.7145662303616129, 0.7077226829462839, 0.7009487108509921, 0.6941191914747572, 0.6892670510103336, 0.6854540624343524, 0.6814426915968004, 0.6777728235973743, 0.6737743567840344, 0.6711944821296874, 0.6681363548961073, 0.6655476025174643, 0.6620941485657241, 0.6577948154217083, 0.6551915295614361, 0.653507296798477, 0.6509344002819917, 0.6483090731722244, 0.6458333333333333] 
 Grad_Magnitude: 1.5705354652475065
Iter: 177 Freeze: 0
freeze!!
{'loss': 0.264, 'grad_norm': 3.748985767364502, 'learning_rate': 5e-05, 'epoch': 0.3}

whole 0.14615347199999998
self.total_flops 78.04595404799986
I/C: [1, 0.6355716277906711, 0.5914250275112876, 0.5784649355994977, 0.5514271517094672, 0.5309402908342866, 0.5160057743750447, 0.49520680988909205, 0.48131594047957277, 0.4622703133473538, 0.4422298818412927, 0.42269690369915497, 0.4038830942714385, 0.3876383621192621, 0.3741591518170437, 0.3599231439946579, 0.3447401269941899, 0.33053105057924653, 0.3164354343316043, 0.3011554542905262, 0.2851582453003324, 0.26759490177339157, 0.25036007413534767, 0.23115455376558494, 0.21095149366821908, 0.18783941053777437, 0.16143227063451848, 0.13498898636521112, 0.10731918933670805, 0.07528980816453651, 0.039613753774030175, 0.0] 
 BI/C: [1.5616258360185529, 0.9926808022108152, 0.9267685779033763, 0.9093866768715474, 0.8726959795589907, 0.8469290260135655, 0.8300819551989761, 0.8063841185062604, 0.7930295066170573, 0.774038277444941, 0.7550564404130458, 0.737989437666686, 0.7230357060590464, 0.7122315176272382, 0.7055434237677007, 0.6989198804421202, 0.6922367260176292, 0.6875237640399604, 0.6838460935524908, 0.6799681667554524, 0.6764311152085838, 0.6725592506103485, 0.6701080783751928, 0.6671754808717069, 0.6647136513294976, 0.6613896283316778, 0.6572110354370848, 0.654726001300068, 0.6531635078203208, 0.6507065767240373, 0.6481981980082011, 0.6458333333333333] 
 Grad_Magnitude: 1.5616258360185529
Iter: 178 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 78.48441446399985
I/C: [1, 0.6356140582724852, 0.5914751689762714, 0.5785194486634513, 0.5514881550597409, 0.5310069967636833, 0.516077339906097, 0.4952835433134686, 0.4813972959813117, 0.4623564129056, 0.4423208797938088, 0.42279208512615196, 0.40398150616419387, 0.3877388614095721, 0.37426190356249955, 0.36002562111440817, 0.34483893341276084, 0.330629535074156, 0.3165343060979292, 0.30125378461977637, 0.28525548645110393, 0.26768541620333114, 0.25045086149435347, 0.2312413984416821, 0.21103736636738823, 0.18792242991497124, 0.16149882545858033, 0.1350457778857456, 0.10737318289360051, 0.07532897978935013, 0.03963694089280078, 0.0] 
 BI/C: [1.391862394216291, 0.8870896527583271, 0.8306165429436817, 0.8173932483600624, 0.7869626552264282, 0.7662669334172377, 0.7535200616821656, 0.7346672515604316, 0.7250323274614975, 0.7103734093765361, 0.6957227573529864, 0.6827777279749416, 0.6717149997915987, 0.6643493728964145, 0.6606524239858168, 0.6570104595511614, 0.6533122289859183, 0.6513732355186448, 0.65035762321066, 0.6491627209145922, 0.6482712241955136, 0.6470769611651235, 0.6471546151779093, 0.6468001075400849, 0.6468674870106068, 0.6461652032136059, 0.6446927316885368, 0.6447347486348741, 0.6456036230903793, 0.645668831439709, 0.6456884377939237, 0.6458333333333333] 
 Grad_Magnitude: 1.391862394216291
Iter: 179 Freeze: 0
freeze!!
{'loss': 0.2082, 'grad_norm': 0.8223940134048462, 'learning_rate': 5e-05, 'epoch': 0.31}

whole 0.14615347199999998
self.total_flops 78.92287487999985
I/C: [1, 0.6356193395770072, 0.5914811464007332, 0.5785257956230128, 0.5514949663351022, 0.5310142718906725, 0.5160849884236826, 0.49529159816514456, 0.48140571114353975, 0.46236513198164914, 0.4423297823214956, 0.4228010890049228, 0.40399056920085485, 0.3877478077622443, 0.374270883410698, 0.36003425739510103, 0.34484697657495184, 0.3306374781070169, 0.31654215867992297, 0.30126150696354886, 0.2852627831801129, 0.2676920614193444, 0.25045759365237535, 0.23124783761966478, 0.21104359514150564, 0.18792811505216325, 0.16150369831734535, 0.13504989833050887, 0.10737715851984174, 0.07533207042990578, 0.03963861293235031, 0.0] 
 BI/C: [1.38642949838978, 0.8837155395920813, 0.827544954565073, 0.8144549018417143, 0.7842248154120924, 0.7636915745094494, 0.7510760201733989, 0.732378378375661, 0.7228625655189276, 0.7083422846300719, 0.6938300877629244, 0.6810167575972224, 0.6700783316585072, 0.6628223948252935, 0.659220970147204, 0.655673953982356, 0.6520706805026951, 0.6502202529279995, 0.6492896164236398, 0.6481803616567718, 0.6473730968129779, 0.6462640958705581, 0.6464226394649942, 0.6461504289139339, 0.6462985328752067, 0.6456797685949474, 0.6442936835795136, 0.6444162587249816, 0.6453628583438267, 0.6455085309949408, 0.6456085533417494, 0.6458333333333333] 
 Grad_Magnitude: 1.38642949838978
Iter: 180 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 79.36133529599985
I/C: [1, 0.6356244243543894, 0.5914867909021071, 0.5785317220800075, 0.5515010436255183, 0.5310206441397992, 0.5160915594959107, 0.49529838203973164, 0.4814127184909548, 0.46237229107938443, 0.44233692351912246, 0.42280809006601583, 0.4039973250700685, 0.3877542223679234, 0.3742771841581434, 0.36004006966197544, 0.34485213256319164, 0.33064242714240155, 0.3165468297957354, 0.3012659205870435, 0.2852669106311467, 0.2676956554857541, 0.2504610589042969, 0.2312507682652947, 0.2110463041157346, 0.1879304499630727, 0.1615057486902321, 0.13505088924800676, 0.10737823260878539, 0.07533283831296425, 0.03963890389273454, 0.0] 
 BI/C: [1.2270037112250705, 0.7844986624692154, 0.7371833005950971, 0.7279942844252502, 0.7036360083335931, 0.6878596863990922, 0.6790904764792396, 0.664938563958072, 0.658912660182793, 0.6484576701616601, 0.6380096620261262, 0.6290650528945512, 0.6217796628894815, 0.6177532384604618, 0.6169613082421453, 0.6162172198946716, 0.6154232309859441, 0.6161809175199571, 0.6177525843349363, 0.6191662015865053, 0.6208470755199077, 0.6222607540524145, 0.6247965180961721, 0.6269508077526903, 0.6294772991951706, 0.631325026454342, 0.6324937368040867, 0.6349972247613032, 0.6382306207982368, 0.6407549952407371, 0.6432389058194797, 0.6458333333333333] 
 Grad_Magnitude: 1.2270037112250705
Iter: 181 Freeze: 0
freeze!!
{'loss': 0.2714, 'grad_norm': 3.5165910720825195, 'learning_rate': 5e-05, 'epoch': 0.31}

whole 0.14615347199999998
self.total_flops 79.79979571199985
I/C: [1, 0.635691763553616, 0.5915632718803141, 0.5786134152027164, 0.5515900607957457, 0.5311162990221595, 0.5161929560434959, 0.4954058219906275, 0.4815256767709356, 0.4624909662845606, 0.44246124123496094, 0.42293719535974744, 0.4041299832948202, 0.38789005748867667, 0.3744158490975457, 0.3601790850323565, 0.3449877584627442, 0.33077984634511254, 0.3166862148571401, 0.3014036509961825, 0.2854035551573574, 0.267825353299077, 0.250591248671484, 0.23137586929398019, 0.21116942449918613, 0.18804759863169657, 0.16160217829864876, 0.13513235514110408, 0.10745673557704835, 0.07539009377076088, 0.03967166406739398, 0.0] 
 BI/C: [1.224224675777323, 0.7828497609821833, 0.7356977566061395, 0.7265807693377704, 0.7023309830613601, 0.6866425874110325, 0.6779441349695259, 0.6638751938331593, 0.6579130129361288, 0.6475316932653463, 0.6371569759292973, 0.6282811579572483, 0.6210594233282472, 0.6170887561525267, 0.616344794372695, 0.6156463349719128, 0.6148950178341324, 0.6156961323856471, 0.6173094241916437, 0.6187622462635038, 0.6204822102872899, 0.621931603547974, 0.6245058280019694, 0.6266958586297495, 0.6292594101208, 0.6311434945980965, 0.632342129902429, 0.6348766591010943, 0.6381463280299589, 0.6406998718534022, 0.6432126362801696, 0.6458333333333333] 
 Grad_Magnitude: 1.224224675777323
Iter: 182 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 80.23825612799985
I/C: [1, 0.6357340858758066, 0.5916121681410199, 0.5786660484533734, 0.5516480417718752, 0.5311792397403329, 0.5162601051533322, 0.49547737377274725, 0.4816013635089523, 0.462570818943562, 0.44254527105678015, 0.42302486008661083, 0.40422038481697553, 0.3879822011446093, 0.37451014852742537, 0.3602731780220069, 0.3450791334742024, 0.3308707500767811, 0.3167772516422086, 0.3014942728235414, 0.2854933549740111, 0.26790875851223617, 0.25067574900167094, 0.23145612158154275, 0.21124991843643728, 0.18812480351209684, 0.16166452663720787, 0.1351820977992178, 0.10750457248139784, 0.0754247419380913, 0.03969242274343548, 0.0] 
 BI/C: [1.3748816947595206, 0.8766829249593795, 0.8211718761918266, 0.8083725225600334, 0.7785798950335795, 0.7584014661307559, 0.746071997271199, 0.7277111172098858, 0.7184540823830703, 0.704233873090032, 0.6900208522203662, 0.6774903760993266, 0.6668164058001317, 0.6597924358045425, 0.6563925629626853, 0.6530414358330157, 0.6496286559047721, 0.6479615055410308, 0.6472070278744393, 0.6462718697212017, 0.6456364261753957, 0.644692851968625, 0.6450184784205368, 0.6449087420325506, 0.6452218229388497, 0.6447694795753606, 0.6435402325841691, 0.6438134838789593, 0.6449191953365091, 0.6452146217381293, 0.6454646445439772, 0.6458333333333333] 
 Grad_Magnitude: 1.3748816947595206
Iter: 183 Freeze: 0
freeze!!
{'loss': 0.2371, 'grad_norm': 1.1217385530471802, 'learning_rate': 5e-05, 'epoch': 0.31}

whole 0.14615347199999998
self.total_flops 80.67671654399985
I/C: [1, 0.6357437675022265, 0.5916230600661214, 0.5786776316537441, 0.5516604939270705, 0.5311925400770993, 0.5162740864774489, 0.49549195166593807, 0.4816165212903661, 0.46258634224943834, 0.4425611103035563, 0.4230408365021356, 0.40423635787109014, 0.3879979169166766, 0.37452594444028026, 0.36028835011271365, 0.34509321544004656, 0.33088424935655397, 0.31679059232987916, 0.3015074997676181, 0.28550630801981486, 0.2679209137354788, 0.2506875839235683, 0.2314669126085579, 0.21126040176869906, 0.18813442501106864, 0.1616727933725978, 0.13518887306785737, 0.10751125967569528, 0.07542935633790361, 0.03969472829255271, 0.0] 
 BI/C: [1.3697467648734494, 0.8734994694741199, 0.8182748653605127, 0.8056017004959489, 0.7759989121263362, 0.7559743400355671, 0.7437691647729209, 0.7255549668838595, 0.7164105599559031, 0.7023212434387835, 0.6882390138685359, 0.6758328382646218, 0.6652760825786137, 0.6583554416999777, 0.6550457047037583, 0.6517838638670816, 0.6484602102858534, 0.6468761777753189, 0.6462018056163723, 0.6453474739450321, 0.6447916160273106, 0.6439283902174997, 0.6443300246646766, 0.6442974243337591, 0.6446866259342703, 0.6443129158430306, 0.6431649434413277, 0.6435138531700684, 0.6446930000534387, 0.6450638170747139, 0.6453893971229705, 0.6458333333333333] 
 Grad_Magnitude: 1.3697467648734494
Iter: 184 Freeze: 0
freeze!!

whole 0.14615347199999998
self.total_flops 81.11517695999984
I/C: [1, 0.635752199705555, 0.5916330790477196, 0.5786884320031174, 0.5516724063227557, 0.5312055031109169, 0.5162879059859369, 0.4955066148538506, 0.4816318906672056, 0.46260233500218445, 0.4425775795564665, 0.4230575114250345, 0.40425304601662265, 0.388014173195735, 0.3745421015248307, 0.36030365176947593, 0.3451070338882885, 0.3308974784298483, 0.3168035202156982, 0.3015199555615418, 0.2855180183206048, 0.26793114267428153, 0.25069762231311216, 0.23147601131692724, 0.21126891858212152, 0.18814185624295243, 0.16167905634054616, 0.13519362067273105, 0.10751592654226773, 0.07543247569127126, 0.03969633332525536, 0.0] 
 BI/C: [1.3647008277127801, 0.8703696458009251, 0.8154270629837382, 0.802878045758561, 0.7734621404070521, 0.7535890283455257, 0.7415062160574678, 0.7234364538449274, 0.7144028665386722, 0.7004424539519686, 0.6864889080753642, 0.6742049298424704, 0.6637633498782232, 0.6569440461741216, 0.6537226904746563, 0.6505483506109471, 0.6473119031978999, 0.6458095404945805, 0.6452137664129285, 0.6444385719765823, 0.6439605609586079, 0.6431757918499129, 0.6436522618663454, 0.6436955751249289, 0.6441594340295026, 0.6438628954097927, 0.6427949567553921, 0.6432182451396841, 0.644469614143558, 0.6449148432965361, 0.6453151071048019, 0.6458333333333333] 
 Grad_Magnitude: 1.3647008277127801
Iter: 185 Freeze: 0
freeze!!

======== GPU REPORT ========

==============NVSMI LOG==============

Timestamp                                 : Mon Feb 17 11:31:40 2025
Driver Version                            : 560.35.03
CUDA Version                              : 12.6

Attached GPUs                             : 1
GPU 00000000:41:00.0
    Accounting Mode                       : Enabled
    Accounting Mode Buffer Size           : 4000
    Accounted Processes
        Process ID                        : 2651010
            GPU Utilization               : 90 %
            Memory Utilization            : 41 %
            Max memory usage              : 81326 MiB
            Time                          : 0 ms
            Is Running                    : 1

Mon Feb 17 11:31:40 2025       
+-----------------------------------------------------------------------------------------+
| NVIDIA-SMI 560.35.03              Driver Version: 560.35.03      CUDA Version: 12.6     |
|-----------------------------------------+------------------------+----------------------+
| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |
| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |
|                                         |                        |               MIG M. |
|=========================================+========================+======================|
|   0  NVIDIA A100-SXM4-80GB          On  |   00000000:41:00.0 Off |                    0 |
| N/A   68C    P0            454W /  500W |   80355MiB /  81920MiB |    100%      Default |
|                                         |                        |             Disabled |
+-----------------------------------------+------------------------+----------------------+
                                                                                         
+-----------------------------------------------------------------------------------------+
| Processes:                                                                              |
|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |
|        ID   ID                                                               Usage      |
|=========================================================================================|
|    0   N/A  N/A   2651010      C   ...cratch/budgeted_CL_llava/bin/python      80346MiB |
+-----------------------------------------------------------------------------------------+
